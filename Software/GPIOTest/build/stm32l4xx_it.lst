ARM GAS  /tmp/ccgOKvAD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32l4xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	2
  21              		.global	NMI_Handler
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB125:
  27              		.file 1 "Src/stm32l4xx_it.c"
   1:Src/stm32l4xx_it.c **** /** 
   2:Src/stm32l4xx_it.c ****   ******************************************************************************
   3:Src/stm32l4xx_it.c ****   * @file    GPIO/GPIO_IOToggle/Src/stm32l4xx_it.c
   4:Src/stm32l4xx_it.c ****   * @author  MCD Application Team
   5:Src/stm32l4xx_it.c ****   * @version V1.1.0
   6:Src/stm32l4xx_it.c ****   * @date    16-September-2015
   7:Src/stm32l4xx_it.c ****   * @brief   Main Interrupt Service Routines.
   8:Src/stm32l4xx_it.c ****   *          This file provides template for all exceptions handler and
   9:Src/stm32l4xx_it.c ****   *          peripherals interrupt service routine.
  10:Src/stm32l4xx_it.c ****   ******************************************************************************
  11:Src/stm32l4xx_it.c ****   * @attention
  12:Src/stm32l4xx_it.c ****   *
  13:Src/stm32l4xx_it.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  14:Src/stm32l4xx_it.c ****   *
  15:Src/stm32l4xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/stm32l4xx_it.c ****   * are permitted provided that the following conditions are met:
  17:Src/stm32l4xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/stm32l4xx_it.c ****   *      this list of conditions and the following disclaimer.
  19:Src/stm32l4xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/stm32l4xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/stm32l4xx_it.c ****   *      and/or other materials provided with the distribution.
  22:Src/stm32l4xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/stm32l4xx_it.c ****   *      may be used to endorse or promote products derived from this software
  24:Src/stm32l4xx_it.c ****   *      without specific prior written permission.
  25:Src/stm32l4xx_it.c ****   *
  26:Src/stm32l4xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/stm32l4xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/stm32l4xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/stm32l4xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/stm32l4xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/stm32l4xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /tmp/ccgOKvAD.s 			page 2


  32:Src/stm32l4xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/stm32l4xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/stm32l4xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/stm32l4xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/stm32l4xx_it.c ****   *
  37:Src/stm32l4xx_it.c ****   ******************************************************************************
  38:Src/stm32l4xx_it.c ****   */
  39:Src/stm32l4xx_it.c **** 
  40:Src/stm32l4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  41:Src/stm32l4xx_it.c **** #include "main.h"
  42:Src/stm32l4xx_it.c **** #include "stm32l4xx_it.h"
  43:Src/stm32l4xx_it.c **** 
  44:Src/stm32l4xx_it.c **** /** @addtogroup STM32L4xx_HAL_Examples
  45:Src/stm32l4xx_it.c ****   * @{
  46:Src/stm32l4xx_it.c ****   */
  47:Src/stm32l4xx_it.c **** 
  48:Src/stm32l4xx_it.c **** /** @addtogroup GPIO_IOToggle
  49:Src/stm32l4xx_it.c ****   * @{
  50:Src/stm32l4xx_it.c ****   */
  51:Src/stm32l4xx_it.c **** 
  52:Src/stm32l4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  53:Src/stm32l4xx_it.c **** /* Private define ------------------------------------------------------------*/
  54:Src/stm32l4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  55:Src/stm32l4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  56:Src/stm32l4xx_it.c **** 
  57:Src/stm32l4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  58:Src/stm32l4xx_it.c **** /* Private functions ---------------------------------------------------------*/
  59:Src/stm32l4xx_it.c **** 
  60:Src/stm32l4xx_it.c **** /******************************************************************************/
  61:Src/stm32l4xx_it.c **** /*            Cortex-M4 Processor Exceptions Handlers                         */
  62:Src/stm32l4xx_it.c **** /******************************************************************************/
  63:Src/stm32l4xx_it.c **** 
  64:Src/stm32l4xx_it.c **** /**
  65:Src/stm32l4xx_it.c ****   * @brief  This function handles NMI exception.
  66:Src/stm32l4xx_it.c ****   * @param  None
  67:Src/stm32l4xx_it.c ****   * @retval None
  68:Src/stm32l4xx_it.c ****   */
  69:Src/stm32l4xx_it.c **** void NMI_Handler(void)
  70:Src/stm32l4xx_it.c **** {
  28              		.loc 1 70 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  71:Src/stm32l4xx_it.c **** }
  40              		.loc 1 71 0
  41 0004 BD46     		mov	sp, r7
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 13
  44              		@ sp needed
ARM GAS  /tmp/ccgOKvAD.s 			page 3


  45 0006 5DF8047B 		ldr	r7, [sp], #4
  46              	.LCFI3:
  47              		.cfi_restore 7
  48              		.cfi_def_cfa_offset 0
  49 000a 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE125:
  53              		.section	.text.HardFault_Handler,"ax",%progbits
  54              		.align	2
  55              		.global	HardFault_Handler
  56              		.thumb
  57              		.thumb_func
  59              	HardFault_Handler:
  60              	.LFB126:
  72:Src/stm32l4xx_it.c **** 
  73:Src/stm32l4xx_it.c **** /**
  74:Src/stm32l4xx_it.c ****   * @brief  This function handles Hard Fault exception.
  75:Src/stm32l4xx_it.c ****   * @param  None
  76:Src/stm32l4xx_it.c ****   * @retval None
  77:Src/stm32l4xx_it.c ****   */
  78:Src/stm32l4xx_it.c **** void HardFault_Handler(void)
  79:Src/stm32l4xx_it.c **** {
  61              		.loc 1 79 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 80B4     		push	{r7}
  67              	.LCFI4:
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              	.LCFI5:
  72              		.cfi_def_cfa_register 7
  73              	.L3:
  80:Src/stm32l4xx_it.c ****   /* Go to infinite loop when Hard Fault exception occurs */
  81:Src/stm32l4xx_it.c ****   while (1)
  82:Src/stm32l4xx_it.c ****   {
  83:Src/stm32l4xx_it.c ****   }
  74              		.loc 1 83 0 discriminator 1
  75 0004 FEE7     		b	.L3
  76              		.cfi_endproc
  77              	.LFE126:
  79 0006 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  80              		.align	2
  81              		.global	MemManage_Handler
  82              		.thumb
  83              		.thumb_func
  85              	MemManage_Handler:
  86              	.LFB127:
  84:Src/stm32l4xx_it.c **** }
  85:Src/stm32l4xx_it.c **** 
  86:Src/stm32l4xx_it.c **** /**
  87:Src/stm32l4xx_it.c ****   * @brief  This function handles Memory Manage exception.
  88:Src/stm32l4xx_it.c ****   * @param  None
  89:Src/stm32l4xx_it.c ****   * @retval None
  90:Src/stm32l4xx_it.c ****   */
ARM GAS  /tmp/ccgOKvAD.s 			page 4


  91:Src/stm32l4xx_it.c **** void MemManage_Handler(void)
  92:Src/stm32l4xx_it.c **** {
  87              		.loc 1 92 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92 0000 80B4     		push	{r7}
  93              	.LCFI6:
  94              		.cfi_def_cfa_offset 4
  95              		.cfi_offset 7, -4
  96 0002 00AF     		add	r7, sp, #0
  97              	.LCFI7:
  98              		.cfi_def_cfa_register 7
  99              	.L5:
  93:Src/stm32l4xx_it.c ****   /* Go to infinite loop when Memory Manage exception occurs */
  94:Src/stm32l4xx_it.c ****   while (1)
  95:Src/stm32l4xx_it.c ****   {
  96:Src/stm32l4xx_it.c ****   }
 100              		.loc 1 96 0 discriminator 1
 101 0004 FEE7     		b	.L5
 102              		.cfi_endproc
 103              	.LFE127:
 105 0006 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
 106              		.align	2
 107              		.global	BusFault_Handler
 108              		.thumb
 109              		.thumb_func
 111              	BusFault_Handler:
 112              	.LFB128:
  97:Src/stm32l4xx_it.c **** }
  98:Src/stm32l4xx_it.c **** 
  99:Src/stm32l4xx_it.c **** /**
 100:Src/stm32l4xx_it.c ****   * @brief  This function handles Bus Fault exception.
 101:Src/stm32l4xx_it.c ****   * @param  None
 102:Src/stm32l4xx_it.c ****   * @retval None
 103:Src/stm32l4xx_it.c ****   */
 104:Src/stm32l4xx_it.c **** void BusFault_Handler(void)
 105:Src/stm32l4xx_it.c **** {
 113              		.loc 1 105 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118 0000 80B4     		push	{r7}
 119              	.LCFI8:
 120              		.cfi_def_cfa_offset 4
 121              		.cfi_offset 7, -4
 122 0002 00AF     		add	r7, sp, #0
 123              	.LCFI9:
 124              		.cfi_def_cfa_register 7
 125              	.L7:
 106:Src/stm32l4xx_it.c ****   /* Go to infinite loop when Bus Fault exception occurs */
 107:Src/stm32l4xx_it.c ****   while (1)
 108:Src/stm32l4xx_it.c ****   {
 109:Src/stm32l4xx_it.c ****   }
 126              		.loc 1 109 0 discriminator 1
ARM GAS  /tmp/ccgOKvAD.s 			page 5


 127 0004 FEE7     		b	.L7
 128              		.cfi_endproc
 129              	.LFE128:
 131 0006 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
 132              		.align	2
 133              		.global	UsageFault_Handler
 134              		.thumb
 135              		.thumb_func
 137              	UsageFault_Handler:
 138              	.LFB129:
 110:Src/stm32l4xx_it.c **** }
 111:Src/stm32l4xx_it.c **** 
 112:Src/stm32l4xx_it.c **** /**
 113:Src/stm32l4xx_it.c ****   * @brief  This function handles Usage Fault exception.
 114:Src/stm32l4xx_it.c ****   * @param  None
 115:Src/stm32l4xx_it.c ****   * @retval None
 116:Src/stm32l4xx_it.c ****   */
 117:Src/stm32l4xx_it.c **** void UsageFault_Handler(void)
 118:Src/stm32l4xx_it.c **** {
 139              		.loc 1 118 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI10:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0002 00AF     		add	r7, sp, #0
 149              	.LCFI11:
 150              		.cfi_def_cfa_register 7
 151              	.L9:
 119:Src/stm32l4xx_it.c ****   /* Go to infinite loop when Usage Fault exception occurs */
 120:Src/stm32l4xx_it.c ****   while (1)
 121:Src/stm32l4xx_it.c ****   {
 122:Src/stm32l4xx_it.c ****   }
 152              		.loc 1 122 0 discriminator 1
 153 0004 FEE7     		b	.L9
 154              		.cfi_endproc
 155              	.LFE129:
 157 0006 00BF     		.section	.text.SVC_Handler,"ax",%progbits
 158              		.align	2
 159              		.global	SVC_Handler
 160              		.thumb
 161              		.thumb_func
 163              	SVC_Handler:
 164              	.LFB130:
 123:Src/stm32l4xx_it.c **** }
 124:Src/stm32l4xx_it.c **** 
 125:Src/stm32l4xx_it.c **** /**
 126:Src/stm32l4xx_it.c ****   * @brief  This function handles SVCall exception.
 127:Src/stm32l4xx_it.c ****   * @param  None
 128:Src/stm32l4xx_it.c ****   * @retval None
 129:Src/stm32l4xx_it.c ****   */
 130:Src/stm32l4xx_it.c **** void SVC_Handler(void)
 131:Src/stm32l4xx_it.c **** {
 165              		.loc 1 131 0
ARM GAS  /tmp/ccgOKvAD.s 			page 6


 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 1, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0000 80B4     		push	{r7}
 171              	.LCFI12:
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 7, -4
 174 0002 00AF     		add	r7, sp, #0
 175              	.LCFI13:
 176              		.cfi_def_cfa_register 7
 132:Src/stm32l4xx_it.c **** }
 177              		.loc 1 132 0
 178 0004 BD46     		mov	sp, r7
 179              	.LCFI14:
 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 0006 5DF8047B 		ldr	r7, [sp], #4
 183              	.LCFI15:
 184              		.cfi_restore 7
 185              		.cfi_def_cfa_offset 0
 186 000a 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE130:
 190              		.section	.text.DebugMon_Handler,"ax",%progbits
 191              		.align	2
 192              		.global	DebugMon_Handler
 193              		.thumb
 194              		.thumb_func
 196              	DebugMon_Handler:
 197              	.LFB131:
 133:Src/stm32l4xx_it.c **** 
 134:Src/stm32l4xx_it.c **** /**
 135:Src/stm32l4xx_it.c ****   * @brief  This function handles Debug Monitor exception.
 136:Src/stm32l4xx_it.c ****   * @param  None
 137:Src/stm32l4xx_it.c ****   * @retval None
 138:Src/stm32l4xx_it.c ****   */
 139:Src/stm32l4xx_it.c **** void DebugMon_Handler(void)
 140:Src/stm32l4xx_it.c **** {
 198              		.loc 1 140 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI16:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 00AF     		add	r7, sp, #0
 208              	.LCFI17:
 209              		.cfi_def_cfa_register 7
 141:Src/stm32l4xx_it.c **** }
 210              		.loc 1 141 0
 211 0004 BD46     		mov	sp, r7
 212              	.LCFI18:
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
ARM GAS  /tmp/ccgOKvAD.s 			page 7


 215 0006 5DF8047B 		ldr	r7, [sp], #4
 216              	.LCFI19:
 217              		.cfi_restore 7
 218              		.cfi_def_cfa_offset 0
 219 000a 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE131:
 223              		.section	.text.PendSV_Handler,"ax",%progbits
 224              		.align	2
 225              		.global	PendSV_Handler
 226              		.thumb
 227              		.thumb_func
 229              	PendSV_Handler:
 230              	.LFB132:
 142:Src/stm32l4xx_it.c **** 
 143:Src/stm32l4xx_it.c **** /**
 144:Src/stm32l4xx_it.c ****   * @brief  This function handles PendSVC exception.
 145:Src/stm32l4xx_it.c ****   * @param  None
 146:Src/stm32l4xx_it.c ****   * @retval None
 147:Src/stm32l4xx_it.c ****   */
 148:Src/stm32l4xx_it.c **** void PendSV_Handler(void)
 149:Src/stm32l4xx_it.c **** {
 231              		.loc 1 149 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236 0000 80B4     		push	{r7}
 237              	.LCFI20:
 238              		.cfi_def_cfa_offset 4
 239              		.cfi_offset 7, -4
 240 0002 00AF     		add	r7, sp, #0
 241              	.LCFI21:
 242              		.cfi_def_cfa_register 7
 150:Src/stm32l4xx_it.c **** }
 243              		.loc 1 150 0
 244 0004 BD46     		mov	sp, r7
 245              	.LCFI22:
 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0006 5DF8047B 		ldr	r7, [sp], #4
 249              	.LCFI23:
 250              		.cfi_restore 7
 251              		.cfi_def_cfa_offset 0
 252 000a 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE132:
 256              		.section	.text.SysTick_Handler,"ax",%progbits
 257              		.align	2
 258              		.global	SysTick_Handler
 259              		.thumb
 260              		.thumb_func
 262              	SysTick_Handler:
 263              	.LFB133:
 151:Src/stm32l4xx_it.c **** 
 152:Src/stm32l4xx_it.c **** /**
 153:Src/stm32l4xx_it.c ****   * @brief  This function handles SysTick Handler.
ARM GAS  /tmp/ccgOKvAD.s 			page 8


 154:Src/stm32l4xx_it.c ****   * @param  None
 155:Src/stm32l4xx_it.c ****   * @retval None
 156:Src/stm32l4xx_it.c ****   */
 157:Src/stm32l4xx_it.c **** void SysTick_Handler(void)
 158:Src/stm32l4xx_it.c **** {
 264              		.loc 1 158 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI24:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 00AF     		add	r7, sp, #0
 274              	.LCFI25:
 275              		.cfi_def_cfa_register 7
 159:Src/stm32l4xx_it.c ****   HAL_IncTick();
 276              		.loc 1 159 0
 277 0004 FFF7FEFF 		bl	HAL_IncTick
 160:Src/stm32l4xx_it.c **** }
 278              		.loc 1 160 0
 279 0008 80BD     		pop	{r7, pc}
 280              		.cfi_endproc
 281              	.LFE133:
 283 000a 00BF     		.text
 284              	.Letext0:
 285              		.file 2 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 286              		.file 3 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 287              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccgOKvAD.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_it.c
     /tmp/ccgOKvAD.s:20     .text.NMI_Handler:00000000 $t
     /tmp/ccgOKvAD.s:25     .text.NMI_Handler:00000000 NMI_Handler
     /tmp/ccgOKvAD.s:54     .text.HardFault_Handler:00000000 $t
     /tmp/ccgOKvAD.s:59     .text.HardFault_Handler:00000000 HardFault_Handler
     /tmp/ccgOKvAD.s:80     .text.MemManage_Handler:00000000 $t
     /tmp/ccgOKvAD.s:85     .text.MemManage_Handler:00000000 MemManage_Handler
     /tmp/ccgOKvAD.s:106    .text.BusFault_Handler:00000000 $t
     /tmp/ccgOKvAD.s:111    .text.BusFault_Handler:00000000 BusFault_Handler
     /tmp/ccgOKvAD.s:132    .text.UsageFault_Handler:00000000 $t
     /tmp/ccgOKvAD.s:137    .text.UsageFault_Handler:00000000 UsageFault_Handler
     /tmp/ccgOKvAD.s:158    .text.SVC_Handler:00000000 $t
     /tmp/ccgOKvAD.s:163    .text.SVC_Handler:00000000 SVC_Handler
     /tmp/ccgOKvAD.s:191    .text.DebugMon_Handler:00000000 $t
     /tmp/ccgOKvAD.s:196    .text.DebugMon_Handler:00000000 DebugMon_Handler
     /tmp/ccgOKvAD.s:224    .text.PendSV_Handler:00000000 $t
     /tmp/ccgOKvAD.s:229    .text.PendSV_Handler:00000000 PendSV_Handler
     /tmp/ccgOKvAD.s:257    .text.SysTick_Handler:00000000 $t
     /tmp/ccgOKvAD.s:262    .text.SysTick_Handler:00000000 SysTick_Handler
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
