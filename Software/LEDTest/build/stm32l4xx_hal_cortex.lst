ARM GAS  /tmp/ccYImk4r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32l4xx_hal_cortex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NVIC_SetPriorityGrouping,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	NVIC_SetPriorityGrouping:
  25              	.LFB106:
  26              		.file 1 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cm4.h ****  *
   7:Drivers/CMSIS/Include/core_cm4.h ****  * @note
   8:Drivers/CMSIS/Include/core_cm4.h ****  *
   9:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cm4.h **** 
  12:Drivers/CMSIS/Include/core_cm4.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cm4.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cm4.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cm4.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cm4.h ****    *
  24:Drivers/CMSIS/Include/core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARM GAS  /tmp/ccYImk4r.s 			page 2


  33:Drivers/CMSIS/Include/core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cm4.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cm4.h **** 
  37:Drivers/CMSIS/Include/core_cm4.h **** 
  38:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __ICCARM__ )
  39:Drivers/CMSIS/Include/core_cm4.h ****  #pragma system_include  /* treat file as system include file for MISRA check */
  40:Drivers/CMSIS/Include/core_cm4.h **** #endif
  41:Drivers/CMSIS/Include/core_cm4.h **** 
  42:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  43:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  44:Drivers/CMSIS/Include/core_cm4.h **** 
  45:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  46:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  47:Drivers/CMSIS/Include/core_cm4.h **** #endif
  48:Drivers/CMSIS/Include/core_cm4.h **** 
  49:Drivers/CMSIS/Include/core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  50:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  51:Drivers/CMSIS/Include/core_cm4.h **** 
  52:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  53:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  56:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  57:Drivers/CMSIS/Include/core_cm4.h **** 
  58:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  59:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  60:Drivers/CMSIS/Include/core_cm4.h ****  */
  61:Drivers/CMSIS/Include/core_cm4.h **** 
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  64:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  65:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  66:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup Cortex_M4
  67:Drivers/CMSIS/Include/core_cm4.h ****   @{
  68:Drivers/CMSIS/Include/core_cm4.h ****  */
  69:Drivers/CMSIS/Include/core_cm4.h **** 
  70:Drivers/CMSIS/Include/core_cm4.h **** /*  CMSIS CM4 definitions */
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04)                                   /*!< [31:16] CMSIS HAL m
  72:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x00)                                   /*!< [15:0]  CMSIS HAL s
  73:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16) | \
  74:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB          )     /*!< CMSIS HAL version n
  75:Drivers/CMSIS/Include/core_cm4.h **** 
  76:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (0x04)                                   /*!< Cortex-M Core      
  77:Drivers/CMSIS/Include/core_cm4.h **** 
  78:Drivers/CMSIS/Include/core_cm4.h **** 
  79:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __CC_ARM )
  80:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  81:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  82:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static __inline
  83:Drivers/CMSIS/Include/core_cm4.h **** 
  84:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
  85:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  86:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  87:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  88:Drivers/CMSIS/Include/core_cm4.h **** 
  89:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
ARM GAS  /tmp/ccYImk4r.s 			page 3


  90:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  91:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  92:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  93:Drivers/CMSIS/Include/core_cm4.h **** 
  94:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
  95:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  96:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
  97:Drivers/CMSIS/Include/core_cm4.h **** 
  98:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
  99:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 100:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 101:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 102:Drivers/CMSIS/Include/core_cm4.h **** 
 103:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 104:Drivers/CMSIS/Include/core_cm4.h ****   #define __packed
 105:Drivers/CMSIS/Include/core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 106:Drivers/CMSIS/Include/core_cm4.h ****   #define __INLINE         inline                                    /*use -pc99 on compile line !<
 107:Drivers/CMSIS/Include/core_cm4.h ****   #define __STATIC_INLINE  static inline
 108:Drivers/CMSIS/Include/core_cm4.h **** 
 109:Drivers/CMSIS/Include/core_cm4.h **** #endif
 110:Drivers/CMSIS/Include/core_cm4.h **** 
 111:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 112:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 113:Drivers/CMSIS/Include/core_cm4.h **** */
 114:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
 115:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
 116:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 117:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 118:Drivers/CMSIS/Include/core_cm4.h ****     #else
 119:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 120:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 121:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 122:Drivers/CMSIS/Include/core_cm4.h ****   #else
 123:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 124:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 125:Drivers/CMSIS/Include/core_cm4.h **** 
 126:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 127:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 128:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 129:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 130:Drivers/CMSIS/Include/core_cm4.h ****     #else
 131:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 132:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 133:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 134:Drivers/CMSIS/Include/core_cm4.h ****   #else
 135:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 136:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 137:Drivers/CMSIS/Include/core_cm4.h **** 
 138:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 139:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 140:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 141:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 142:Drivers/CMSIS/Include/core_cm4.h ****     #else
 143:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 144:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 145:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 146:Drivers/CMSIS/Include/core_cm4.h ****   #else
ARM GAS  /tmp/ccYImk4r.s 			page 4


 147:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 148:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm4.h **** 
 150:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TMS470__ )
 151:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 152:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 153:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 154:Drivers/CMSIS/Include/core_cm4.h ****     #else
 155:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 156:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 157:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 158:Drivers/CMSIS/Include/core_cm4.h ****   #else
 159:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 160:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 163:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 164:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 165:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 166:Drivers/CMSIS/Include/core_cm4.h ****     #else
 167:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 168:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 169:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 170:Drivers/CMSIS/Include/core_cm4.h ****   #else
 171:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 172:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 173:Drivers/CMSIS/Include/core_cm4.h **** 
 174:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )		/* Cosmic */
 175:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400)		// FPU present for parser
 176:Drivers/CMSIS/Include/core_cm4.h ****     #if (__FPU_PRESENT == 1)
 177:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1
 178:Drivers/CMSIS/Include/core_cm4.h ****     #else
 179:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 180:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0
 181:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 182:Drivers/CMSIS/Include/core_cm4.h ****   #else
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0
 184:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 185:Drivers/CMSIS/Include/core_cm4.h **** #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>                      /* standard types definitions                      */
 188:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmInstr.h>                /* Core Instruction Access                         */
 189:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmFunc.h>                 /* Core Function Access                            */
 190:Drivers/CMSIS/Include/core_cm4.h **** #include <core_cmSimd.h>                 /* Compiler specific SIMD Intrinsics               */
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 193:Drivers/CMSIS/Include/core_cm4.h **** }
 194:Drivers/CMSIS/Include/core_cm4.h **** #endif
 195:Drivers/CMSIS/Include/core_cm4.h **** 
 196:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 197:Drivers/CMSIS/Include/core_cm4.h **** 
 198:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 199:Drivers/CMSIS/Include/core_cm4.h **** 
 200:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 201:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 202:Drivers/CMSIS/Include/core_cm4.h **** 
 203:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
ARM GAS  /tmp/ccYImk4r.s 			page 5


 204:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 205:Drivers/CMSIS/Include/core_cm4.h **** #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** 
 207:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 208:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 209:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 210:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000
 211:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 212:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 213:Drivers/CMSIS/Include/core_cm4.h **** 
 214:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 215:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0
 216:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 217:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 218:Drivers/CMSIS/Include/core_cm4.h **** 
 219:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 220:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0
 221:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 222:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 225:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          4
 226:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 227:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 230:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0
 231:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 232:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 233:Drivers/CMSIS/Include/core_cm4.h **** #endif
 234:Drivers/CMSIS/Include/core_cm4.h **** 
 235:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 236:Drivers/CMSIS/Include/core_cm4.h **** /**
 237:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 238:Drivers/CMSIS/Include/core_cm4.h **** 
 239:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 240:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 241:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 242:Drivers/CMSIS/Include/core_cm4.h **** */
 243:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 244:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions                 */
 245:Drivers/CMSIS/Include/core_cm4.h **** #else
 246:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions                 */
 247:Drivers/CMSIS/Include/core_cm4.h **** #endif
 248:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions                */
 249:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions              */
 250:Drivers/CMSIS/Include/core_cm4.h **** 
 251:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 252:Drivers/CMSIS/Include/core_cm4.h **** 
 253:Drivers/CMSIS/Include/core_cm4.h **** 
 254:Drivers/CMSIS/Include/core_cm4.h **** 
 255:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 256:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 257:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 258:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 259:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 260:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
ARM GAS  /tmp/ccYImk4r.s 			page 6


 261:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 262:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 263:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 264:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 265:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 266:Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 267:Drivers/CMSIS/Include/core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 268:Drivers/CMSIS/Include/core_cm4.h **** */
 269:Drivers/CMSIS/Include/core_cm4.h **** 
 270:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 271:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 272:Drivers/CMSIS/Include/core_cm4.h ****     \brief  Core Register type definitions.
 273:Drivers/CMSIS/Include/core_cm4.h ****   @{
 274:Drivers/CMSIS/Include/core_cm4.h ****  */
 275:Drivers/CMSIS/Include/core_cm4.h **** 
 276:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 277:Drivers/CMSIS/Include/core_cm4.h ****  */
 278:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 279:Drivers/CMSIS/Include/core_cm4.h **** {
 280:Drivers/CMSIS/Include/core_cm4.h ****   struct
 281:Drivers/CMSIS/Include/core_cm4.h ****   {
 282:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved                           */
 283:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 284:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved                           */
 285:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 286:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 287:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 288:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 289:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 290:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 291:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 292:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 295:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31                                             /*!< APSR
 296:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 297:Drivers/CMSIS/Include/core_cm4.h **** 
 298:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30                                             /*!< APSR
 299:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 300:Drivers/CMSIS/Include/core_cm4.h **** 
 301:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29                                             /*!< APSR
 302:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 303:Drivers/CMSIS/Include/core_cm4.h **** 
 304:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28                                             /*!< APSR
 305:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 306:Drivers/CMSIS/Include/core_cm4.h **** 
 307:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27                                             /*!< APSR
 308:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 309:Drivers/CMSIS/Include/core_cm4.h **** 
 310:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16                                             /*!< APSR
 311:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** 
 314:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccYImk4r.s 			page 7


 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved                           */
 322:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 323:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 324:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 325:Drivers/CMSIS/Include/core_cm4.h **** 
 326:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 327:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0                                             /*!< IPSR
 328:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 329:Drivers/CMSIS/Include/core_cm4.h **** 
 330:Drivers/CMSIS/Include/core_cm4.h **** 
 331:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 332:Drivers/CMSIS/Include/core_cm4.h ****  */
 333:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 334:Drivers/CMSIS/Include/core_cm4.h **** {
 335:Drivers/CMSIS/Include/core_cm4.h ****   struct
 336:Drivers/CMSIS/Include/core_cm4.h ****   {
 337:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number                   */
 338:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved                           */
 339:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags        */
 340:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved                           */
 341:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0)          */
 342:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0)          */
 343:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag          */
 344:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag       */
 345:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag          */
 346:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag           */
 347:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag       */
 348:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 349:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 350:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31                                             /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 355:Drivers/CMSIS/Include/core_cm4.h **** 
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30                                             /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 358:Drivers/CMSIS/Include/core_cm4.h **** 
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29                                             /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 361:Drivers/CMSIS/Include/core_cm4.h **** 
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28                                             /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 364:Drivers/CMSIS/Include/core_cm4.h **** 
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27                                             /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Pos                        25                                             /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 370:Drivers/CMSIS/Include/core_cm4.h **** 
 371:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24                                             /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 373:Drivers/CMSIS/Include/core_cm4.h **** 
 374:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16                                             /*!< xPSR
ARM GAS  /tmp/ccYImk4r.s 			page 8


 375:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 376:Drivers/CMSIS/Include/core_cm4.h **** 
 377:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0                                             /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 379:Drivers/CMSIS/Include/core_cm4.h **** 
 380:Drivers/CMSIS/Include/core_cm4.h **** 
 381:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 382:Drivers/CMSIS/Include/core_cm4.h ****  */
 383:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 384:Drivers/CMSIS/Include/core_cm4.h **** {
 385:Drivers/CMSIS/Include/core_cm4.h ****   struct
 386:Drivers/CMSIS/Include/core_cm4.h ****   {
 387:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 388:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used                   */
 389:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag           */
 390:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved                           */
 391:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access                  */
 392:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access                  */
 393:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 396:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2                                             /*!< CONT
 397:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 398:Drivers/CMSIS/Include/core_cm4.h **** 
 399:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1                                             /*!< CONT
 400:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 401:Drivers/CMSIS/Include/core_cm4.h **** 
 402:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0                                             /*!< CONT
 403:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 404:Drivers/CMSIS/Include/core_cm4.h **** 
 405:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 406:Drivers/CMSIS/Include/core_cm4.h **** 
 407:Drivers/CMSIS/Include/core_cm4.h **** 
 408:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
 409:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 410:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 411:Drivers/CMSIS/Include/core_cm4.h ****   @{
 412:Drivers/CMSIS/Include/core_cm4.h ****  */
 413:Drivers/CMSIS/Include/core_cm4.h **** 
 414:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 415:Drivers/CMSIS/Include/core_cm4.h ****  */
 416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 417:Drivers/CMSIS/Include/core_cm4.h **** {
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISER[8];                 /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register   
 419:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[24];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICER[8];                 /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 421:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RSERVED1[24];
 422:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ISPR[8];                 /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register  
 423:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[24];
 424:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICPR[8];                 /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 425:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[24];
 426:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IABR[8];                 /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register   
 427:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[56];
 428:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  IP[240];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 429:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[644];
 430:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t STIR;                    /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 431:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
ARM GAS  /tmp/ccYImk4r.s 			page 9


 432:Drivers/CMSIS/Include/core_cm4.h **** 
 433:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 434:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0                                          /*!< STIR: I
 435:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 438:Drivers/CMSIS/Include/core_cm4.h **** 
 439:Drivers/CMSIS/Include/core_cm4.h **** 
 440:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 441:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 442:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 443:Drivers/CMSIS/Include/core_cm4.h ****   @{
 444:Drivers/CMSIS/Include/core_cm4.h ****  */
 445:Drivers/CMSIS/Include/core_cm4.h **** 
 446:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 447:Drivers/CMSIS/Include/core_cm4.h ****  */
 448:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 449:Drivers/CMSIS/Include/core_cm4.h **** {
 450:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CPUID;                   /*!< Offset: 0x000 (R/ )  CPUID Base Register             
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ICSR;                    /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VTOR;                    /*!< Offset: 0x008 (R/W)  Vector Table Offset Register    
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AIRCR;                   /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SCR;                     /*!< Offset: 0x010 (R/W)  System Control Register         
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CCR;                     /*!< Offset: 0x014 (R/W)  Configuration Control Register  
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint8_t  SHP[12];                 /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SHCSR;                   /*!< Offset: 0x024 (R/W)  System Handler Control and State
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CFSR;                    /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t HFSR;                    /*!< Offset: 0x02C (R/W)  HardFault Status Register       
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DFSR;                    /*!< Offset: 0x030 (R/W)  Debug Fault Status Register     
 461:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MMFAR;                   /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t BFAR;                    /*!< Offset: 0x038 (R/W)  BusFault Address Register       
 463:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t AFSR;                    /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 464:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PFR[2];                  /*!< Offset: 0x040 (R/ )  Processor Feature Register      
 465:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DFR;                     /*!< Offset: 0x048 (R/ )  Debug Feature Register          
 466:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ADR;                     /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register      
 467:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MMFR[4];                 /*!< Offset: 0x050 (R/ )  Memory Model Feature Register   
 468:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ISAR[5];                 /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 469:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[5];
 470:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPACR;                   /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 471:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 472:Drivers/CMSIS/Include/core_cm4.h **** 
 473:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 474:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24                                             /*!< SCB 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** 
 477:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20                                             /*!< SCB 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** 
 480:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16                                             /*!< SCB 
 481:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 482:Drivers/CMSIS/Include/core_cm4.h **** 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4                                             /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 485:Drivers/CMSIS/Include/core_cm4.h **** 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0                                             /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 488:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 10


 489:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 490:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31                                             /*!< SCB 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** 
 493:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28                                             /*!< SCB 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** 
 496:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27                                             /*!< SCB 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** 
 499:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26                                             /*!< SCB 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** 
 502:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25                                             /*!< SCB 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** 
 505:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23                                             /*!< SCB 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** 
 508:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22                                             /*!< SCB 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** 
 511:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12                                             /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 513:Drivers/CMSIS/Include/core_cm4.h **** 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11                                             /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 516:Drivers/CMSIS/Include/core_cm4.h **** 
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0                                             /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7                                             /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm4.h **** 
 524:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 525:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16                                             /*!< SCB 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** 
 528:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16                                             /*!< SCB 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** 
 531:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15                                             /*!< SCB 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** 
 534:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8                                             /*!< SCB 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** 
 537:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2                                             /*!< SCB 
 538:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm4.h **** 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1                                             /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm4.h **** 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0                                             /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 11


 546:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 547:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4                                             /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm4.h **** 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2                                             /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm4.h **** 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1                                             /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm4.h **** 
 556:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 557:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9                                             /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** 
 560:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8                                             /*!< SCB 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** 
 563:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4                                             /*!< SCB 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** 
 566:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3                                             /*!< SCB 
 567:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm4.h **** 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1                                             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm4.h **** 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0                                             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm4.h **** 
 575:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 576:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18                                             /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** 
 579:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17                                             /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** 
 582:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16                                             /*!< SCB 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** 
 585:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15                                             /*!< SCB 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** 
 588:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14                                             /*!< SCB 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** 
 591:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13                                             /*!< SCB 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** 
 594:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12                                             /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** 
 597:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11                                             /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** 
 600:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10                                             /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 12


 603:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8                                             /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** 
 606:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7                                             /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** 
 609:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3                                             /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 611:Drivers/CMSIS/Include/core_cm4.h **** 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1                                             /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 614:Drivers/CMSIS/Include/core_cm4.h **** 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0                                             /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 617:Drivers/CMSIS/Include/core_cm4.h **** 
 618:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 619:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16                                             /*!< SCB 
 620:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 621:Drivers/CMSIS/Include/core_cm4.h **** 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8                                             /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 624:Drivers/CMSIS/Include/core_cm4.h **** 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0                                             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 627:Drivers/CMSIS/Include/core_cm4.h **** 
 628:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 629:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31                                             /*!< SCB 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** 
 632:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30                                             /*!< SCB 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** 
 635:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1                                             /*!< SCB 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** 
 638:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 639:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4                                             /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** 
 642:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3                                             /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** 
 645:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2                                             /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** 
 648:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1                                             /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** 
 651:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0                                             /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** 
 654:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 655:Drivers/CMSIS/Include/core_cm4.h **** 
 656:Drivers/CMSIS/Include/core_cm4.h **** 
 657:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 658:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 659:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
ARM GAS  /tmp/ccYImk4r.s 			page 13


 660:Drivers/CMSIS/Include/core_cm4.h ****   @{
 661:Drivers/CMSIS/Include/core_cm4.h ****  */
 662:Drivers/CMSIS/Include/core_cm4.h **** 
 663:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 664:Drivers/CMSIS/Include/core_cm4.h ****  */
 665:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 666:Drivers/CMSIS/Include/core_cm4.h **** {
 667:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 668:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ICTR;                    /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 669:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACTLR;                   /*!< Offset: 0x008 (R/W)  Auxiliary Control Register      
 670:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 671:Drivers/CMSIS/Include/core_cm4.h **** 
 672:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 673:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0                                          /*!< ICTR: I
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 675:Drivers/CMSIS/Include/core_cm4.h **** 
 676:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9                                          /*!< ACTLR: 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8                                          /*!< ACTLR: 
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 682:Drivers/CMSIS/Include/core_cm4.h **** 
 683:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2                                          /*!< ACTLR: 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 685:Drivers/CMSIS/Include/core_cm4.h **** 
 686:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1                                          /*!< ACTLR: 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 688:Drivers/CMSIS/Include/core_cm4.h **** 
 689:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0                                          /*!< ACTLR: 
 690:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 691:Drivers/CMSIS/Include/core_cm4.h **** 
 692:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** 
 695:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 696:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 697:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 698:Drivers/CMSIS/Include/core_cm4.h ****   @{
 699:Drivers/CMSIS/Include/core_cm4.h ****  */
 700:Drivers/CMSIS/Include/core_cm4.h **** 
 701:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 702:Drivers/CMSIS/Include/core_cm4.h ****  */
 703:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 704:Drivers/CMSIS/Include/core_cm4.h **** {
 705:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 706:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LOAD;                    /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register   
 707:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t VAL;                     /*!< Offset: 0x008 (R/W)  SysTick Current Value Register  
 708:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CALIB;                   /*!< Offset: 0x00C (R/ )  SysTick Calibration Register    
 709:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 710:Drivers/CMSIS/Include/core_cm4.h **** 
 711:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 712:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16                                             /*!< SysT
 713:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 714:Drivers/CMSIS/Include/core_cm4.h **** 
 715:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2                                             /*!< SysT
 716:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
ARM GAS  /tmp/ccYImk4r.s 			page 14


 717:Drivers/CMSIS/Include/core_cm4.h **** 
 718:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1                                             /*!< SysT
 719:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 720:Drivers/CMSIS/Include/core_cm4.h **** 
 721:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0                                             /*!< SysT
 722:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 723:Drivers/CMSIS/Include/core_cm4.h **** 
 724:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 725:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0                                             /*!< SysT
 726:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 727:Drivers/CMSIS/Include/core_cm4.h **** 
 728:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 729:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0                                             /*!< SysT
 730:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 731:Drivers/CMSIS/Include/core_cm4.h **** 
 732:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 733:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31                                             /*!< SysT
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 735:Drivers/CMSIS/Include/core_cm4.h **** 
 736:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30                                             /*!< SysT
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 738:Drivers/CMSIS/Include/core_cm4.h **** 
 739:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0                                             /*!< SysT
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 741:Drivers/CMSIS/Include/core_cm4.h **** 
 742:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 743:Drivers/CMSIS/Include/core_cm4.h **** 
 744:Drivers/CMSIS/Include/core_cm4.h **** 
 745:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 746:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 747:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 748:Drivers/CMSIS/Include/core_cm4.h ****   @{
 749:Drivers/CMSIS/Include/core_cm4.h ****  */
 750:Drivers/CMSIS/Include/core_cm4.h **** 
 751:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 752:Drivers/CMSIS/Include/core_cm4.h ****  */
 753:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 754:Drivers/CMSIS/Include/core_cm4.h **** {
 755:Drivers/CMSIS/Include/core_cm4.h ****   __O  union
 756:Drivers/CMSIS/Include/core_cm4.h ****   {
 757:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint8_t    u8;                  /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit         
 758:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint16_t   u16;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit        
 759:Drivers/CMSIS/Include/core_cm4.h ****     __O  uint32_t   u32;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit        
 760:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32];                          /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers     
 761:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[864];
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TER;                     /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register       
 763:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[15];
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TPR;                     /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register    
 765:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[15];
 766:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t TCR;                     /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register      
 767:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[29];
 768:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t IWR;                     /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register  
 769:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t IRR;                     /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register   
 770:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t IMCR;                    /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 771:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[43];
 772:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t LAR;                     /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register        
 773:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t LSR;                     /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register        
ARM GAS  /tmp/ccYImk4r.s 			page 15


 774:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[6];
 775:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID4;                    /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 776:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID5;                    /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 777:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID6;                    /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 778:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID7;                    /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 779:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID0;                    /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 780:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID1;                    /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 781:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID2;                    /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 782:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PID3;                    /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 783:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID0;                    /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 784:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID1;                    /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 785:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID2;                    /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 786:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t CID3;                    /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 787:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 788:Drivers/CMSIS/Include/core_cm4.h **** 
 789:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 790:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0                                             /*!< ITM 
 791:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 792:Drivers/CMSIS/Include/core_cm4.h **** 
 793:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 794:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23                                             /*!< ITM 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 796:Drivers/CMSIS/Include/core_cm4.h **** 
 797:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16                                             /*!< ITM 
 798:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10                                             /*!< ITM 
 801:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 802:Drivers/CMSIS/Include/core_cm4.h **** 
 803:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8                                             /*!< ITM 
 804:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 805:Drivers/CMSIS/Include/core_cm4.h **** 
 806:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4                                             /*!< ITM 
 807:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 808:Drivers/CMSIS/Include/core_cm4.h **** 
 809:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3                                             /*!< ITM 
 810:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 811:Drivers/CMSIS/Include/core_cm4.h **** 
 812:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2                                             /*!< ITM 
 813:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 814:Drivers/CMSIS/Include/core_cm4.h **** 
 815:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1                                             /*!< ITM 
 816:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 817:Drivers/CMSIS/Include/core_cm4.h **** 
 818:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0                                             /*!< ITM 
 819:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 820:Drivers/CMSIS/Include/core_cm4.h **** 
 821:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 822:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0                                             /*!< ITM 
 823:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 824:Drivers/CMSIS/Include/core_cm4.h **** 
 825:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 826:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0                                             /*!< ITM 
 827:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 828:Drivers/CMSIS/Include/core_cm4.h **** 
 829:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 830:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0                                             /*!< ITM 
ARM GAS  /tmp/ccYImk4r.s 			page 16


 831:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 832:Drivers/CMSIS/Include/core_cm4.h **** 
 833:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 834:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2                                             /*!< ITM 
 835:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 836:Drivers/CMSIS/Include/core_cm4.h **** 
 837:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1                                             /*!< ITM 
 838:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 839:Drivers/CMSIS/Include/core_cm4.h **** 
 840:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0                                             /*!< ITM 
 841:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 842:Drivers/CMSIS/Include/core_cm4.h **** 
 843:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 844:Drivers/CMSIS/Include/core_cm4.h **** 
 845:Drivers/CMSIS/Include/core_cm4.h **** 
 846:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 847:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 848:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 849:Drivers/CMSIS/Include/core_cm4.h ****   @{
 850:Drivers/CMSIS/Include/core_cm4.h ****  */
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 853:Drivers/CMSIS/Include/core_cm4.h ****  */
 854:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 855:Drivers/CMSIS/Include/core_cm4.h **** {
 856:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x000 (R/W)  Control Register                
 857:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CYCCNT;                  /*!< Offset: 0x004 (R/W)  Cycle Count Register            
 858:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CPICNT;                  /*!< Offset: 0x008 (R/W)  CPI Count Register              
 859:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t EXCCNT;                  /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 860:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SLEEPCNT;                /*!< Offset: 0x010 (R/W)  Sleep Count Register            
 861:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t LSUCNT;                  /*!< Offset: 0x014 (R/W)  LSU Count Register              
 862:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FOLDCNT;                 /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 863:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t PCSR;                    /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 864:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP0;                   /*!< Offset: 0x020 (R/W)  Comparator Register 0           
 865:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK0;                   /*!< Offset: 0x024 (R/W)  Mask Register 0                 
 866:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION0;               /*!< Offset: 0x028 (R/W)  Function Register 0             
 867:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
 868:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP1;                   /*!< Offset: 0x030 (R/W)  Comparator Register 1           
 869:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK1;                   /*!< Offset: 0x034 (R/W)  Mask Register 1                 
 870:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION1;               /*!< Offset: 0x038 (R/W)  Function Register 1             
 871:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[1];
 872:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP2;                   /*!< Offset: 0x040 (R/W)  Comparator Register 2           
 873:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK2;                   /*!< Offset: 0x044 (R/W)  Mask Register 2                 
 874:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION2;               /*!< Offset: 0x048 (R/W)  Function Register 2             
 875:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[1];
 876:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t COMP3;                   /*!< Offset: 0x050 (R/W)  Comparator Register 3           
 877:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t MASK3;                   /*!< Offset: 0x054 (R/W)  Mask Register 3                 
 878:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FUNCTION3;               /*!< Offset: 0x058 (R/W)  Function Register 3             
 879:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 880:Drivers/CMSIS/Include/core_cm4.h **** 
 881:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 882:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28                                          /*!< DWT CTR
 883:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 884:Drivers/CMSIS/Include/core_cm4.h **** 
 885:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27                                          /*!< DWT CTR
 886:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 887:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 17


 888:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26                                          /*!< DWT CTR
 889:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 890:Drivers/CMSIS/Include/core_cm4.h **** 
 891:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25                                          /*!< DWT CTR
 892:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 893:Drivers/CMSIS/Include/core_cm4.h **** 
 894:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24                                          /*!< DWT CTR
 895:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 896:Drivers/CMSIS/Include/core_cm4.h **** 
 897:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22                                          /*!< DWT CTR
 898:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 899:Drivers/CMSIS/Include/core_cm4.h **** 
 900:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21                                          /*!< DWT CTR
 901:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 902:Drivers/CMSIS/Include/core_cm4.h **** 
 903:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20                                          /*!< DWT CTR
 904:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 905:Drivers/CMSIS/Include/core_cm4.h **** 
 906:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19                                          /*!< DWT CTR
 907:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 908:Drivers/CMSIS/Include/core_cm4.h **** 
 909:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18                                          /*!< DWT CTR
 910:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 911:Drivers/CMSIS/Include/core_cm4.h **** 
 912:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17                                          /*!< DWT CTR
 913:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 914:Drivers/CMSIS/Include/core_cm4.h **** 
 915:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16                                          /*!< DWT CTR
 916:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 917:Drivers/CMSIS/Include/core_cm4.h **** 
 918:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12                                          /*!< DWT CTR
 919:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 920:Drivers/CMSIS/Include/core_cm4.h **** 
 921:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10                                          /*!< DWT CTR
 922:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 923:Drivers/CMSIS/Include/core_cm4.h **** 
 924:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9                                          /*!< DWT CTR
 925:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 926:Drivers/CMSIS/Include/core_cm4.h **** 
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5                                          /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1                                          /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0                                          /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0                                          /*!< DWT CPI
 938:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 939:Drivers/CMSIS/Include/core_cm4.h **** 
 940:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 941:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0                                          /*!< DWT EXC
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 943:Drivers/CMSIS/Include/core_cm4.h **** 
 944:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
ARM GAS  /tmp/ccYImk4r.s 			page 18


 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0                                          /*!< DWT SLE
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0                                          /*!< DWT LSU
 950:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 951:Drivers/CMSIS/Include/core_cm4.h **** 
 952:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 953:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0                                          /*!< DWT FOL
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 955:Drivers/CMSIS/Include/core_cm4.h **** 
 956:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0                                          /*!< DWT MAS
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24                                          /*!< DWT FUN
 962:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 963:Drivers/CMSIS/Include/core_cm4.h **** 
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16                                          /*!< DWT FUN
 965:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 966:Drivers/CMSIS/Include/core_cm4.h **** 
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12                                          /*!< DWT FUN
 968:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 969:Drivers/CMSIS/Include/core_cm4.h **** 
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10                                          /*!< DWT FUN
 971:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 972:Drivers/CMSIS/Include/core_cm4.h **** 
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9                                          /*!< DWT FUN
 974:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 975:Drivers/CMSIS/Include/core_cm4.h **** 
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8                                          /*!< DWT FUN
 977:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 978:Drivers/CMSIS/Include/core_cm4.h **** 
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7                                          /*!< DWT FUN
 980:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 981:Drivers/CMSIS/Include/core_cm4.h **** 
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5                                          /*!< DWT FUN
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0                                          /*!< DWT FUN
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 987:Drivers/CMSIS/Include/core_cm4.h **** 
 988:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
 989:Drivers/CMSIS/Include/core_cm4.h **** 
 990:Drivers/CMSIS/Include/core_cm4.h **** 
 991:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
 992:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 993:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
 994:Drivers/CMSIS/Include/core_cm4.h ****   @{
 995:Drivers/CMSIS/Include/core_cm4.h ****  */
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
 998:Drivers/CMSIS/Include/core_cm4.h ****  */
 999:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1000:Drivers/CMSIS/Include/core_cm4.h **** {
1001:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SSPSR;                   /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
ARM GAS  /tmp/ccYImk4r.s 			page 19


1002:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CSPSR;                   /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1003:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[2];
1004:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ACPR;                    /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1005:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED1[55];
1006:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t SPPR;                    /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1007:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED2[131];
1008:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FFSR;                    /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1009:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FFCR;                    /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1010:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FSCR;                    /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1011:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED3[759];
1012:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TRIGGER;                 /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1013:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO0;                   /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1014:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR2;               /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1015:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED4[1];
1016:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t ITATBCTR0;               /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1017:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t FIFO1;                   /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1018:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t ITCTRL;                  /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1019:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED5[39];
1020:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMSET;                /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1021:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CLAIMCLR;                /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1022:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED7[8];
1023:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVID;                   /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1024:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t DEVTYPE;                 /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1025:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1028:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0                                          /*!< TPI ACP
1029:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1030:Drivers/CMSIS/Include/core_cm4.h **** 
1031:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1032:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0                                          /*!< TPI SPP
1033:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1036:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3                                          /*!< TPI FFS
1037:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1038:Drivers/CMSIS/Include/core_cm4.h **** 
1039:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2                                          /*!< TPI FFS
1040:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1041:Drivers/CMSIS/Include/core_cm4.h **** 
1042:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1                                          /*!< TPI FFS
1043:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1044:Drivers/CMSIS/Include/core_cm4.h **** 
1045:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0                                          /*!< TPI FFS
1046:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1047:Drivers/CMSIS/Include/core_cm4.h **** 
1048:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1049:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8                                          /*!< TPI FFC
1050:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1051:Drivers/CMSIS/Include/core_cm4.h **** 
1052:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1                                          /*!< TPI FFC
1053:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1054:Drivers/CMSIS/Include/core_cm4.h **** 
1055:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1056:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0                                          /*!< TPI TRI
1057:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1058:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 20


1059:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1060:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1061:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1062:Drivers/CMSIS/Include/core_cm4.h **** 
1063:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1064:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1065:Drivers/CMSIS/Include/core_cm4.h **** 
1066:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1067:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1068:Drivers/CMSIS/Include/core_cm4.h **** 
1069:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1070:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1071:Drivers/CMSIS/Include/core_cm4.h **** 
1072:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16                                          /*!< TPI FIF
1073:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1074:Drivers/CMSIS/Include/core_cm4.h **** 
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8                                          /*!< TPI FIF
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0                                          /*!< TPI FIF
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1080:Drivers/CMSIS/Include/core_cm4.h **** 
1081:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1082:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0                                          /*!< TPI ITA
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1084:Drivers/CMSIS/Include/core_cm4.h **** 
1085:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29                                          /*!< TPI FIF
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27                                          /*!< TPI FIF
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26                                          /*!< TPI FIF
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24                                          /*!< TPI FIF
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1097:Drivers/CMSIS/Include/core_cm4.h **** 
1098:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16                                          /*!< TPI FIF
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1100:Drivers/CMSIS/Include/core_cm4.h **** 
1101:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8                                          /*!< TPI FIF
1102:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1103:Drivers/CMSIS/Include/core_cm4.h **** 
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0                                          /*!< TPI FIF
1105:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1106:Drivers/CMSIS/Include/core_cm4.h **** 
1107:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0                                          /*!< TPI ITA
1109:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1110:Drivers/CMSIS/Include/core_cm4.h **** 
1111:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1112:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0                                          /*!< TPI ITC
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1114:Drivers/CMSIS/Include/core_cm4.h **** 
1115:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
ARM GAS  /tmp/ccYImk4r.s 			page 21


1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11                                          /*!< TPI DEV
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10                                          /*!< TPI DEV
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9                                          /*!< TPI DEV
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6                                          /*!< TPI DEV
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5                                          /*!< TPI DEV
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1130:Drivers/CMSIS/Include/core_cm4.h **** 
1131:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0                                          /*!< TPI DEV
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1133:Drivers/CMSIS/Include/core_cm4.h **** 
1134:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1135:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4                                          /*!< TPI DEV
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1137:Drivers/CMSIS/Include/core_cm4.h **** 
1138:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0                                          /*!< TPI DEV
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1140:Drivers/CMSIS/Include/core_cm4.h **** 
1141:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1142:Drivers/CMSIS/Include/core_cm4.h **** 
1143:Drivers/CMSIS/Include/core_cm4.h **** 
1144:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1145:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1146:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1147:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1148:Drivers/CMSIS/Include/core_cm4.h ****   @{
1149:Drivers/CMSIS/Include/core_cm4.h ****  */
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1152:Drivers/CMSIS/Include/core_cm4.h ****  */
1153:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1154:Drivers/CMSIS/Include/core_cm4.h **** {
1155:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t TYPE;                    /*!< Offset: 0x000 (R/ )  MPU Type Register               
1156:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t CTRL;                    /*!< Offset: 0x004 (R/W)  MPU Control Register            
1157:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RNR;                     /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register      
1158:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR;                    /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1159:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR;                    /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1160:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A1;                 /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1161:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A1;                 /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1162:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A2;                 /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1163:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A2;                 /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1164:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RBAR_A3;                 /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1165:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t RASR_A3;                 /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1166:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16                                             /*!< MPU 
1170:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8                                             /*!< MPU 
ARM GAS  /tmp/ccYImk4r.s 			page 22


1173:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0                                             /*!< MPU 
1176:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register */
1179:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2                                             /*!< MPU 
1180:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1181:Drivers/CMSIS/Include/core_cm4.h **** 
1182:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1                                             /*!< MPU 
1183:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1184:Drivers/CMSIS/Include/core_cm4.h **** 
1185:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0                                             /*!< MPU 
1186:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1187:Drivers/CMSIS/Include/core_cm4.h **** 
1188:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register */
1189:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0                                             /*!< MPU 
1190:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1191:Drivers/CMSIS/Include/core_cm4.h **** 
1192:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register */
1193:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5                                             /*!< MPU 
1194:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4                                             /*!< MPU 
1197:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1198:Drivers/CMSIS/Include/core_cm4.h **** 
1199:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0                                             /*!< MPU 
1200:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1201:Drivers/CMSIS/Include/core_cm4.h **** 
1202:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register */
1203:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16                                             /*!< MPU 
1204:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1205:Drivers/CMSIS/Include/core_cm4.h **** 
1206:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28                                             /*!< MPU 
1207:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1208:Drivers/CMSIS/Include/core_cm4.h **** 
1209:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24                                             /*!< MPU 
1210:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1211:Drivers/CMSIS/Include/core_cm4.h **** 
1212:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19                                             /*!< MPU 
1213:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1214:Drivers/CMSIS/Include/core_cm4.h **** 
1215:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18                                             /*!< MPU 
1216:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1217:Drivers/CMSIS/Include/core_cm4.h **** 
1218:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17                                             /*!< MPU 
1219:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1220:Drivers/CMSIS/Include/core_cm4.h **** 
1221:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16                                             /*!< MPU 
1222:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1223:Drivers/CMSIS/Include/core_cm4.h **** 
1224:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8                                             /*!< MPU 
1225:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1226:Drivers/CMSIS/Include/core_cm4.h **** 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1                                             /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1229:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 23


1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0                                             /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1232:Drivers/CMSIS/Include/core_cm4.h **** 
1233:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1234:Drivers/CMSIS/Include/core_cm4.h **** #endif
1235:Drivers/CMSIS/Include/core_cm4.h **** 
1236:Drivers/CMSIS/Include/core_cm4.h **** 
1237:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1238:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
1239:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1240:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1241:Drivers/CMSIS/Include/core_cm4.h ****   @{
1242:Drivers/CMSIS/Include/core_cm4.h ****  */
1243:Drivers/CMSIS/Include/core_cm4.h **** 
1244:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1245:Drivers/CMSIS/Include/core_cm4.h ****  */
1246:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1247:Drivers/CMSIS/Include/core_cm4.h **** {
1248:Drivers/CMSIS/Include/core_cm4.h ****        uint32_t RESERVED0[1];
1249:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCCR;                   /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1250:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPCAR;                   /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1251:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t FPDSCR;                  /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1252:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR0;                   /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1253:Drivers/CMSIS/Include/core_cm4.h ****   __I  uint32_t MVFR1;                   /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1254:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register */
1257:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31                                             /*!< FPCC
1258:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1259:Drivers/CMSIS/Include/core_cm4.h **** 
1260:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30                                             /*!< FPCC
1261:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8                                             /*!< FPCC
1264:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1265:Drivers/CMSIS/Include/core_cm4.h **** 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6                                             /*!< FPCC
1267:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5                                             /*!< FPCC
1270:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4                                             /*!< FPCC
1273:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3                                             /*!< FPCC
1276:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1                                             /*!< FPCC
1279:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0                                             /*!< FPCC
1282:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register */
1285:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3                                             /*!< FPCA
1286:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
ARM GAS  /tmp/ccYImk4r.s 			page 24


1287:Drivers/CMSIS/Include/core_cm4.h **** 
1288:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register */
1289:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26                                             /*!< FPDS
1290:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1291:Drivers/CMSIS/Include/core_cm4.h **** 
1292:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25                                             /*!< FPDS
1293:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1294:Drivers/CMSIS/Include/core_cm4.h **** 
1295:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24                                             /*!< FPDS
1296:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1297:Drivers/CMSIS/Include/core_cm4.h **** 
1298:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22                                             /*!< FPDS
1299:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 */
1302:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28                                             /*!< MVFR
1303:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1304:Drivers/CMSIS/Include/core_cm4.h **** 
1305:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24                                             /*!< MVFR
1306:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1307:Drivers/CMSIS/Include/core_cm4.h **** 
1308:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20                                             /*!< MVFR
1309:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1310:Drivers/CMSIS/Include/core_cm4.h **** 
1311:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16                                             /*!< MVFR
1312:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1313:Drivers/CMSIS/Include/core_cm4.h **** 
1314:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12                                             /*!< MVFR
1315:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1316:Drivers/CMSIS/Include/core_cm4.h **** 
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8                                             /*!< MVFR
1318:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1319:Drivers/CMSIS/Include/core_cm4.h **** 
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4                                             /*!< MVFR
1321:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1322:Drivers/CMSIS/Include/core_cm4.h **** 
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0                                             /*!< MVFR
1324:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1325:Drivers/CMSIS/Include/core_cm4.h **** 
1326:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 */
1327:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28                                             /*!< MVFR
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1329:Drivers/CMSIS/Include/core_cm4.h **** 
1330:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24                                             /*!< MVFR
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1332:Drivers/CMSIS/Include/core_cm4.h **** 
1333:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4                                             /*!< MVFR
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1335:Drivers/CMSIS/Include/core_cm4.h **** 
1336:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0                                             /*!< MVFR
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1338:Drivers/CMSIS/Include/core_cm4.h **** 
1339:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1340:Drivers/CMSIS/Include/core_cm4.h **** #endif
1341:Drivers/CMSIS/Include/core_cm4.h **** 
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_core_register
ARM GAS  /tmp/ccYImk4r.s 			page 25


1344:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1345:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1346:Drivers/CMSIS/Include/core_cm4.h ****   @{
1347:Drivers/CMSIS/Include/core_cm4.h ****  */
1348:Drivers/CMSIS/Include/core_cm4.h **** 
1349:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1350:Drivers/CMSIS/Include/core_cm4.h ****  */
1351:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1352:Drivers/CMSIS/Include/core_cm4.h **** {
1353:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DHCSR;                   /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1354:Drivers/CMSIS/Include/core_cm4.h ****   __O  uint32_t DCRSR;                   /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1355:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DCRDR;                   /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1356:Drivers/CMSIS/Include/core_cm4.h ****   __IO uint32_t DEMCR;                   /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1357:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1358:Drivers/CMSIS/Include/core_cm4.h **** 
1359:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register */
1360:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16                                             /*!< Core
1361:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1362:Drivers/CMSIS/Include/core_cm4.h **** 
1363:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25                                             /*!< Core
1364:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1365:Drivers/CMSIS/Include/core_cm4.h **** 
1366:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24                                             /*!< Core
1367:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1368:Drivers/CMSIS/Include/core_cm4.h **** 
1369:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19                                             /*!< Core
1370:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1371:Drivers/CMSIS/Include/core_cm4.h **** 
1372:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18                                             /*!< Core
1373:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1374:Drivers/CMSIS/Include/core_cm4.h **** 
1375:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17                                             /*!< Core
1376:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1377:Drivers/CMSIS/Include/core_cm4.h **** 
1378:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16                                             /*!< Core
1379:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1380:Drivers/CMSIS/Include/core_cm4.h **** 
1381:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5                                             /*!< Core
1382:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1383:Drivers/CMSIS/Include/core_cm4.h **** 
1384:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3                                             /*!< Core
1385:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1386:Drivers/CMSIS/Include/core_cm4.h **** 
1387:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2                                             /*!< Core
1388:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1389:Drivers/CMSIS/Include/core_cm4.h **** 
1390:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1                                             /*!< Core
1391:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1392:Drivers/CMSIS/Include/core_cm4.h **** 
1393:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0                                             /*!< Core
1394:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1395:Drivers/CMSIS/Include/core_cm4.h **** 
1396:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register */
1397:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16                                             /*!< Core
1398:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0                                             /*!< Core
ARM GAS  /tmp/ccYImk4r.s 			page 26


1401:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register */
1404:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24                                             /*!< Core
1405:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1406:Drivers/CMSIS/Include/core_cm4.h **** 
1407:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19                                             /*!< Core
1408:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1409:Drivers/CMSIS/Include/core_cm4.h **** 
1410:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18                                             /*!< Core
1411:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17                                             /*!< Core
1414:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1415:Drivers/CMSIS/Include/core_cm4.h **** 
1416:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16                                             /*!< Core
1417:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1418:Drivers/CMSIS/Include/core_cm4.h **** 
1419:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10                                             /*!< Core
1420:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1421:Drivers/CMSIS/Include/core_cm4.h **** 
1422:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9                                             /*!< Core
1423:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1424:Drivers/CMSIS/Include/core_cm4.h **** 
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8                                             /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7                                             /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6                                             /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5                                             /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4                                             /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0                                             /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1444:Drivers/CMSIS/Include/core_cm4.h **** 
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup    CMSIS_core_register
1447:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1448:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1449:Drivers/CMSIS/Include/core_cm4.h ****   @{
1450:Drivers/CMSIS/Include/core_cm4.h ****  */
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1453:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1454:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1455:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1456:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1457:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
ARM GAS  /tmp/ccYImk4r.s 			page 27


1458:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1459:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1460:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1461:Drivers/CMSIS/Include/core_cm4.h **** 
1462:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1463:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1464:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1465:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1466:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1467:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1468:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1470:Drivers/CMSIS/Include/core_cm4.h **** 
1471:Drivers/CMSIS/Include/core_cm4.h **** #if (__MPU_PRESENT == 1)
1472:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1473:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1474:Drivers/CMSIS/Include/core_cm4.h **** #endif
1475:Drivers/CMSIS/Include/core_cm4.h **** 
1476:Drivers/CMSIS/Include/core_cm4.h **** #if (__FPU_PRESENT == 1)
1477:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1478:Drivers/CMSIS/Include/core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1479:Drivers/CMSIS/Include/core_cm4.h **** #endif
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1482:Drivers/CMSIS/Include/core_cm4.h **** 
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** 
1485:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1486:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1487:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1488:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1489:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1490:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1491:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1492:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1493:Drivers/CMSIS/Include/core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1494:Drivers/CMSIS/Include/core_cm4.h **** */
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** 
1497:Drivers/CMSIS/Include/core_cm4.h **** 
1498:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1499:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1500:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1501:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1502:Drivers/CMSIS/Include/core_cm4.h ****     @{
1503:Drivers/CMSIS/Include/core_cm4.h ****  */
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Priority Grouping
1506:Drivers/CMSIS/Include/core_cm4.h **** 
1507:Drivers/CMSIS/Include/core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1508:Drivers/CMSIS/Include/core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1509:Drivers/CMSIS/Include/core_cm4.h ****   Only values from 0..7 are used.
1510:Drivers/CMSIS/Include/core_cm4.h ****   In case of a conflict between priority grouping and available
1511:Drivers/CMSIS/Include/core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1512:Drivers/CMSIS/Include/core_cm4.h **** 
1513:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1514:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccYImk4r.s 			page 28


1515:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1516:Drivers/CMSIS/Include/core_cm4.h **** {
  27              		.loc 1 1516 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
1517:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1518:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  43              		.loc 1 1518 0
  44 0008 7B68     		ldr	r3, [r7, #4]
  45 000a 03F00703 		and	r3, r3, #7
  46 000e FB60     		str	r3, [r7, #12]
1519:Drivers/CMSIS/Include/core_cm4.h **** 
1520:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  47              		.loc 1 1520 0
  48 0010 0C4B     		ldr	r3, .L2
  49 0012 DB68     		ldr	r3, [r3, #12]
  50 0014 BB60     		str	r3, [r7, #8]
1521:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk));             /* clear 
  51              		.loc 1 1521 0
  52 0016 BA68     		ldr	r2, [r7, #8]
  53 0018 4FF6FF03 		movw	r3, #63743
  54 001c 1340     		ands	r3, r3, r2
  55 001e BB60     		str	r3, [r7, #8]
1522:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1523:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1524:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
  56              		.loc 1 1524 0
  57 0020 FB68     		ldr	r3, [r7, #12]
  58 0022 1A02     		lsls	r2, r3, #8
1523:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << 8)                       );              /* Insert write key a
  59              		.loc 1 1523 0
  60 0024 BB68     		ldr	r3, [r7, #8]
  61 0026 1343     		orrs	r3, r3, r2
1522:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  62              		.loc 1 1522 0
  63 0028 43F0BF63 		orr	r3, r3, #100139008
  64 002c 43F40033 		orr	r3, r3, #131072
  65 0030 BB60     		str	r3, [r7, #8]
1525:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  66              		.loc 1 1525 0
  67 0032 044A     		ldr	r2, .L2
  68 0034 BB68     		ldr	r3, [r7, #8]
  69 0036 D360     		str	r3, [r2, #12]
1526:Drivers/CMSIS/Include/core_cm4.h **** }
ARM GAS  /tmp/ccYImk4r.s 			page 29


  70              		.loc 1 1526 0
  71 0038 1437     		adds	r7, r7, #20
  72              	.LCFI3:
  73              		.cfi_def_cfa_offset 4
  74 003a BD46     		mov	sp, r7
  75              	.LCFI4:
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 003c 5DF8047B 		ldr	r7, [sp], #4
  79              	.LCFI5:
  80              		.cfi_restore 7
  81              		.cfi_def_cfa_offset 0
  82 0040 7047     		bx	lr
  83              	.L3:
  84 0042 00BF     		.align	2
  85              	.L2:
  86 0044 00ED00E0 		.word	-536810240
  87              		.cfi_endproc
  88              	.LFE106:
  90              		.section	.text.NVIC_GetPriorityGrouping,"ax",%progbits
  91              		.align	2
  92              		.thumb
  93              		.thumb_func
  95              	NVIC_GetPriorityGrouping:
  96              	.LFB107:
1527:Drivers/CMSIS/Include/core_cm4.h **** 
1528:Drivers/CMSIS/Include/core_cm4.h **** 
1529:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Priority Grouping
1530:Drivers/CMSIS/Include/core_cm4.h **** 
1531:Drivers/CMSIS/Include/core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1532:Drivers/CMSIS/Include/core_cm4.h **** 
1533:Drivers/CMSIS/Include/core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1534:Drivers/CMSIS/Include/core_cm4.h ****  */
1535:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1536:Drivers/CMSIS/Include/core_cm4.h **** {
  97              		.loc 1 1536 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101              		@ link register save eliminated.
 102 0000 80B4     		push	{r7}
 103              	.LCFI6:
 104              		.cfi_def_cfa_offset 4
 105              		.cfi_offset 7, -4
 106 0002 00AF     		add	r7, sp, #0
 107              	.LCFI7:
 108              		.cfi_def_cfa_register 7
1537:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 109              		.loc 1 1537 0
 110 0004 044B     		ldr	r3, .L6
 111 0006 DB68     		ldr	r3, [r3, #12]
 112 0008 03F4E063 		and	r3, r3, #1792
 113 000c 1B0A     		lsrs	r3, r3, #8
1538:Drivers/CMSIS/Include/core_cm4.h **** }
 114              		.loc 1 1538 0
 115 000e 1846     		mov	r0, r3
 116 0010 BD46     		mov	sp, r7
ARM GAS  /tmp/ccYImk4r.s 			page 30


 117              	.LCFI8:
 118              		.cfi_def_cfa_register 13
 119              		@ sp needed
 120 0012 5DF8047B 		ldr	r7, [sp], #4
 121              	.LCFI9:
 122              		.cfi_restore 7
 123              		.cfi_def_cfa_offset 0
 124 0016 7047     		bx	lr
 125              	.L7:
 126              		.align	2
 127              	.L6:
 128 0018 00ED00E0 		.word	-536810240
 129              		.cfi_endproc
 130              	.LFE107:
 132              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
 133              		.align	2
 134              		.thumb
 135              		.thumb_func
 137              	NVIC_EnableIRQ:
 138              	.LFB108:
1539:Drivers/CMSIS/Include/core_cm4.h **** 
1540:Drivers/CMSIS/Include/core_cm4.h **** 
1541:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Enable External Interrupt
1542:Drivers/CMSIS/Include/core_cm4.h **** 
1543:Drivers/CMSIS/Include/core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1544:Drivers/CMSIS/Include/core_cm4.h **** 
1545:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1546:Drivers/CMSIS/Include/core_cm4.h ****  */
1547:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1548:Drivers/CMSIS/Include/core_cm4.h **** {
 139              		.loc 1 1548 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI10:
 146              		.cfi_def_cfa_offset 4
 147              		.cfi_offset 7, -4
 148 0002 83B0     		sub	sp, sp, #12
 149              	.LCFI11:
 150              		.cfi_def_cfa_offset 16
 151 0004 00AF     		add	r7, sp, #0
 152              	.LCFI12:
 153              		.cfi_def_cfa_register 7
 154 0006 0346     		mov	r3, r0
 155 0008 FB71     		strb	r3, [r7, #7]
1549:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 156              		.loc 1 1549 0
 157 000a 0849     		ldr	r1, .L9
 158 000c 97F90730 		ldrsb	r3, [r7, #7]
 159 0010 5B09     		lsrs	r3, r3, #5
 160 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 161 0014 02F01F02 		and	r2, r2, #31
 162 0018 0120     		movs	r0, #1
 163 001a 00FA02F2 		lsl	r2, r0, r2
 164 001e 41F82320 		str	r2, [r1, r3, lsl #2]
ARM GAS  /tmp/ccYImk4r.s 			page 31


1550:Drivers/CMSIS/Include/core_cm4.h **** }
 165              		.loc 1 1550 0
 166 0022 0C37     		adds	r7, r7, #12
 167              	.LCFI13:
 168              		.cfi_def_cfa_offset 4
 169 0024 BD46     		mov	sp, r7
 170              	.LCFI14:
 171              		.cfi_def_cfa_register 13
 172              		@ sp needed
 173 0026 5DF8047B 		ldr	r7, [sp], #4
 174              	.LCFI15:
 175              		.cfi_restore 7
 176              		.cfi_def_cfa_offset 0
 177 002a 7047     		bx	lr
 178              	.L10:
 179              		.align	2
 180              	.L9:
 181 002c 00E100E0 		.word	-536813312
 182              		.cfi_endproc
 183              	.LFE108:
 185              		.section	.text.NVIC_DisableIRQ,"ax",%progbits
 186              		.align	2
 187              		.thumb
 188              		.thumb_func
 190              	NVIC_DisableIRQ:
 191              	.LFB109:
1551:Drivers/CMSIS/Include/core_cm4.h **** 
1552:Drivers/CMSIS/Include/core_cm4.h **** 
1553:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Disable External Interrupt
1554:Drivers/CMSIS/Include/core_cm4.h **** 
1555:Drivers/CMSIS/Include/core_cm4.h ****     The function disables a device-specific interrupt in the NVIC interrupt controller.
1556:Drivers/CMSIS/Include/core_cm4.h **** 
1557:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1558:Drivers/CMSIS/Include/core_cm4.h ****  */
1559:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1560:Drivers/CMSIS/Include/core_cm4.h **** {
 192              		.loc 1 1560 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              	.LCFI16:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              	.LCFI17:
 203              		.cfi_def_cfa_offset 16
 204 0004 00AF     		add	r7, sp, #0
 205              	.LCFI18:
 206              		.cfi_def_cfa_register 7
 207 0006 0346     		mov	r3, r0
 208 0008 FB71     		strb	r3, [r7, #7]
1561:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 209              		.loc 1 1561 0
 210 000a 0949     		ldr	r1, .L12
 211 000c 97F90730 		ldrsb	r3, [r7, #7]
ARM GAS  /tmp/ccYImk4r.s 			page 32


 212 0010 5B09     		lsrs	r3, r3, #5
 213 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 214 0014 02F01F02 		and	r2, r2, #31
 215 0018 0120     		movs	r0, #1
 216 001a 00FA02F2 		lsl	r2, r0, r2
 217 001e 2033     		adds	r3, r3, #32
 218 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1562:Drivers/CMSIS/Include/core_cm4.h **** }
 219              		.loc 1 1562 0
 220 0024 0C37     		adds	r7, r7, #12
 221              	.LCFI19:
 222              		.cfi_def_cfa_offset 4
 223 0026 BD46     		mov	sp, r7
 224              	.LCFI20:
 225              		.cfi_def_cfa_register 13
 226              		@ sp needed
 227 0028 5DF8047B 		ldr	r7, [sp], #4
 228              	.LCFI21:
 229              		.cfi_restore 7
 230              		.cfi_def_cfa_offset 0
 231 002c 7047     		bx	lr
 232              	.L13:
 233 002e 00BF     		.align	2
 234              	.L12:
 235 0030 00E100E0 		.word	-536813312
 236              		.cfi_endproc
 237              	.LFE109:
 239              		.section	.text.NVIC_GetPendingIRQ,"ax",%progbits
 240              		.align	2
 241              		.thumb
 242              		.thumb_func
 244              	NVIC_GetPendingIRQ:
 245              	.LFB110:
1563:Drivers/CMSIS/Include/core_cm4.h **** 
1564:Drivers/CMSIS/Include/core_cm4.h **** 
1565:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Pending Interrupt
1566:Drivers/CMSIS/Include/core_cm4.h **** 
1567:Drivers/CMSIS/Include/core_cm4.h ****     The function reads the pending register in the NVIC and returns the pending bit
1568:Drivers/CMSIS/Include/core_cm4.h ****     for the specified interrupt.
1569:Drivers/CMSIS/Include/core_cm4.h **** 
1570:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1571:Drivers/CMSIS/Include/core_cm4.h **** 
1572:Drivers/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not pending.
1573:Drivers/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is pending.
1574:Drivers/CMSIS/Include/core_cm4.h ****  */
1575:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1576:Drivers/CMSIS/Include/core_cm4.h **** {
 246              		.loc 1 1576 0
 247              		.cfi_startproc
 248              		@ args = 0, pretend = 0, frame = 8
 249              		@ frame_needed = 1, uses_anonymous_args = 0
 250              		@ link register save eliminated.
 251 0000 80B4     		push	{r7}
 252              	.LCFI22:
 253              		.cfi_def_cfa_offset 4
 254              		.cfi_offset 7, -4
 255 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccYImk4r.s 			page 33


 256              	.LCFI23:
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              	.LCFI24:
 260              		.cfi_def_cfa_register 7
 261 0006 0346     		mov	r3, r0
 262 0008 FB71     		strb	r3, [r7, #7]
1577:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
 263              		.loc 1 1577 0
 264 000a 0A4A     		ldr	r2, .L16
 265 000c 97F90730 		ldrsb	r3, [r7, #7]
 266 0010 5B09     		lsrs	r3, r3, #5
 267 0012 4033     		adds	r3, r3, #64
 268 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
 269 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 270 001a 03F01F03 		and	r3, r3, #31
 271 001e 22FA03F3 		lsr	r3, r2, r3
 272 0022 03F00103 		and	r3, r3, #1
1578:Drivers/CMSIS/Include/core_cm4.h **** }
 273              		.loc 1 1578 0
 274 0026 1846     		mov	r0, r3
 275 0028 0C37     		adds	r7, r7, #12
 276              	.LCFI25:
 277              		.cfi_def_cfa_offset 4
 278 002a BD46     		mov	sp, r7
 279              	.LCFI26:
 280              		.cfi_def_cfa_register 13
 281              		@ sp needed
 282 002c 5DF8047B 		ldr	r7, [sp], #4
 283              	.LCFI27:
 284              		.cfi_restore 7
 285              		.cfi_def_cfa_offset 0
 286 0030 7047     		bx	lr
 287              	.L17:
 288 0032 00BF     		.align	2
 289              	.L16:
 290 0034 00E100E0 		.word	-536813312
 291              		.cfi_endproc
 292              	.LFE110:
 294              		.section	.text.NVIC_SetPendingIRQ,"ax",%progbits
 295              		.align	2
 296              		.thumb
 297              		.thumb_func
 299              	NVIC_SetPendingIRQ:
 300              	.LFB111:
1579:Drivers/CMSIS/Include/core_cm4.h **** 
1580:Drivers/CMSIS/Include/core_cm4.h **** 
1581:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Pending Interrupt
1582:Drivers/CMSIS/Include/core_cm4.h **** 
1583:Drivers/CMSIS/Include/core_cm4.h ****     The function sets the pending bit of an external interrupt.
1584:Drivers/CMSIS/Include/core_cm4.h **** 
1585:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number. Value cannot be negative.
1586:Drivers/CMSIS/Include/core_cm4.h ****  */
1587:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1588:Drivers/CMSIS/Include/core_cm4.h **** {
 301              		.loc 1 1588 0
 302              		.cfi_startproc
ARM GAS  /tmp/ccYImk4r.s 			page 34


 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306 0000 80B4     		push	{r7}
 307              	.LCFI28:
 308              		.cfi_def_cfa_offset 4
 309              		.cfi_offset 7, -4
 310 0002 83B0     		sub	sp, sp, #12
 311              	.LCFI29:
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              	.LCFI30:
 315              		.cfi_def_cfa_register 7
 316 0006 0346     		mov	r3, r0
 317 0008 FB71     		strb	r3, [r7, #7]
1589:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 318              		.loc 1 1589 0
 319 000a 0949     		ldr	r1, .L19
 320 000c 97F90730 		ldrsb	r3, [r7, #7]
 321 0010 5B09     		lsrs	r3, r3, #5
 322 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 323 0014 02F01F02 		and	r2, r2, #31
 324 0018 0120     		movs	r0, #1
 325 001a 00FA02F2 		lsl	r2, r0, r2
 326 001e 4033     		adds	r3, r3, #64
 327 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1590:Drivers/CMSIS/Include/core_cm4.h **** }
 328              		.loc 1 1590 0
 329 0024 0C37     		adds	r7, r7, #12
 330              	.LCFI31:
 331              		.cfi_def_cfa_offset 4
 332 0026 BD46     		mov	sp, r7
 333              	.LCFI32:
 334              		.cfi_def_cfa_register 13
 335              		@ sp needed
 336 0028 5DF8047B 		ldr	r7, [sp], #4
 337              	.LCFI33:
 338              		.cfi_restore 7
 339              		.cfi_def_cfa_offset 0
 340 002c 7047     		bx	lr
 341              	.L20:
 342 002e 00BF     		.align	2
 343              	.L19:
 344 0030 00E100E0 		.word	-536813312
 345              		.cfi_endproc
 346              	.LFE111:
 348              		.section	.text.NVIC_ClearPendingIRQ,"ax",%progbits
 349              		.align	2
 350              		.thumb
 351              		.thumb_func
 353              	NVIC_ClearPendingIRQ:
 354              	.LFB112:
1591:Drivers/CMSIS/Include/core_cm4.h **** 
1592:Drivers/CMSIS/Include/core_cm4.h **** 
1593:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Clear Pending Interrupt
1594:Drivers/CMSIS/Include/core_cm4.h **** 
1595:Drivers/CMSIS/Include/core_cm4.h ****     The function clears the pending bit of an external interrupt.
ARM GAS  /tmp/ccYImk4r.s 			page 35


1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:Drivers/CMSIS/Include/core_cm4.h ****  */
1599:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1600:Drivers/CMSIS/Include/core_cm4.h **** {
 355              		.loc 1 1600 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 8
 358              		@ frame_needed = 1, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360 0000 80B4     		push	{r7}
 361              	.LCFI34:
 362              		.cfi_def_cfa_offset 4
 363              		.cfi_offset 7, -4
 364 0002 83B0     		sub	sp, sp, #12
 365              	.LCFI35:
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              	.LCFI36:
 369              		.cfi_def_cfa_register 7
 370 0006 0346     		mov	r3, r0
 371 0008 FB71     		strb	r3, [r7, #7]
1601:Drivers/CMSIS/Include/core_cm4.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 372              		.loc 1 1601 0
 373 000a 0949     		ldr	r1, .L22
 374 000c 97F90730 		ldrsb	r3, [r7, #7]
 375 0010 5B09     		lsrs	r3, r3, #5
 376 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 377 0014 02F01F02 		and	r2, r2, #31
 378 0018 0120     		movs	r0, #1
 379 001a 00FA02F2 		lsl	r2, r0, r2
 380 001e 6033     		adds	r3, r3, #96
 381 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1602:Drivers/CMSIS/Include/core_cm4.h **** }
 382              		.loc 1 1602 0
 383 0024 0C37     		adds	r7, r7, #12
 384              	.LCFI37:
 385              		.cfi_def_cfa_offset 4
 386 0026 BD46     		mov	sp, r7
 387              	.LCFI38:
 388              		.cfi_def_cfa_register 13
 389              		@ sp needed
 390 0028 5DF8047B 		ldr	r7, [sp], #4
 391              	.LCFI39:
 392              		.cfi_restore 7
 393              		.cfi_def_cfa_offset 0
 394 002c 7047     		bx	lr
 395              	.L23:
 396 002e 00BF     		.align	2
 397              	.L22:
 398 0030 00E100E0 		.word	-536813312
 399              		.cfi_endproc
 400              	.LFE112:
 402              		.section	.text.NVIC_GetActive,"ax",%progbits
 403              		.align	2
 404              		.thumb
 405              		.thumb_func
ARM GAS  /tmp/ccYImk4r.s 			page 36


 407              	NVIC_GetActive:
 408              	.LFB113:
1603:Drivers/CMSIS/Include/core_cm4.h **** 
1604:Drivers/CMSIS/Include/core_cm4.h **** 
1605:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Active Interrupt
1606:Drivers/CMSIS/Include/core_cm4.h **** 
1607:Drivers/CMSIS/Include/core_cm4.h ****     The function reads the active register in NVIC and returns the active bit.
1608:Drivers/CMSIS/Include/core_cm4.h **** 
1609:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1610:Drivers/CMSIS/Include/core_cm4.h **** 
1611:Drivers/CMSIS/Include/core_cm4.h ****     \return             0  Interrupt status is not active.
1612:Drivers/CMSIS/Include/core_cm4.h ****     \return             1  Interrupt status is active.
1613:Drivers/CMSIS/Include/core_cm4.h ****  */
1614:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1615:Drivers/CMSIS/Include/core_cm4.h **** {
 409              		.loc 1 1615 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413              		@ link register save eliminated.
 414 0000 80B4     		push	{r7}
 415              	.LCFI40:
 416              		.cfi_def_cfa_offset 4
 417              		.cfi_offset 7, -4
 418 0002 83B0     		sub	sp, sp, #12
 419              	.LCFI41:
 420              		.cfi_def_cfa_offset 16
 421 0004 00AF     		add	r7, sp, #0
 422              	.LCFI42:
 423              		.cfi_def_cfa_register 7
 424 0006 0346     		mov	r3, r0
 425 0008 FB71     		strb	r3, [r7, #7]
1616:Drivers/CMSIS/Include/core_cm4.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
 426              		.loc 1 1616 0
 427 000a 0A4A     		ldr	r2, .L26
 428 000c 97F90730 		ldrsb	r3, [r7, #7]
 429 0010 5B09     		lsrs	r3, r3, #5
 430 0012 8033     		adds	r3, r3, #128
 431 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
 432 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 433 001a 03F01F03 		and	r3, r3, #31
 434 001e 22FA03F3 		lsr	r3, r2, r3
 435 0022 03F00103 		and	r3, r3, #1
1617:Drivers/CMSIS/Include/core_cm4.h **** }
 436              		.loc 1 1617 0
 437 0026 1846     		mov	r0, r3
 438 0028 0C37     		adds	r7, r7, #12
 439              	.LCFI43:
 440              		.cfi_def_cfa_offset 4
 441 002a BD46     		mov	sp, r7
 442              	.LCFI44:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 002c 5DF8047B 		ldr	r7, [sp], #4
 446              	.LCFI45:
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccYImk4r.s 			page 37


 449 0030 7047     		bx	lr
 450              	.L27:
 451 0032 00BF     		.align	2
 452              	.L26:
 453 0034 00E100E0 		.word	-536813312
 454              		.cfi_endproc
 455              	.LFE113:
 457              		.section	.text.NVIC_SetPriority,"ax",%progbits
 458              		.align	2
 459              		.thumb
 460              		.thumb_func
 462              	NVIC_SetPriority:
 463              	.LFB114:
1618:Drivers/CMSIS/Include/core_cm4.h **** 
1619:Drivers/CMSIS/Include/core_cm4.h **** 
1620:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Set Interrupt Priority
1621:Drivers/CMSIS/Include/core_cm4.h **** 
1622:Drivers/CMSIS/Include/core_cm4.h ****     The function sets the priority of an interrupt.
1623:Drivers/CMSIS/Include/core_cm4.h **** 
1624:Drivers/CMSIS/Include/core_cm4.h ****     \note The priority cannot be set for every core interrupt.
1625:Drivers/CMSIS/Include/core_cm4.h **** 
1626:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]      IRQn  Interrupt number.
1627:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]  priority  Priority to set.
1628:Drivers/CMSIS/Include/core_cm4.h ****  */
1629:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1630:Drivers/CMSIS/Include/core_cm4.h **** {
 464              		.loc 1 1630 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 8
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              	.LCFI46:
 471              		.cfi_def_cfa_offset 4
 472              		.cfi_offset 7, -4
 473 0002 83B0     		sub	sp, sp, #12
 474              	.LCFI47:
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              	.LCFI48:
 478              		.cfi_def_cfa_register 7
 479 0006 0346     		mov	r3, r0
 480 0008 3960     		str	r1, [r7]
 481 000a FB71     		strb	r3, [r7, #7]
1631:Drivers/CMSIS/Include/core_cm4.h ****   if((int32_t)IRQn < 0) {
 482              		.loc 1 1631 0
 483 000c 97F90730 		ldrsb	r3, [r7, #7]
 484 0010 002B     		cmp	r3, #0
 485 0012 0BDA     		bge	.L29
1632:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
 486              		.loc 1 1632 0
 487 0014 0D49     		ldr	r1, .L31
 488 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 489 0018 03F00F03 		and	r3, r3, #15
 490 001c 043B     		subs	r3, r3, #4
 491 001e 3A68     		ldr	r2, [r7]
 492 0020 D2B2     		uxtb	r2, r2
ARM GAS  /tmp/ccYImk4r.s 			page 38


 493 0022 1201     		lsls	r2, r2, #4
 494 0024 D2B2     		uxtb	r2, r2
 495 0026 0B44     		add	r3, r3, r1
 496 0028 1A76     		strb	r2, [r3, #24]
 497 002a 09E0     		b	.L28
 498              	.L29:
1633:Drivers/CMSIS/Include/core_cm4.h ****   }
1634:Drivers/CMSIS/Include/core_cm4.h ****   else {
1635:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8 - __NVIC_PRIO_BIT
 499              		.loc 1 1635 0
 500 002c 0849     		ldr	r1, .L31+4
 501 002e 97F90730 		ldrsb	r3, [r7, #7]
 502 0032 3A68     		ldr	r2, [r7]
 503 0034 D2B2     		uxtb	r2, r2
 504 0036 1201     		lsls	r2, r2, #4
 505 0038 D2B2     		uxtb	r2, r2
 506 003a 0B44     		add	r3, r3, r1
 507 003c 83F80023 		strb	r2, [r3, #768]
 508              	.L28:
1636:Drivers/CMSIS/Include/core_cm4.h ****   }
1637:Drivers/CMSIS/Include/core_cm4.h **** }
 509              		.loc 1 1637 0
 510 0040 0C37     		adds	r7, r7, #12
 511              	.LCFI49:
 512              		.cfi_def_cfa_offset 4
 513 0042 BD46     		mov	sp, r7
 514              	.LCFI50:
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 0044 5DF8047B 		ldr	r7, [sp], #4
 518              	.LCFI51:
 519              		.cfi_restore 7
 520              		.cfi_def_cfa_offset 0
 521 0048 7047     		bx	lr
 522              	.L32:
 523 004a 00BF     		.align	2
 524              	.L31:
 525 004c 00ED00E0 		.word	-536810240
 526 0050 00E100E0 		.word	-536813312
 527              		.cfi_endproc
 528              	.LFE114:
 530              		.section	.text.NVIC_GetPriority,"ax",%progbits
 531              		.align	2
 532              		.thumb
 533              		.thumb_func
 535              	NVIC_GetPriority:
 536              	.LFB115:
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** 
1640:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Get Interrupt Priority
1641:Drivers/CMSIS/Include/core_cm4.h **** 
1642:Drivers/CMSIS/Include/core_cm4.h ****     The function reads the priority of an interrupt. The interrupt
1643:Drivers/CMSIS/Include/core_cm4.h ****     number can be positive to specify an external (device specific)
1644:Drivers/CMSIS/Include/core_cm4.h ****     interrupt, or negative to specify an internal (core) interrupt.
1645:Drivers/CMSIS/Include/core_cm4.h **** 
1646:Drivers/CMSIS/Include/core_cm4.h **** 
1647:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]   IRQn  Interrupt number.
ARM GAS  /tmp/ccYImk4r.s 			page 39


1648:Drivers/CMSIS/Include/core_cm4.h ****     \return             Interrupt Priority. Value is aligned automatically to the implemented
1649:Drivers/CMSIS/Include/core_cm4.h ****                         priority bits of the microcontroller.
1650:Drivers/CMSIS/Include/core_cm4.h ****  */
1651:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1652:Drivers/CMSIS/Include/core_cm4.h **** {
 537              		.loc 1 1652 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 8
 540              		@ frame_needed = 1, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542 0000 80B4     		push	{r7}
 543              	.LCFI52:
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 0002 83B0     		sub	sp, sp, #12
 547              	.LCFI53:
 548              		.cfi_def_cfa_offset 16
 549 0004 00AF     		add	r7, sp, #0
 550              	.LCFI54:
 551              		.cfi_def_cfa_register 7
 552 0006 0346     		mov	r3, r0
 553 0008 FB71     		strb	r3, [r7, #7]
1653:Drivers/CMSIS/Include/core_cm4.h **** 
1654:Drivers/CMSIS/Include/core_cm4.h ****   if((int32_t)IRQn < 0) {
 554              		.loc 1 1654 0
 555 000a 97F90730 		ldrsb	r3, [r7, #7]
 556 000e 002B     		cmp	r3, #0
 557 0010 0ADA     		bge	.L34
1655:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8 - __NVIC_PRIO_BITS)))
 558              		.loc 1 1655 0
 559 0012 0D4A     		ldr	r2, .L36
 560 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 0016 03F00F03 		and	r3, r3, #15
 562 001a 043B     		subs	r3, r3, #4
 563 001c 1344     		add	r3, r3, r2
 564 001e 1B7E     		ldrb	r3, [r3, #24]
 565 0020 DBB2     		uxtb	r3, r3
 566 0022 1B09     		lsrs	r3, r3, #4
 567 0024 DBB2     		uxtb	r3, r3
 568 0026 08E0     		b	.L35
 569              	.L34:
1656:Drivers/CMSIS/Include/core_cm4.h ****   }
1657:Drivers/CMSIS/Include/core_cm4.h ****   else {
1658:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8 - __NVIC_PRIO_BITS)))
 570              		.loc 1 1658 0
 571 0028 084A     		ldr	r2, .L36+4
 572 002a 97F90730 		ldrsb	r3, [r7, #7]
 573 002e 1344     		add	r3, r3, r2
 574 0030 93F80033 		ldrb	r3, [r3, #768]
 575 0034 DBB2     		uxtb	r3, r3
 576 0036 1B09     		lsrs	r3, r3, #4
 577 0038 DBB2     		uxtb	r3, r3
 578              	.L35:
1659:Drivers/CMSIS/Include/core_cm4.h ****   }
1660:Drivers/CMSIS/Include/core_cm4.h **** }
 579              		.loc 1 1660 0
 580 003a 1846     		mov	r0, r3
ARM GAS  /tmp/ccYImk4r.s 			page 40


 581 003c 0C37     		adds	r7, r7, #12
 582              	.LCFI55:
 583              		.cfi_def_cfa_offset 4
 584 003e BD46     		mov	sp, r7
 585              	.LCFI56:
 586              		.cfi_def_cfa_register 13
 587              		@ sp needed
 588 0040 5DF8047B 		ldr	r7, [sp], #4
 589              	.LCFI57:
 590              		.cfi_restore 7
 591              		.cfi_def_cfa_offset 0
 592 0044 7047     		bx	lr
 593              	.L37:
 594 0046 00BF     		.align	2
 595              	.L36:
 596 0048 00ED00E0 		.word	-536810240
 597 004c 00E100E0 		.word	-536813312
 598              		.cfi_endproc
 599              	.LFE115:
 601              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 602              		.align	2
 603              		.thumb
 604              		.thumb_func
 606              	NVIC_EncodePriority:
 607              	.LFB116:
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** 
1663:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Encode Priority
1664:Drivers/CMSIS/Include/core_cm4.h **** 
1665:Drivers/CMSIS/Include/core_cm4.h ****     The function encodes the priority for an interrupt with the given priority group,
1666:Drivers/CMSIS/Include/core_cm4.h ****     preemptive priority value, and subpriority value.
1667:Drivers/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1668:Drivers/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1669:Drivers/CMSIS/Include/core_cm4.h **** 
1670:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1671:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1672:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]       SubPriority  Subpriority value (starting from 0).
1673:Drivers/CMSIS/Include/core_cm4.h ****     \return                        Encoded priority. Value can be used in the function \ref NVIC_Se
1674:Drivers/CMSIS/Include/core_cm4.h ****  */
1675:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1676:Drivers/CMSIS/Include/core_cm4.h **** {
 608              		.loc 1 1676 0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 32
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 80B4     		push	{r7}
 614              	.LCFI58:
 615              		.cfi_def_cfa_offset 4
 616              		.cfi_offset 7, -4
 617 0002 89B0     		sub	sp, sp, #36
 618              	.LCFI59:
 619              		.cfi_def_cfa_offset 40
 620 0004 00AF     		add	r7, sp, #0
 621              	.LCFI60:
 622              		.cfi_def_cfa_register 7
 623 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccYImk4r.s 			page 41


 624 0008 B960     		str	r1, [r7, #8]
 625 000a 7A60     		str	r2, [r7, #4]
1677:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 626              		.loc 1 1677 0
 627 000c FB68     		ldr	r3, [r7, #12]
 628 000e 03F00703 		and	r3, r3, #7
 629 0012 FB61     		str	r3, [r7, #28]
1678:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1679:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1680:Drivers/CMSIS/Include/core_cm4.h **** 
1681:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 630              		.loc 1 1681 0
 631 0014 FB69     		ldr	r3, [r7, #28]
 632 0016 C3F10703 		rsb	r3, r3, #7
 633 001a 042B     		cmp	r3, #4
 634 001c 28BF     		it	cs
 635 001e 0423     		movcs	r3, #4
 636 0020 BB61     		str	r3, [r7, #24]
1682:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 637              		.loc 1 1682 0
 638 0022 FB69     		ldr	r3, [r7, #28]
 639 0024 0433     		adds	r3, r3, #4
 640 0026 062B     		cmp	r3, #6
 641 0028 02D9     		bls	.L39
 642              		.loc 1 1682 0 is_stmt 0 discriminator 1
 643 002a FB69     		ldr	r3, [r7, #28]
 644 002c 033B     		subs	r3, r3, #3
 645 002e 00E0     		b	.L40
 646              	.L39:
 647              		.loc 1 1682 0 discriminator 2
 648 0030 0023     		movs	r3, #0
 649              	.L40:
 650              		.loc 1 1682 0 discriminator 4
 651 0032 7B61     		str	r3, [r7, #20]
1683:Drivers/CMSIS/Include/core_cm4.h **** 
1684:Drivers/CMSIS/Include/core_cm4.h ****   return (
1685:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 652              		.loc 1 1685 0 is_stmt 1 discriminator 4
 653 0034 BB69     		ldr	r3, [r7, #24]
 654 0036 0122     		movs	r2, #1
 655 0038 02FA03F3 		lsl	r3, r2, r3
 656 003c 5A1E     		subs	r2, r3, #1
 657 003e BB68     		ldr	r3, [r7, #8]
 658 0040 1A40     		ands	r2, r2, r3
 659 0042 7B69     		ldr	r3, [r7, #20]
 660 0044 9A40     		lsls	r2, r2, r3
1686:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 661              		.loc 1 1686 0 discriminator 4
 662 0046 7B69     		ldr	r3, [r7, #20]
 663 0048 0121     		movs	r1, #1
 664 004a 01FA03F3 		lsl	r3, r1, r3
 665 004e 591E     		subs	r1, r3, #1
 666 0050 7B68     		ldr	r3, [r7, #4]
 667 0052 0B40     		ands	r3, r3, r1
1684:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 668              		.loc 1 1684 0 discriminator 4
 669 0054 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccYImk4r.s 			page 42


1687:Drivers/CMSIS/Include/core_cm4.h ****          );
1688:Drivers/CMSIS/Include/core_cm4.h **** }
 670              		.loc 1 1688 0 discriminator 4
 671 0056 1846     		mov	r0, r3
 672 0058 2437     		adds	r7, r7, #36
 673              	.LCFI61:
 674              		.cfi_def_cfa_offset 4
 675 005a BD46     		mov	sp, r7
 676              	.LCFI62:
 677              		.cfi_def_cfa_register 13
 678              		@ sp needed
 679 005c 5DF8047B 		ldr	r7, [sp], #4
 680              	.LCFI63:
 681              		.cfi_restore 7
 682              		.cfi_def_cfa_offset 0
 683 0060 7047     		bx	lr
 684              		.cfi_endproc
 685              	.LFE116:
 687 0062 00BF     		.section	.text.NVIC_DecodePriority,"ax",%progbits
 688              		.align	2
 689              		.thumb
 690              		.thumb_func
 692              	NVIC_DecodePriority:
 693              	.LFB117:
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** 
1691:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  Decode Priority
1692:Drivers/CMSIS/Include/core_cm4.h **** 
1693:Drivers/CMSIS/Include/core_cm4.h ****     The function decodes an interrupt priority value with a given priority group to
1694:Drivers/CMSIS/Include/core_cm4.h ****     preemptive priority value and subpriority value.
1695:Drivers/CMSIS/Include/core_cm4.h ****     In case of a conflict between priority grouping and available
1696:Drivers/CMSIS/Include/core_cm4.h ****     priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1697:Drivers/CMSIS/Include/core_cm4.h **** 
1698:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]         Priority   Priority value, which can be retrieved with the function \ref NV
1699:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]     PriorityGroup  Used priority group.
1700:Drivers/CMSIS/Include/core_cm4.h ****     \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1701:Drivers/CMSIS/Include/core_cm4.h ****     \param [out]     pSubPriority  Subpriority value (starting from 0).
1702:Drivers/CMSIS/Include/core_cm4.h ****  */
1703:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* pPre
1704:Drivers/CMSIS/Include/core_cm4.h **** {
 694              		.loc 1 1704 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 32
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              	.LCFI64:
 701              		.cfi_def_cfa_offset 4
 702              		.cfi_offset 7, -4
 703 0002 89B0     		sub	sp, sp, #36
 704              	.LCFI65:
 705              		.cfi_def_cfa_offset 40
 706 0004 00AF     		add	r7, sp, #0
 707              	.LCFI66:
 708              		.cfi_def_cfa_register 7
 709 0006 F860     		str	r0, [r7, #12]
 710 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccYImk4r.s 			page 43


 711 000a 7A60     		str	r2, [r7, #4]
 712 000c 3B60     		str	r3, [r7]
1705:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 713              		.loc 1 1705 0
 714 000e BB68     		ldr	r3, [r7, #8]
 715 0010 03F00703 		and	r3, r3, #7
 716 0014 FB61     		str	r3, [r7, #28]
1706:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1707:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1708:Drivers/CMSIS/Include/core_cm4.h **** 
1709:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 717              		.loc 1 1709 0
 718 0016 FB69     		ldr	r3, [r7, #28]
 719 0018 C3F10703 		rsb	r3, r3, #7
 720 001c 042B     		cmp	r3, #4
 721 001e 28BF     		it	cs
 722 0020 0423     		movcs	r3, #4
 723 0022 BB61     		str	r3, [r7, #24]
1710:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 724              		.loc 1 1710 0
 725 0024 FB69     		ldr	r3, [r7, #28]
 726 0026 0433     		adds	r3, r3, #4
 727 0028 062B     		cmp	r3, #6
 728 002a 02D9     		bls	.L43
 729              		.loc 1 1710 0 is_stmt 0 discriminator 1
 730 002c FB69     		ldr	r3, [r7, #28]
 731 002e 033B     		subs	r3, r3, #3
 732 0030 00E0     		b	.L44
 733              	.L43:
 734              		.loc 1 1710 0 discriminator 2
 735 0032 0023     		movs	r3, #0
 736              	.L44:
 737              		.loc 1 1710 0 discriminator 4
 738 0034 7B61     		str	r3, [r7, #20]
1711:Drivers/CMSIS/Include/core_cm4.h **** 
1712:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 739              		.loc 1 1712 0 is_stmt 1 discriminator 4
 740 0036 7B69     		ldr	r3, [r7, #20]
 741 0038 FA68     		ldr	r2, [r7, #12]
 742 003a DA40     		lsrs	r2, r2, r3
 743 003c BB69     		ldr	r3, [r7, #24]
 744 003e 0121     		movs	r1, #1
 745 0040 01FA03F3 		lsl	r3, r1, r3
 746 0044 013B     		subs	r3, r3, #1
 747 0046 1A40     		ands	r2, r2, r3
 748 0048 7B68     		ldr	r3, [r7, #4]
 749 004a 1A60     		str	r2, [r3]
1713:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 750              		.loc 1 1713 0 discriminator 4
 751 004c 7B69     		ldr	r3, [r7, #20]
 752 004e 0122     		movs	r2, #1
 753 0050 02FA03F3 		lsl	r3, r2, r3
 754 0054 5A1E     		subs	r2, r3, #1
 755 0056 FB68     		ldr	r3, [r7, #12]
 756 0058 1A40     		ands	r2, r2, r3
 757 005a 3B68     		ldr	r3, [r7]
 758 005c 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccYImk4r.s 			page 44


1714:Drivers/CMSIS/Include/core_cm4.h **** }
 759              		.loc 1 1714 0 discriminator 4
 760 005e 2437     		adds	r7, r7, #36
 761              	.LCFI67:
 762              		.cfi_def_cfa_offset 4
 763 0060 BD46     		mov	sp, r7
 764              	.LCFI68:
 765              		.cfi_def_cfa_register 13
 766              		@ sp needed
 767 0062 5DF8047B 		ldr	r7, [sp], #4
 768              	.LCFI69:
 769              		.cfi_restore 7
 770              		.cfi_def_cfa_offset 0
 771 0066 7047     		bx	lr
 772              		.cfi_endproc
 773              	.LFE117:
 775              		.section	.text.NVIC_SystemReset,"ax",%progbits
 776              		.align	2
 777              		.thumb
 778              		.thumb_func
 780              	NVIC_SystemReset:
 781              	.LFB118:
1715:Drivers/CMSIS/Include/core_cm4.h **** 
1716:Drivers/CMSIS/Include/core_cm4.h **** 
1717:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  System Reset
1718:Drivers/CMSIS/Include/core_cm4.h **** 
1719:Drivers/CMSIS/Include/core_cm4.h ****     The function initiates a system reset request to reset the MCU.
1720:Drivers/CMSIS/Include/core_cm4.h ****  */
1721:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1722:Drivers/CMSIS/Include/core_cm4.h **** {
 782              		.loc 1 1722 0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786              		@ link register save eliminated.
 787 0000 80B4     		push	{r7}
 788              	.LCFI70:
 789              		.cfi_def_cfa_offset 4
 790              		.cfi_offset 7, -4
 791 0002 00AF     		add	r7, sp, #0
 792              	.LCFI71:
 793              		.cfi_def_cfa_register 7
 794              	.LBB8:
 795              	.LBB9:
 796              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
ARM GAS  /tmp/ccYImk4r.s 			page 45


  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 46


  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  /tmp/ccYImk4r.s 			page 47


 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
ARM GAS  /tmp/ccYImk4r.s 			page 48


 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
ARM GAS  /tmp/ccYImk4r.s 			page 49


 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
ARM GAS  /tmp/ccYImk4r.s 			page 50


 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 51


 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/ccYImk4r.s 			page 52


 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 451:Drivers/CMSIS/Include/core_cmInstr.h **** }
 452:Drivers/CMSIS/Include/core_cmInstr.h **** 
 453:Drivers/CMSIS/Include/core_cmInstr.h **** 
 454:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 455:Drivers/CMSIS/Include/core_cmInstr.h **** 
 456:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
 457:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
 458:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 459:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 460:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 461:Drivers/CMSIS/Include/core_cmInstr.h **** {
 462:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb 0xF":::"memory");
 463:Drivers/CMSIS/Include/core_cmInstr.h **** }
 464:Drivers/CMSIS/Include/core_cmInstr.h **** 
 465:Drivers/CMSIS/Include/core_cmInstr.h **** 
 466:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 467:Drivers/CMSIS/Include/core_cmInstr.h **** 
 468:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
ARM GAS  /tmp/ccYImk4r.s 			page 53


 469:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 470:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 471:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 472:Drivers/CMSIS/Include/core_cmInstr.h **** {
 473:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb 0xF":::"memory");
 797              		.loc 2 473 0
 798              	@ 473 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 799 0004 BFF34F8F 		dsb 0xF
 800              	@ 0 "" 2
 801              		.thumb
 802              	.LBE9:
 803              	.LBE8:
1723:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1724:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1725:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 804              		.loc 1 1725 0
 805 0008 0549     		ldr	r1, .L47
1726:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 806              		.loc 1 1726 0
 807 000a 054B     		ldr	r3, .L47
 808 000c DB68     		ldr	r3, [r3, #12]
 809 000e 03F4E062 		and	r2, r3, #1792
1725:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 810              		.loc 1 1725 0
 811 0012 044B     		ldr	r3, .L47+4
 812 0014 1343     		orrs	r3, r3, r2
 813 0016 CB60     		str	r3, [r1, #12]
 814              	.LBB10:
 815              	.LBB11:
 816              		.loc 2 473 0
 817              	@ 473 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 818 0018 BFF34F8F 		dsb 0xF
 819              	@ 0 "" 2
 820              		.thumb
 821              	.L46:
 822              	.LBE11:
 823              	.LBE10:
 824              	.LBB12:
 825              	.LBB13:
 418:Drivers/CMSIS/Include/core_cmInstr.h **** }
 826              		.loc 2 418 0 discriminator 1
 827              	@ 418 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 828 001c 00BF     		nop
 829              	@ 0 "" 2
 830              		.thumb
 831              	.LBE13:
 832              	.LBE12:
1727:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1728:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1729:Drivers/CMSIS/Include/core_cm4.h ****   while(1) { __NOP(); }                                             /* wait until reset */
 833              		.loc 1 1729 0 discriminator 1
 834 001e FDE7     		b	.L46
 835              	.L48:
 836              		.align	2
 837              	.L47:
 838 0020 00ED00E0 		.word	-536810240
 839 0024 0400FA05 		.word	100270084
ARM GAS  /tmp/ccYImk4r.s 			page 54


 840              		.cfi_endproc
 841              	.LFE118:
 843              		.section	.text.SysTick_Config,"ax",%progbits
 844              		.align	2
 845              		.thumb
 846              		.thumb_func
 848              	SysTick_Config:
 849              	.LFB119:
1730:Drivers/CMSIS/Include/core_cm4.h **** }
1731:Drivers/CMSIS/Include/core_cm4.h **** 
1732:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1733:Drivers/CMSIS/Include/core_cm4.h **** 
1734:Drivers/CMSIS/Include/core_cm4.h **** 
1735:Drivers/CMSIS/Include/core_cm4.h **** 
1736:Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1737:Drivers/CMSIS/Include/core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1738:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1739:Drivers/CMSIS/Include/core_cm4.h ****     \brief      Functions that configure the System.
1740:Drivers/CMSIS/Include/core_cm4.h ****   @{
1741:Drivers/CMSIS/Include/core_cm4.h ****  */
1742:Drivers/CMSIS/Include/core_cm4.h **** 
1743:Drivers/CMSIS/Include/core_cm4.h **** #if (__Vendor_SysTickConfig == 0)
1744:Drivers/CMSIS/Include/core_cm4.h **** 
1745:Drivers/CMSIS/Include/core_cm4.h **** /** \brief  System Tick Configuration
1746:Drivers/CMSIS/Include/core_cm4.h **** 
1747:Drivers/CMSIS/Include/core_cm4.h ****     The function initializes the System Timer and its interrupt, and starts the System Tick Timer.
1748:Drivers/CMSIS/Include/core_cm4.h ****     Counter is in free running mode to generate periodic interrupts.
1749:Drivers/CMSIS/Include/core_cm4.h **** 
1750:Drivers/CMSIS/Include/core_cm4.h ****     \param [in]  ticks  Number of ticks between two interrupts.
1751:Drivers/CMSIS/Include/core_cm4.h **** 
1752:Drivers/CMSIS/Include/core_cm4.h ****     \return          0  Function succeeded.
1753:Drivers/CMSIS/Include/core_cm4.h ****     \return          1  Function failed.
1754:Drivers/CMSIS/Include/core_cm4.h **** 
1755:Drivers/CMSIS/Include/core_cm4.h ****     \note     When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1756:Drivers/CMSIS/Include/core_cm4.h ****     function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
1757:Drivers/CMSIS/Include/core_cm4.h ****     must contain a vendor-specific implementation of this function.
1758:Drivers/CMSIS/Include/core_cm4.h **** 
1759:Drivers/CMSIS/Include/core_cm4.h ****  */
1760:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1761:Drivers/CMSIS/Include/core_cm4.h **** {
 850              		.loc 1 1761 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              	.LCFI72:
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 82B0     		sub	sp, sp, #8
 860              	.LCFI73:
 861              		.cfi_def_cfa_offset 16
 862 0004 00AF     		add	r7, sp, #0
 863              	.LCFI74:
 864              		.cfi_def_cfa_register 7
 865 0006 7860     		str	r0, [r7, #4]
1762:Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk) { return (1UL); }    /* Reload value impossible */
ARM GAS  /tmp/ccYImk4r.s 			page 55


 866              		.loc 1 1762 0
 867 0008 7B68     		ldr	r3, [r7, #4]
 868 000a 013B     		subs	r3, r3, #1
 869 000c B3F1807F 		cmp	r3, #16777216
 870 0010 01D3     		bcc	.L50
 871              		.loc 1 1762 0 is_stmt 0 discriminator 1
 872 0012 0123     		movs	r3, #1
 873 0014 0FE0     		b	.L51
 874              	.L50:
1763:Drivers/CMSIS/Include/core_cm4.h **** 
1764:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 875              		.loc 1 1764 0 is_stmt 1
 876 0016 0A4A     		ldr	r2, .L52
 877 0018 7B68     		ldr	r3, [r7, #4]
 878 001a 013B     		subs	r3, r3, #1
 879 001c 5360     		str	r3, [r2, #4]
1765:Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 880              		.loc 1 1765 0
 881 001e 4FF0FF30 		mov	r0, #-1
 882 0022 0F21     		movs	r1, #15
 883 0024 FFF7FEFF 		bl	NVIC_SetPriority
1766:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 884              		.loc 1 1766 0
 885 0028 054B     		ldr	r3, .L52
 886 002a 0022     		movs	r2, #0
 887 002c 9A60     		str	r2, [r3, #8]
1767:Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 888              		.loc 1 1767 0
 889 002e 044B     		ldr	r3, .L52
 890 0030 0722     		movs	r2, #7
 891 0032 1A60     		str	r2, [r3]
1768:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
1769:Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1770:Drivers/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 892              		.loc 1 1770 0
 893 0034 0023     		movs	r3, #0
 894              	.L51:
1771:Drivers/CMSIS/Include/core_cm4.h **** }
 895              		.loc 1 1771 0
 896 0036 1846     		mov	r0, r3
 897 0038 0837     		adds	r7, r7, #8
 898              	.LCFI75:
 899              		.cfi_def_cfa_offset 8
 900 003a BD46     		mov	sp, r7
 901              	.LCFI76:
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 003c 80BD     		pop	{r7, pc}
 905              	.L53:
 906 003e 00BF     		.align	2
 907              	.L52:
 908 0040 10E000E0 		.word	-536813552
 909              		.cfi_endproc
 910              	.LFE119:
 912              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 913              		.align	2
 914              		.global	HAL_NVIC_SetPriorityGrouping
ARM GAS  /tmp/ccYImk4r.s 			page 56


 915              		.thumb
 916              		.thumb_func
 918              	HAL_NVIC_SetPriorityGrouping:
 919              	.LFB125:
 920              		.file 3 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @file    stm32l4xx_hal_cortex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @version V1.1.1
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @date    16-October-2015
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Initialization and Configuration functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Peripheral Control functions
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @verbatim
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===========================================================
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         function according to the following table.
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      The table below gives the allowed values of the pre-emption priority and subpriority according
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        ============================================================================================
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****          NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        ============================================================================================
  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                               |                                   |                             | 4
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                               |                                   |                             | 3
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                               |                                   |                             | 2
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                               |                                   |                             | 1
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                               |                                   |                             | 0
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        ============================================================================================
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  /tmp/ccYImk4r.s 			page 57


  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest sub priority
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure SysTick using CORTEX HAL driver ***
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ========================================================
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        is a CMSIS function that:
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        inside the stm32l4xx_hal_cortex.h file.
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @endverbatim
  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @attention
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *      without specific prior written permission.
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
ARM GAS  /tmp/ccYImk4r.s 			page 58


 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #include "stm32l4xx_hal.h"
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       SysTick functionalities
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         using the required unlock sequence.
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    4 bits for subpriority
ARM GAS  /tmp/ccYImk4r.s 			page 59


 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    1 bit  for subpriority
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    0 bit  for subpriority
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 921              		.loc 3 180 0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 1, uses_anonymous_args = 0
 925 0000 80B5     		push	{r7, lr}
 926              	.LCFI77:
 927              		.cfi_def_cfa_offset 8
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 930 0002 82B0     		sub	sp, sp, #8
 931              	.LCFI78:
 932              		.cfi_def_cfa_offset 16
 933 0004 00AF     		add	r7, sp, #0
 934              	.LCFI79:
 935              		.cfi_def_cfa_register 7
 936 0006 7860     		str	r0, [r7, #4]
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 937              		.loc 3 185 0
 938 0008 7868     		ldr	r0, [r7, #4]
 939 000a FFF7FEFF 		bl	NVIC_SetPriorityGrouping
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 940              		.loc 3 186 0
 941 000e 0837     		adds	r7, r7, #8
 942              	.LCFI80:
 943              		.cfi_def_cfa_offset 8
 944 0010 BD46     		mov	sp, r7
 945              	.LCFI81:
 946              		.cfi_def_cfa_register 13
 947              		@ sp needed
 948 0012 80BD     		pop	{r7, pc}
 949              		.cfi_endproc
 950              	.LFE125:
 952              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 953              		.align	2
 954              		.global	HAL_NVIC_SetPriority
 955              		.thumb
 956              		.thumb_func
 958              	HAL_NVIC_SetPriority:
 959              	.LFB126:
ARM GAS  /tmp/ccYImk4r.s 			page 60


 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 960              		.loc 3 202 0
 961              		.cfi_startproc
 962              		@ args = 0, pretend = 0, frame = 24
 963              		@ frame_needed = 1, uses_anonymous_args = 0
 964 0000 80B5     		push	{r7, lr}
 965              	.LCFI82:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 7, -8
 968              		.cfi_offset 14, -4
 969 0002 86B0     		sub	sp, sp, #24
 970              	.LCFI83:
 971              		.cfi_def_cfa_offset 32
 972 0004 00AF     		add	r7, sp, #0
 973              	.LCFI84:
 974              		.cfi_def_cfa_register 7
 975 0006 0346     		mov	r3, r0
 976 0008 B960     		str	r1, [r7, #8]
 977 000a 7A60     		str	r2, [r7, #4]
 978 000c FB73     		strb	r3, [r7, #15]
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 979              		.loc 3 203 0
 980 000e 0023     		movs	r3, #0
 981 0010 7B61     		str	r3, [r7, #20]
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 982              		.loc 3 209 0
 983 0012 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 984 0016 7861     		str	r0, [r7, #20]
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 985              		.loc 3 211 0
 986 0018 7869     		ldr	r0, [r7, #20]
 987 001a B968     		ldr	r1, [r7, #8]
 988 001c 7A68     		ldr	r2, [r7, #4]
 989 001e FFF7FEFF 		bl	NVIC_EncodePriority
 990 0022 0246     		mov	r2, r0
 991 0024 97F90F30 		ldrsb	r3, [r7, #15]
ARM GAS  /tmp/ccYImk4r.s 			page 61


 992 0028 1846     		mov	r0, r3
 993 002a 1146     		mov	r1, r2
 994 002c FFF7FEFF 		bl	NVIC_SetPriority
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 995              		.loc 3 212 0
 996 0030 1837     		adds	r7, r7, #24
 997              	.LCFI85:
 998              		.cfi_def_cfa_offset 8
 999 0032 BD46     		mov	sp, r7
 1000              	.LCFI86:
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 0034 80BD     		pop	{r7, pc}
 1004              		.cfi_endproc
 1005              	.LFE126:
 1007 0036 00BF     		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 1008              		.align	2
 1009              		.global	HAL_NVIC_EnableIRQ
 1010              		.thumb
 1011              		.thumb_func
 1013              	HAL_NVIC_EnableIRQ:
 1014              	.LFB127:
 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         function should be called before.
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1015              		.loc 3 224 0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 8
 1018              		@ frame_needed = 1, uses_anonymous_args = 0
 1019 0000 80B5     		push	{r7, lr}
 1020              	.LCFI87:
 1021              		.cfi_def_cfa_offset 8
 1022              		.cfi_offset 7, -8
 1023              		.cfi_offset 14, -4
 1024 0002 82B0     		sub	sp, sp, #8
 1025              	.LCFI88:
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              	.LCFI89:
 1029              		.cfi_def_cfa_register 7
 1030 0006 0346     		mov	r3, r0
 1031 0008 FB71     		strb	r3, [r7, #7]
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable interrupt */
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 1032              		.loc 3 229 0
ARM GAS  /tmp/ccYImk4r.s 			page 62


 1033 000a 97F90730 		ldrsb	r3, [r7, #7]
 1034 000e 1846     		mov	r0, r3
 1035 0010 FFF7FEFF 		bl	NVIC_EnableIRQ
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1036              		.loc 3 230 0
 1037 0014 0837     		adds	r7, r7, #8
 1038              	.LCFI90:
 1039              		.cfi_def_cfa_offset 8
 1040 0016 BD46     		mov	sp, r7
 1041              	.LCFI91:
 1042              		.cfi_def_cfa_register 13
 1043              		@ sp needed
 1044 0018 80BD     		pop	{r7, pc}
 1045              		.cfi_endproc
 1046              	.LFE127:
 1048 001a 00BF     		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 1049              		.align	2
 1050              		.global	HAL_NVIC_DisableIRQ
 1051              		.thumb
 1052              		.thumb_func
 1054              	HAL_NVIC_DisableIRQ:
 1055              	.LFB128:
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1056              		.loc 3 240 0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 8
 1059              		@ frame_needed = 1, uses_anonymous_args = 0
 1060 0000 80B5     		push	{r7, lr}
 1061              	.LCFI92:
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 82B0     		sub	sp, sp, #8
 1066              	.LCFI93:
 1067              		.cfi_def_cfa_offset 16
 1068 0004 00AF     		add	r7, sp, #0
 1069              	.LCFI94:
 1070              		.cfi_def_cfa_register 7
 1071 0006 0346     		mov	r3, r0
 1072 0008 FB71     		strb	r3, [r7, #7]
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable interrupt */
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 1073              		.loc 3 245 0
 1074 000a 97F90730 		ldrsb	r3, [r7, #7]
 1075 000e 1846     		mov	r0, r3
ARM GAS  /tmp/ccYImk4r.s 			page 63


 1076 0010 FFF7FEFF 		bl	NVIC_DisableIRQ
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1077              		.loc 3 246 0
 1078 0014 0837     		adds	r7, r7, #8
 1079              	.LCFI95:
 1080              		.cfi_def_cfa_offset 8
 1081 0016 BD46     		mov	sp, r7
 1082              	.LCFI96:
 1083              		.cfi_def_cfa_register 13
 1084              		@ sp needed
 1085 0018 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE128:
 1089 001a 00BF     		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 1090              		.align	2
 1091              		.global	HAL_NVIC_SystemReset
 1092              		.thumb
 1093              		.thumb_func
 1095              	HAL_NVIC_SystemReset:
 1096              	.LFB129:
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1097              		.loc 3 253 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 1, uses_anonymous_args = 0
 1101 0000 80B5     		push	{r7, lr}
 1102              	.LCFI97:
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 7, -8
 1105              		.cfi_offset 14, -4
 1106 0002 00AF     		add	r7, sp, #0
 1107              	.LCFI98:
 1108              		.cfi_def_cfa_register 7
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* System Reset */
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SystemReset();
 1109              		.loc 3 255 0
 1110 0004 FFF7FEFF 		bl	NVIC_SystemReset
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1111              		.loc 3 256 0
 1112 0008 80BD     		pop	{r7, pc}
 1113              		.cfi_endproc
 1114              	.LFE129:
 1116 000a 00BF     		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 1117              		.align	2
 1118              		.global	HAL_SYSTICK_Config
 1119              		.thumb
 1120              		.thumb_func
 1122              	HAL_SYSTICK_Config:
 1123              	.LFB130:
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
ARM GAS  /tmp/ccYImk4r.s 			page 64


 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                  - 1  Function failed.
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1124              		.loc 3 266 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 8
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128 0000 80B5     		push	{r7, lr}
 1129              	.LCFI99:
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 7, -8
 1132              		.cfi_offset 14, -4
 1133 0002 82B0     		sub	sp, sp, #8
 1134              	.LCFI100:
 1135              		.cfi_def_cfa_offset 16
 1136 0004 00AF     		add	r7, sp, #0
 1137              	.LCFI101:
 1138              		.cfi_def_cfa_register 7
 1139 0006 7860     		str	r0, [r7, #4]
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 1140              		.loc 3 267 0
 1141 0008 7868     		ldr	r0, [r7, #4]
 1142 000a FFF7FEFF 		bl	SysTick_Config
 1143 000e 0346     		mov	r3, r0
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1144              		.loc 3 268 0
 1145 0010 1846     		mov	r0, r3
 1146 0012 0837     		adds	r7, r7, #8
 1147              	.LCFI102:
 1148              		.cfi_def_cfa_offset 8
 1149 0014 BD46     		mov	sp, r7
 1150              	.LCFI103:
 1151              		.cfi_def_cfa_register 13
 1152              		@ sp needed
 1153 0016 80BD     		pop	{r7, pc}
 1154              		.cfi_endproc
 1155              	.LFE130:
 1157              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 1158              		.align	2
 1159              		.global	HAL_NVIC_GetPriorityGrouping
 1160              		.thumb
 1161              		.thumb_func
 1163              	HAL_NVIC_GetPriorityGrouping:
 1164              	.LFB131:
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @}
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief   Cortex control functions
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
ARM GAS  /tmp/ccYImk4r.s 			page 65


 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1165              		.loc 3 294 0
 1166              		.cfi_startproc
 1167              		@ args = 0, pretend = 0, frame = 0
 1168              		@ frame_needed = 1, uses_anonymous_args = 0
 1169 0000 80B5     		push	{r7, lr}
 1170              	.LCFI104:
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0002 00AF     		add	r7, sp, #0
 1175              	.LCFI105:
 1176              		.cfi_def_cfa_register 7
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 1177              		.loc 3 296 0
 1178 0004 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 1179 0008 0346     		mov	r3, r0
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1180              		.loc 3 297 0
 1181 000a 1846     		mov	r0, r3
 1182 000c 80BD     		pop	{r7, pc}
 1183              		.cfi_endproc
 1184              	.LFE131:
 1186 000e 00BF     		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1187              		.align	2
 1188              		.global	HAL_NVIC_GetPriority
 1189              		.thumb
 1190              		.thumb_func
 1192              	HAL_NVIC_GetPriority:
 1193              	.LFB132:
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
ARM GAS  /tmp/ccYImk4r.s 			page 66


 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      1 bit for subpriority
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      0 bit for subpriority
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1194              		.loc 3 321 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 16
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              	.LCFI106:
 1200              		.cfi_def_cfa_offset 8
 1201              		.cfi_offset 7, -8
 1202              		.cfi_offset 14, -4
 1203 0002 84B0     		sub	sp, sp, #16
 1204              	.LCFI107:
 1205              		.cfi_def_cfa_offset 24
 1206 0004 00AF     		add	r7, sp, #0
 1207              	.LCFI108:
 1208              		.cfi_def_cfa_register 7
 1209 0006 B960     		str	r1, [r7, #8]
 1210 0008 7A60     		str	r2, [r7, #4]
 1211 000a 3B60     		str	r3, [r7]
 1212 000c 0346     		mov	r3, r0
 1213 000e FB73     		strb	r3, [r7, #15]
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1214              		.loc 3 325 0
 1215 0010 97F90F30 		ldrsb	r3, [r7, #15]
 1216 0014 1846     		mov	r0, r3
 1217 0016 FFF7FEFF 		bl	NVIC_GetPriority
 1218 001a 0346     		mov	r3, r0
 1219 001c 1846     		mov	r0, r3
 1220 001e B968     		ldr	r1, [r7, #8]
 1221 0020 7A68     		ldr	r2, [r7, #4]
 1222 0022 3B68     		ldr	r3, [r7]
 1223 0024 FFF7FEFF 		bl	NVIC_DecodePriority
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1224              		.loc 3 326 0
 1225 0028 1037     		adds	r7, r7, #16
 1226              	.LCFI109:
 1227              		.cfi_def_cfa_offset 8
 1228 002a BD46     		mov	sp, r7
 1229              	.LCFI110:
 1230              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccYImk4r.s 			page 67


 1231              		@ sp needed
 1232 002c 80BD     		pop	{r7, pc}
 1233              		.cfi_endproc
 1234              	.LFE132:
 1236 002e 00BF     		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1237              		.align	2
 1238              		.global	HAL_NVIC_SetPendingIRQ
 1239              		.thumb
 1240              		.thumb_func
 1242              	HAL_NVIC_SetPendingIRQ:
 1243              	.LFB133:
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1244              		.loc 3 336 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 8
 1247              		@ frame_needed = 1, uses_anonymous_args = 0
 1248 0000 80B5     		push	{r7, lr}
 1249              	.LCFI111:
 1250              		.cfi_def_cfa_offset 8
 1251              		.cfi_offset 7, -8
 1252              		.cfi_offset 14, -4
 1253 0002 82B0     		sub	sp, sp, #8
 1254              	.LCFI112:
 1255              		.cfi_def_cfa_offset 16
 1256 0004 00AF     		add	r7, sp, #0
 1257              	.LCFI113:
 1258              		.cfi_def_cfa_register 7
 1259 0006 0346     		mov	r3, r0
 1260 0008 FB71     		strb	r3, [r7, #7]
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set interrupt pending */
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1261              		.loc 3 338 0
 1262 000a 97F90730 		ldrsb	r3, [r7, #7]
 1263 000e 1846     		mov	r0, r3
 1264 0010 FFF7FEFF 		bl	NVIC_SetPendingIRQ
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1265              		.loc 3 339 0
 1266 0014 0837     		adds	r7, r7, #8
 1267              	.LCFI114:
 1268              		.cfi_def_cfa_offset 8
 1269 0016 BD46     		mov	sp, r7
 1270              	.LCFI115:
 1271              		.cfi_def_cfa_register 13
 1272              		@ sp needed
 1273 0018 80BD     		pop	{r7, pc}
 1274              		.cfi_endproc
 1275              	.LFE133:
 1277 001a 00BF     		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
ARM GAS  /tmp/ccYImk4r.s 			page 68


 1278              		.align	2
 1279              		.global	HAL_NVIC_GetPendingIRQ
 1280              		.thumb
 1281              		.thumb_func
 1283              	HAL_NVIC_GetPendingIRQ:
 1284              	.LFB134:
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1285              		.loc 3 351 0
 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 8
 1288              		@ frame_needed = 1, uses_anonymous_args = 0
 1289 0000 80B5     		push	{r7, lr}
 1290              	.LCFI116:
 1291              		.cfi_def_cfa_offset 8
 1292              		.cfi_offset 7, -8
 1293              		.cfi_offset 14, -4
 1294 0002 82B0     		sub	sp, sp, #8
 1295              	.LCFI117:
 1296              		.cfi_def_cfa_offset 16
 1297 0004 00AF     		add	r7, sp, #0
 1298              	.LCFI118:
 1299              		.cfi_def_cfa_register 7
 1300 0006 0346     		mov	r3, r0
 1301 0008 FB71     		strb	r3, [r7, #7]
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1302              		.loc 3 353 0
 1303 000a 97F90730 		ldrsb	r3, [r7, #7]
 1304 000e 1846     		mov	r0, r3
 1305 0010 FFF7FEFF 		bl	NVIC_GetPendingIRQ
 1306 0014 0346     		mov	r3, r0
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1307              		.loc 3 354 0
 1308 0016 1846     		mov	r0, r3
 1309 0018 0837     		adds	r7, r7, #8
 1310              	.LCFI119:
 1311              		.cfi_def_cfa_offset 8
 1312 001a BD46     		mov	sp, r7
 1313              	.LCFI120:
 1314              		.cfi_def_cfa_register 13
 1315              		@ sp needed
 1316 001c 80BD     		pop	{r7, pc}
 1317              		.cfi_endproc
 1318              	.LFE134:
 1320 001e 00BF     		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1321              		.align	2
ARM GAS  /tmp/ccYImk4r.s 			page 69


 1322              		.global	HAL_NVIC_ClearPendingIRQ
 1323              		.thumb
 1324              		.thumb_func
 1326              	HAL_NVIC_ClearPendingIRQ:
 1327              	.LFB135:
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1328              		.loc 3 364 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 8
 1331              		@ frame_needed = 1, uses_anonymous_args = 0
 1332 0000 80B5     		push	{r7, lr}
 1333              	.LCFI121:
 1334              		.cfi_def_cfa_offset 8
 1335              		.cfi_offset 7, -8
 1336              		.cfi_offset 14, -4
 1337 0002 82B0     		sub	sp, sp, #8
 1338              	.LCFI122:
 1339              		.cfi_def_cfa_offset 16
 1340 0004 00AF     		add	r7, sp, #0
 1341              	.LCFI123:
 1342              		.cfi_def_cfa_register 7
 1343 0006 0346     		mov	r3, r0
 1344 0008 FB71     		strb	r3, [r7, #7]
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Clear pending interrupt */
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1345              		.loc 3 366 0
 1346 000a 97F90730 		ldrsb	r3, [r7, #7]
 1347 000e 1846     		mov	r0, r3
 1348 0010 FFF7FEFF 		bl	NVIC_ClearPendingIRQ
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1349              		.loc 3 367 0
 1350 0014 0837     		adds	r7, r7, #8
 1351              	.LCFI124:
 1352              		.cfi_def_cfa_offset 8
 1353 0016 BD46     		mov	sp, r7
 1354              	.LCFI125:
 1355              		.cfi_def_cfa_register 13
 1356              		@ sp needed
 1357 0018 80BD     		pop	{r7, pc}
 1358              		.cfi_endproc
 1359              	.LFE135:
 1361 001a 00BF     		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1362              		.align	2
 1363              		.global	HAL_NVIC_GetActive
 1364              		.thumb
 1365              		.thumb_func
 1367              	HAL_NVIC_GetActive:
 1368              	.LFB136:
ARM GAS  /tmp/ccYImk4r.s 			page 70


 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1369              		.loc 3 378 0
 1370              		.cfi_startproc
 1371              		@ args = 0, pretend = 0, frame = 8
 1372              		@ frame_needed = 1, uses_anonymous_args = 0
 1373 0000 80B5     		push	{r7, lr}
 1374              	.LCFI126:
 1375              		.cfi_def_cfa_offset 8
 1376              		.cfi_offset 7, -8
 1377              		.cfi_offset 14, -4
 1378 0002 82B0     		sub	sp, sp, #8
 1379              	.LCFI127:
 1380              		.cfi_def_cfa_offset 16
 1381 0004 00AF     		add	r7, sp, #0
 1382              	.LCFI128:
 1383              		.cfi_def_cfa_register 7
 1384 0006 0346     		mov	r3, r0
 1385 0008 FB71     		strb	r3, [r7, #7]
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1386              		.loc 3 380 0
 1387 000a 97F90730 		ldrsb	r3, [r7, #7]
 1388 000e 1846     		mov	r0, r3
 1389 0010 FFF7FEFF 		bl	NVIC_GetActive
 1390 0014 0346     		mov	r3, r0
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1391              		.loc 3 381 0
 1392 0016 1846     		mov	r0, r3
 1393 0018 0837     		adds	r7, r7, #8
 1394              	.LCFI129:
 1395              		.cfi_def_cfa_offset 8
 1396 001a BD46     		mov	sp, r7
 1397              	.LCFI130:
 1398              		.cfi_def_cfa_register 13
 1399              		@ sp needed
 1400 001c 80BD     		pop	{r7, pc}
 1401              		.cfi_endproc
 1402              	.LFE136:
 1404 001e 00BF     		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1405              		.align	2
 1406              		.global	HAL_SYSTICK_CLKSourceConfig
 1407              		.thumb
 1408              		.thumb_func
 1410              	HAL_SYSTICK_CLKSourceConfig:
 1411              	.LFB137:
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
ARM GAS  /tmp/ccYImk4r.s 			page 71


 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1412              		.loc 3 392 0
 1413              		.cfi_startproc
 1414              		@ args = 0, pretend = 0, frame = 8
 1415              		@ frame_needed = 1, uses_anonymous_args = 0
 1416              		@ link register save eliminated.
 1417 0000 80B4     		push	{r7}
 1418              	.LCFI131:
 1419              		.cfi_def_cfa_offset 4
 1420              		.cfi_offset 7, -4
 1421 0002 83B0     		sub	sp, sp, #12
 1422              	.LCFI132:
 1423              		.cfi_def_cfa_offset 16
 1424 0004 00AF     		add	r7, sp, #0
 1425              	.LCFI133:
 1426              		.cfi_def_cfa_register 7
 1427 0006 7860     		str	r0, [r7, #4]
 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1428              		.loc 3 395 0
 1429 0008 7B68     		ldr	r3, [r7, #4]
 1430 000a 042B     		cmp	r3, #4
 1431 000c 06D1     		bne	.L71
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 1432              		.loc 3 397 0
 1433 000e 094A     		ldr	r2, .L73
 1434 0010 084B     		ldr	r3, .L73
 1435 0012 1B68     		ldr	r3, [r3]
 1436 0014 43F00403 		orr	r3, r3, #4
 1437 0018 1360     		str	r3, [r2]
 1438 001a 05E0     		b	.L70
 1439              	.L71:
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1440              		.loc 3 401 0
 1441 001c 054A     		ldr	r2, .L73
 1442 001e 054B     		ldr	r3, .L73
 1443 0020 1B68     		ldr	r3, [r3]
 1444 0022 23F00403 		bic	r3, r3, #4
 1445 0026 1360     		str	r3, [r2]
 1446              	.L70:
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1447              		.loc 3 403 0
 1448 0028 0C37     		adds	r7, r7, #12
ARM GAS  /tmp/ccYImk4r.s 			page 72


 1449              	.LCFI134:
 1450              		.cfi_def_cfa_offset 4
 1451 002a BD46     		mov	sp, r7
 1452              	.LCFI135:
 1453              		.cfi_def_cfa_register 13
 1454              		@ sp needed
 1455 002c 5DF8047B 		ldr	r7, [sp], #4
 1456              	.LCFI136:
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 0030 7047     		bx	lr
 1460              	.L74:
 1461 0032 00BF     		.align	2
 1462              	.L73:
 1463 0034 10E000E0 		.word	-536813552
 1464              		.cfi_endproc
 1465              	.LFE137:
 1467              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1468              		.align	2
 1469              		.global	HAL_SYSTICK_IRQHandler
 1470              		.thumb
 1471              		.thumb_func
 1473              	HAL_SYSTICK_IRQHandler:
 1474              	.LFB138:
 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1475              		.loc 3 410 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479 0000 80B5     		push	{r7, lr}
 1480              	.LCFI137:
 1481              		.cfi_def_cfa_offset 8
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 00AF     		add	r7, sp, #0
 1485              	.LCFI138:
 1486              		.cfi_def_cfa_register 7
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1487              		.loc 3 411 0
 1488 0004 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1489              		.loc 3 412 0
 1490 0008 80BD     		pop	{r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE138:
 1494 000a 00BF     		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1495              		.align	2
 1496              		.weak	HAL_SYSTICK_Callback
 1497              		.thumb
 1498              		.thumb_func
 1500              	HAL_SYSTICK_Callback:
ARM GAS  /tmp/ccYImk4r.s 			page 73


 1501              	.LFB139:
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1502              		.loc 3 419 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507 0000 80B4     		push	{r7}
 1508              	.LCFI139:
 1509              		.cfi_def_cfa_offset 4
 1510              		.cfi_offset 7, -4
 1511 0002 00AF     		add	r7, sp, #0
 1512              	.LCFI140:
 1513              		.cfi_def_cfa_register 7
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    */
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1514              		.loc 3 423 0
 1515 0004 BD46     		mov	sp, r7
 1516              	.LCFI141:
 1517              		.cfi_def_cfa_register 13
 1518              		@ sp needed
 1519 0006 5DF8047B 		ldr	r7, [sp], #4
 1520              	.LCFI142:
 1521              		.cfi_restore 7
 1522              		.cfi_def_cfa_offset 0
 1523 000a 7047     		bx	lr
 1524              		.cfi_endproc
 1525              	.LFE139:
 1527              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1528              		.align	2
 1529              		.global	HAL_MPU_ConfigRegion
 1530              		.thumb
 1531              		.thumb_func
 1533              	HAL_MPU_ConfigRegion:
 1534              	.LFB140:
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                the initialization and configuration information.
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1535              		.loc 3 433 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 8
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccYImk4r.s 			page 74


 1539              		@ link register save eliminated.
 1540 0000 80B4     		push	{r7}
 1541              	.LCFI143:
 1542              		.cfi_def_cfa_offset 4
 1543              		.cfi_offset 7, -4
 1544 0002 83B0     		sub	sp, sp, #12
 1545              	.LCFI144:
 1546              		.cfi_def_cfa_offset 16
 1547 0004 00AF     		add	r7, sp, #0
 1548              	.LCFI145:
 1549              		.cfi_def_cfa_register 7
 1550 0006 7860     		str	r0, [r7, #4]
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1551              		.loc 3 439 0
 1552 0008 1D4A     		ldr	r2, .L80
 1553 000a 7B68     		ldr	r3, [r7, #4]
 1554 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1555 000e 9360     		str	r3, [r2, #8]
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 1556              		.loc 3 441 0
 1557 0010 7B68     		ldr	r3, [r7, #4]
 1558 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1559 0014 002B     		cmp	r3, #0
 1560 0016 28D0     		beq	.L78
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     /* Check the parameters */
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1561              		.loc 3 453 0
 1562 0018 194A     		ldr	r2, .L80
 1563 001a 7B68     		ldr	r3, [r7, #4]
 1564 001c 5B68     		ldr	r3, [r3, #4]
 1565 001e D360     		str	r3, [r2, #12]
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1566              		.loc 3 454 0
 1567 0020 1749     		ldr	r1, .L80
 1568 0022 7B68     		ldr	r3, [r7, #4]
 1569 0024 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1570 0026 1A07     		lsls	r2, r3, #28
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1571              		.loc 3 455 0
 1572 0028 7B68     		ldr	r3, [r7, #4]
 1573 002a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
ARM GAS  /tmp/ccYImk4r.s 			page 75


 1574 002c 1B06     		lsls	r3, r3, #24
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1575              		.loc 3 454 0
 1576 002e 1A43     		orrs	r2, r2, r3
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1577              		.loc 3 456 0
 1578 0030 7B68     		ldr	r3, [r7, #4]
 1579 0032 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1580 0034 DB04     		lsls	r3, r3, #19
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1581              		.loc 3 455 0
 1582 0036 1A43     		orrs	r2, r2, r3
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 1583              		.loc 3 457 0
 1584 0038 7B68     		ldr	r3, [r7, #4]
 1585 003a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1586 003c 9B04     		lsls	r3, r3, #18
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1587              		.loc 3 456 0
 1588 003e 1A43     		orrs	r2, r2, r3
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1589              		.loc 3 458 0
 1590 0040 7B68     		ldr	r3, [r7, #4]
 1591 0042 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1592 0044 5B04     		lsls	r3, r3, #17
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 1593              		.loc 3 457 0
 1594 0046 1A43     		orrs	r2, r2, r3
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1595              		.loc 3 459 0
 1596 0048 7B68     		ldr	r3, [r7, #4]
 1597 004a DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1598 004c 1B04     		lsls	r3, r3, #16
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1599              		.loc 3 458 0
 1600 004e 1A43     		orrs	r2, r2, r3
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1601              		.loc 3 460 0
 1602 0050 7B68     		ldr	r3, [r7, #4]
 1603 0052 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1604 0054 1B02     		lsls	r3, r3, #8
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1605              		.loc 3 459 0
 1606 0056 1A43     		orrs	r2, r2, r3
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1607              		.loc 3 461 0
 1608 0058 7B68     		ldr	r3, [r7, #4]
 1609 005a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1610 005c 5B00     		lsls	r3, r3, #1
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1611              		.loc 3 460 0
 1612 005e 1343     		orrs	r3, r3, r2
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 1613              		.loc 3 462 0
 1614 0060 7A68     		ldr	r2, [r7, #4]
 1615 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
ARM GAS  /tmp/ccYImk4r.s 			page 76


 1616              		.loc 3 461 0
 1617 0064 1343     		orrs	r3, r3, r2
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1618              		.loc 3 454 0
 1619 0066 0B61     		str	r3, [r1, #16]
 1620 0068 05E0     		b	.L77
 1621              	.L78:
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 1622              		.loc 3 466 0
 1623 006a 054B     		ldr	r3, .L80
 1624 006c 0022     		movs	r2, #0
 1625 006e DA60     		str	r2, [r3, #12]
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1626              		.loc 3 467 0
 1627 0070 034B     		ldr	r3, .L80
 1628 0072 0022     		movs	r2, #0
 1629 0074 1A61     		str	r2, [r3, #16]
 1630              	.L77:
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1631              		.loc 3 469 0
 1632 0076 0C37     		adds	r7, r7, #12
 1633              	.LCFI146:
 1634              		.cfi_def_cfa_offset 4
 1635 0078 BD46     		mov	sp, r7
 1636              	.LCFI147:
 1637              		.cfi_def_cfa_register 13
 1638              		@ sp needed
 1639 007a 5DF8047B 		ldr	r7, [sp], #4
 1640              	.LCFI148:
 1641              		.cfi_restore 7
 1642              		.cfi_def_cfa_offset 0
 1643 007e 7047     		bx	lr
 1644              	.L81:
 1645              		.align	2
 1646              	.L80:
 1647 0080 90ED00E0 		.word	-536810096
 1648              		.cfi_endproc
 1649              	.LFE140:
 1651              		.text
 1652              	.Letext0:
 1653              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 1654              		.file 5 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 1655              		.file 6 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 1656              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1657              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  /tmp/ccYImk4r.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_cortex.c
     /tmp/ccYImk4r.s:20     .text.NVIC_SetPriorityGrouping:00000000 $t
     /tmp/ccYImk4r.s:24     .text.NVIC_SetPriorityGrouping:00000000 NVIC_SetPriorityGrouping
     /tmp/ccYImk4r.s:86     .text.NVIC_SetPriorityGrouping:00000044 $d
     /tmp/ccYImk4r.s:91     .text.NVIC_GetPriorityGrouping:00000000 $t
     /tmp/ccYImk4r.s:95     .text.NVIC_GetPriorityGrouping:00000000 NVIC_GetPriorityGrouping
     /tmp/ccYImk4r.s:128    .text.NVIC_GetPriorityGrouping:00000018 $d
     /tmp/ccYImk4r.s:133    .text.NVIC_EnableIRQ:00000000 $t
     /tmp/ccYImk4r.s:137    .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
     /tmp/ccYImk4r.s:181    .text.NVIC_EnableIRQ:0000002c $d
     /tmp/ccYImk4r.s:186    .text.NVIC_DisableIRQ:00000000 $t
     /tmp/ccYImk4r.s:190    .text.NVIC_DisableIRQ:00000000 NVIC_DisableIRQ
     /tmp/ccYImk4r.s:235    .text.NVIC_DisableIRQ:00000030 $d
     /tmp/ccYImk4r.s:240    .text.NVIC_GetPendingIRQ:00000000 $t
     /tmp/ccYImk4r.s:244    .text.NVIC_GetPendingIRQ:00000000 NVIC_GetPendingIRQ
     /tmp/ccYImk4r.s:290    .text.NVIC_GetPendingIRQ:00000034 $d
     /tmp/ccYImk4r.s:295    .text.NVIC_SetPendingIRQ:00000000 $t
     /tmp/ccYImk4r.s:299    .text.NVIC_SetPendingIRQ:00000000 NVIC_SetPendingIRQ
     /tmp/ccYImk4r.s:344    .text.NVIC_SetPendingIRQ:00000030 $d
     /tmp/ccYImk4r.s:349    .text.NVIC_ClearPendingIRQ:00000000 $t
     /tmp/ccYImk4r.s:353    .text.NVIC_ClearPendingIRQ:00000000 NVIC_ClearPendingIRQ
     /tmp/ccYImk4r.s:398    .text.NVIC_ClearPendingIRQ:00000030 $d
     /tmp/ccYImk4r.s:403    .text.NVIC_GetActive:00000000 $t
     /tmp/ccYImk4r.s:407    .text.NVIC_GetActive:00000000 NVIC_GetActive
     /tmp/ccYImk4r.s:453    .text.NVIC_GetActive:00000034 $d
     /tmp/ccYImk4r.s:458    .text.NVIC_SetPriority:00000000 $t
     /tmp/ccYImk4r.s:462    .text.NVIC_SetPriority:00000000 NVIC_SetPriority
     /tmp/ccYImk4r.s:525    .text.NVIC_SetPriority:0000004c $d
     /tmp/ccYImk4r.s:531    .text.NVIC_GetPriority:00000000 $t
     /tmp/ccYImk4r.s:535    .text.NVIC_GetPriority:00000000 NVIC_GetPriority
     /tmp/ccYImk4r.s:596    .text.NVIC_GetPriority:00000048 $d
     /tmp/ccYImk4r.s:602    .text.NVIC_EncodePriority:00000000 $t
     /tmp/ccYImk4r.s:606    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
     /tmp/ccYImk4r.s:688    .text.NVIC_DecodePriority:00000000 $t
     /tmp/ccYImk4r.s:692    .text.NVIC_DecodePriority:00000000 NVIC_DecodePriority
     /tmp/ccYImk4r.s:776    .text.NVIC_SystemReset:00000000 $t
     /tmp/ccYImk4r.s:780    .text.NVIC_SystemReset:00000000 NVIC_SystemReset
     /tmp/ccYImk4r.s:838    .text.NVIC_SystemReset:00000020 $d
     /tmp/ccYImk4r.s:844    .text.SysTick_Config:00000000 $t
     /tmp/ccYImk4r.s:848    .text.SysTick_Config:00000000 SysTick_Config
     /tmp/ccYImk4r.s:908    .text.SysTick_Config:00000040 $d
     /tmp/ccYImk4r.s:913    .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
     /tmp/ccYImk4r.s:918    .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccYImk4r.s:953    .text.HAL_NVIC_SetPriority:00000000 $t
     /tmp/ccYImk4r.s:958    .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
     /tmp/ccYImk4r.s:1008   .text.HAL_NVIC_EnableIRQ:00000000 $t
     /tmp/ccYImk4r.s:1013   .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
     /tmp/ccYImk4r.s:1049   .text.HAL_NVIC_DisableIRQ:00000000 $t
     /tmp/ccYImk4r.s:1054   .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
     /tmp/ccYImk4r.s:1090   .text.HAL_NVIC_SystemReset:00000000 $t
     /tmp/ccYImk4r.s:1095   .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
     /tmp/ccYImk4r.s:1117   .text.HAL_SYSTICK_Config:00000000 $t
     /tmp/ccYImk4r.s:1122   .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
     /tmp/ccYImk4r.s:1158   .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
     /tmp/ccYImk4r.s:1163   .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccYImk4r.s:1187   .text.HAL_NVIC_GetPriority:00000000 $t
ARM GAS  /tmp/ccYImk4r.s 			page 78


     /tmp/ccYImk4r.s:1192   .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
     /tmp/ccYImk4r.s:1237   .text.HAL_NVIC_SetPendingIRQ:00000000 $t
     /tmp/ccYImk4r.s:1242   .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccYImk4r.s:1278   .text.HAL_NVIC_GetPendingIRQ:00000000 $t
     /tmp/ccYImk4r.s:1283   .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccYImk4r.s:1321   .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
     /tmp/ccYImk4r.s:1326   .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccYImk4r.s:1362   .text.HAL_NVIC_GetActive:00000000 $t
     /tmp/ccYImk4r.s:1367   .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
     /tmp/ccYImk4r.s:1405   .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
     /tmp/ccYImk4r.s:1410   .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccYImk4r.s:1463   .text.HAL_SYSTICK_CLKSourceConfig:00000034 $d
     /tmp/ccYImk4r.s:1468   .text.HAL_SYSTICK_IRQHandler:00000000 $t
     /tmp/ccYImk4r.s:1473   .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler
     /tmp/ccYImk4r.s:1500   .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
     /tmp/ccYImk4r.s:1495   .text.HAL_SYSTICK_Callback:00000000 $t
     /tmp/ccYImk4r.s:1528   .text.HAL_MPU_ConfigRegion:00000000 $t
     /tmp/ccYImk4r.s:1533   .text.HAL_MPU_ConfigRegion:00000000 HAL_MPU_ConfigRegion
     /tmp/ccYImk4r.s:1647   .text.HAL_MPU_ConfigRegion:00000080 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
