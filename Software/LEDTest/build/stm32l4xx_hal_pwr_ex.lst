ARM GAS  /tmp/cceXXqTt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32l4xx_hal_pwr_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWREx_GetVoltageRange,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_PWREx_GetVoltageRange
  22              		.thumb
  23              		.thumb_func
  25              	HAL_PWREx_GetVoltageRange:
  26              	.LFB125:
  27              		.file 1 "Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c"
   1:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
   2:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
   3:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @file    stm32l4xx_hal_pwr_ex.c
   4:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @version V1.1.1
   6:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @date    16-October-2015
   7:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief   Extended PWR HAL module driver.
   8:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          functionalities of the Power Controller (PWR) peripheral:
  10:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Initialization and de-initialization functions
  11:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *           + Extended Peripheral Control functions
  12:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         
  13:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  14:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @attention
  15:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  16:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  17:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  18:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * are permitted provided that the following conditions are met:
  20:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer.
  22:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  24:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      and/or other materials provided with the distribution.
  25:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      may be used to endorse or promote products derived from this software
  27:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *      without specific prior written permission.
  28:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  29:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
ARM GAS  /tmp/cceXXqTt.s 			page 2


  32:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  33:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
  40:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   ******************************************************************************
  41:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  42:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  43:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Includes ------------------------------------------------------------------*/
  44:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #include "stm32l4xx_hal.h"
  45:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  46:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  47:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  48:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  49:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  50:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx PWREx
  51:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR Extended HAL module driver
  52:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  53:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  54:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  55:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #ifdef HAL_PWR_MODULE_ENABLED
  56:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  57:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private typedef -----------------------------------------------------------*/
  58:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private define ------------------------------------------------------------*/
  59:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_PORTH_AVAILABLE_PINS   (PWR_GPIO_BIT_0|PWR_GPIO_BIT_1)
  60:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  61:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  62:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWR_Extended_Private_Defines PWR Extended Private Defines
  63:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  64:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  65:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  66:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_PVM_Mode_Mask PWR PVM Mode Mask
  67:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  68:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */ 
  69:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVM
  70:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVM thresh
  71:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVM trig
  72:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PVM_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVM tri
  73:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  74:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  75:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  76:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  77:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_TimeOut_Value PWR Extended Flag Setting Time Out Value
  78:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
  79:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */ 
  80:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #define PWR_FLAG_SETTING_DELAY_US                      50   /*!< Time out value for REGLPF and VOSF
  81:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  82:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
  83:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  84:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
  85:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  86:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  87:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
  88:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @}
ARM GAS  /tmp/cceXXqTt.s 			page 3


  89:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
  90:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  91:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  92:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
  93:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private macro -------------------------------------------------------------*/
  94:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private variables ---------------------------------------------------------*/
  95:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Private function prototypes -----------------------------------------------*/
  96:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* Exported functions --------------------------------------------------------*/
  97:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
  98:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions PWR Extended Exported Functions
  99:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /** @defgroup PWREx_Exported_Functions_Group1 Extended Peripheral Control functions
 103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *  @brief   Extended Peripheral Control functions
 104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *
 105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @verbatim
 106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****               ##### Extended Peripheral Initialization and de-initialization functions #####
 108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****  ===============================================================================
 109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     [..]
 110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** @endverbatim
 112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @{
 113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Return Voltage Scaling Range.
 118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval VOS bit field (PWR_REGULATOR_VOLTAGE_RANGE1 or PWR_REGULATOR_VOLTAGE_RANGE2)
 119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */  
 120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** uint32_t HAL_PWREx_GetVoltageRange(void)
 121:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  28              		.loc 1 121 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 122:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return  (PWR->CR1 & PWR_CR1_VOS);
  40              		.loc 1 122 0
  41 0004 044B     		ldr	r3, .L3
  42 0006 1B68     		ldr	r3, [r3]
  43 0008 03F4C063 		and	r3, r3, #1536
 123:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
  44              		.loc 1 123 0
  45 000c 1846     		mov	r0, r3
  46 000e BD46     		mov	sp, r7
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 13
  49              		@ sp needed
ARM GAS  /tmp/cceXXqTt.s 			page 4


  50 0010 5DF8047B 		ldr	r7, [sp], #4
  51              	.LCFI3:
  52              		.cfi_restore 7
  53              		.cfi_def_cfa_offset 0
  54 0014 7047     		bx	lr
  55              	.L4:
  56 0016 00BF     		.align	2
  57              	.L3:
  58 0018 00700040 		.word	1073770496
  59              		.cfi_endproc
  60              	.LFE125:
  62              		.section	.text.HAL_PWREx_ControlVoltageScaling,"ax",%progbits
  63              		.align	2
  64              		.global	HAL_PWREx_ControlVoltageScaling
  65              		.thumb
  66              		.thumb_func
  68              	HAL_PWREx_ControlVoltageScaling:
  69              	.LFB126:
 124:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 125:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 126:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 127:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 128:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the main internal regulator output voltage.
 129:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  VoltageScaling: specifies the regulator output voltage to achieve
 130:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         a tradeoff between performance and power consumption.
 131:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 132:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE1: Regulator voltage output range 1 mode,
 133:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.2 V,  
 134:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 80 MHz.
 135:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_REGULATOR_VOLTAGE_SCALE2: Regulator voltage output range 2 mode,
 136:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                typical output voltage at 1.0 V,                
 137:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *                                                system frequency up to 26 MHz.
 138:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 1 to Range 2, the system frequency must be decreased to
 139:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value below 26 MHz before calling HAL_PWREx_ControlVoltageScaling() API.
 140:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When moving from Range 2 to Range 1, the system frequency can be increased to
 141:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        a value up to 80 MHz after calling HAL_PWREx_ControlVoltageScaling() API.
 142:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When moving from Range 2 to Range 1, the API waits for VOSF flag to be
 143:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        cleared before returning the status. If the flag is not cleared within
 144:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        50 microseconds, HAL_TIMEOUT status is reported.                    
 145:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 146:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 147:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ControlVoltageScaling(uint32_t VoltageScaling)
 148:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
  70              		.loc 1 148 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 16
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74              		@ link register save eliminated.
  75 0000 80B4     		push	{r7}
  76              	.LCFI4:
  77              		.cfi_def_cfa_offset 4
  78              		.cfi_offset 7, -4
  79 0002 85B0     		sub	sp, sp, #20
  80              	.LCFI5:
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              	.LCFI6:
ARM GAS  /tmp/cceXXqTt.s 			page 5


  84              		.cfi_def_cfa_register 7
  85 0006 7860     		str	r0, [r7, #4]
 149:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index = 0;  
  86              		.loc 1 149 0
  87 0008 0023     		movs	r3, #0
  88 000a FB60     		str	r3, [r7, #12]
 150:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 151:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_VOLTAGE_SCALING_RANGE(VoltageScaling));
 152:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 153:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* If Set Range 1 */
 154:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
  89              		.loc 1 154 0
  90 000c 7B68     		ldr	r3, [r7, #4]
  91 000e B3F5007F 		cmp	r3, #512
  92 0012 2DD1     		bne	.L6
 155:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 156:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
  93              		.loc 1 156 0
  94 0014 214B     		ldr	r3, .L12
  95 0016 1B68     		ldr	r3, [r3]
  96 0018 03F4C063 		and	r3, r3, #1536
  97 001c B3F5007F 		cmp	r3, #512
  98 0020 35D0     		beq	.L7
 157:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 158:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 1 */
 159:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
  99              		.loc 1 159 0
 100 0022 1E4A     		ldr	r2, .L12
 101 0024 1D4B     		ldr	r3, .L12
 102 0026 1B68     		ldr	r3, [r3]
 103 0028 23F4C063 		bic	r3, r3, #1536
 104 002c 43F40073 		orr	r3, r3, #512
 105 0030 1360     		str	r3, [r2]
 160:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 161:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Wait until VOSF is cleared */      
 162:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 106              		.loc 1 162 0
 107 0032 1B4B     		ldr	r3, .L12+4
 108 0034 1B68     		ldr	r3, [r3]
 109 0036 1B4A     		ldr	r2, .L12+8
 110 0038 A2FB0323 		umull	r2, r3, r2, r3
 111 003c 9B0C     		lsrs	r3, r3, #18
 112 003e 3222     		movs	r2, #50
 113 0040 02FB03F3 		mul	r3, r2, r3
 114 0044 FB60     		str	r3, [r7, #12]
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 115              		.loc 1 163 0
 116 0046 02E0     		b	.L8
 117              	.L10:
 164:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 165:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         wait_loop_index--;
 118              		.loc 1 165 0
 119 0048 FB68     		ldr	r3, [r7, #12]
 120 004a 013B     		subs	r3, r3, #1
 121 004c FB60     		str	r3, [r7, #12]
 122              	.L8:
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
ARM GAS  /tmp/cceXXqTt.s 			page 6


 123              		.loc 1 163 0
 124 004e FB68     		ldr	r3, [r7, #12]
 125 0050 002B     		cmp	r3, #0
 126 0052 05D0     		beq	.L9
 163:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)))
 127              		.loc 1 163 0 is_stmt 0 discriminator 1
 128 0054 114B     		ldr	r3, .L12
 129 0056 5B69     		ldr	r3, [r3, #20]
 130 0058 03F48063 		and	r3, r3, #1024
 131 005c 002B     		cmp	r3, #0
 132 005e F3D1     		bne	.L10
 133              	.L9:
 166:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 167:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 134              		.loc 1 167 0 is_stmt 1
 135 0060 0E4B     		ldr	r3, .L12
 136 0062 5B69     		ldr	r3, [r3, #20]
 137 0064 03F48063 		and	r3, r3, #1024
 138 0068 002B     		cmp	r3, #0
 139 006a 10D0     		beq	.L7
 168:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 169:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_TIMEOUT;
 140              		.loc 1 169 0
 141 006c 0323     		movs	r3, #3
 142 006e 0FE0     		b	.L11
 143              	.L6:
 170:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 171:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 172:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 173:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 174:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 175:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 144              		.loc 1 175 0
 145 0070 0A4B     		ldr	r3, .L12
 146 0072 1B68     		ldr	r3, [r3]
 147 0074 03F4C063 		and	r3, r3, #1536
 148 0078 B3F5806F 		cmp	r3, #1024
 149 007c 07D0     		beq	.L7
 176:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     {
 177:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Set Range 2 */
 178:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 150              		.loc 1 178 0
 151 007e 074A     		ldr	r2, .L12
 152 0080 064B     		ldr	r3, .L12
 153 0082 1B68     		ldr	r3, [r3]
 154 0084 23F4C063 		bic	r3, r3, #1536
 155 0088 43F48063 		orr	r3, r3, #1024
 156 008c 1360     		str	r3, [r2]
 157              	.L7:
 179:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* No need to wait for VOSF to be cleared for this transition */
 180:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     }
 181:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 182:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 183:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 158              		.loc 1 183 0
 159 008e 0023     		movs	r3, #0
 160              	.L11:
ARM GAS  /tmp/cceXXqTt.s 			page 7


 184:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }  
 161              		.loc 1 184 0
 162 0090 1846     		mov	r0, r3
 163 0092 1437     		adds	r7, r7, #20
 164              	.LCFI7:
 165              		.cfi_def_cfa_offset 4
 166 0094 BD46     		mov	sp, r7
 167              	.LCFI8:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0096 5DF8047B 		ldr	r7, [sp], #4
 171              	.LCFI9:
 172              		.cfi_restore 7
 173              		.cfi_def_cfa_offset 0
 174 009a 7047     		bx	lr
 175              	.L13:
 176              		.align	2
 177              	.L12:
 178 009c 00700040 		.word	1073770496
 179 00a0 00000000 		.word	SystemCoreClock
 180 00a4 83DE1B43 		.word	1125899907
 181              		.cfi_endproc
 182              	.LFE126:
 184              		.section	.text.HAL_PWREx_EnableBatteryCharging,"ax",%progbits
 185              		.align	2
 186              		.global	HAL_PWREx_EnableBatteryCharging
 187              		.thumb
 188              		.thumb_func
 190              	HAL_PWREx_EnableBatteryCharging:
 191              	.LFB127:
 185:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 186:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 187:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 188:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable battery charging.
 189:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        When VDD is present, charge the external battery on VBAT thru an internal resistor.  
 190:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  ResistorSelection: specifies the resistor impedance.
 191:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 192:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_BATTERY_CHARGING_RESISTOR_5:     5 kOhms resistor
 193:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_BATTERY_CHARGING_RESISTOR_1_5: 1.5 kOhms resistor 
 194:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 195:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 196:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableBatteryCharging(uint32_t ResistorSelection)
 197:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 192              		.loc 1 197 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 8
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              	.LCFI10:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 0002 83B0     		sub	sp, sp, #12
 202              	.LCFI11:
 203              		.cfi_def_cfa_offset 16
 204 0004 00AF     		add	r7, sp, #0
 205              	.LCFI12:
ARM GAS  /tmp/cceXXqTt.s 			page 8


 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 198:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_BATTERY_RESISTOR_SELECT(ResistorSelection));
 199:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 200:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Specify resistor selection */
 201:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR4, PWR_CR4_VBRS, ResistorSelection);
 208              		.loc 1 201 0
 209 0008 0949     		ldr	r1, .L15
 210 000a 094B     		ldr	r3, .L15
 211 000c DB68     		ldr	r3, [r3, #12]
 212 000e 23F40072 		bic	r2, r3, #512
 213 0012 7B68     		ldr	r3, [r7, #4]
 214 0014 1343     		orrs	r3, r3, r2
 215 0016 CB60     		str	r3, [r1, #12]
 202:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 203:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Enable battery charging */
 204:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR4, PWR_CR4_VBE);
 216              		.loc 1 204 0
 217 0018 054A     		ldr	r2, .L15
 218 001a 054B     		ldr	r3, .L15
 219 001c DB68     		ldr	r3, [r3, #12]
 220 001e 43F48073 		orr	r3, r3, #256
 221 0022 D360     		str	r3, [r2, #12]
 205:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 222              		.loc 1 205 0
 223 0024 0C37     		adds	r7, r7, #12
 224              	.LCFI13:
 225              		.cfi_def_cfa_offset 4
 226 0026 BD46     		mov	sp, r7
 227              	.LCFI14:
 228              		.cfi_def_cfa_register 13
 229              		@ sp needed
 230 0028 5DF8047B 		ldr	r7, [sp], #4
 231              	.LCFI15:
 232              		.cfi_restore 7
 233              		.cfi_def_cfa_offset 0
 234 002c 7047     		bx	lr
 235              	.L16:
 236 002e 00BF     		.align	2
 237              	.L15:
 238 0030 00700040 		.word	1073770496
 239              		.cfi_endproc
 240              	.LFE127:
 242              		.section	.text.HAL_PWREx_DisableBatteryCharging,"ax",%progbits
 243              		.align	2
 244              		.global	HAL_PWREx_DisableBatteryCharging
 245              		.thumb
 246              		.thumb_func
 248              	HAL_PWREx_DisableBatteryCharging:
 249              	.LFB128:
 206:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 207:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 208:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 209:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable battery charging.  
 210:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 211:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 212:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableBatteryCharging(void)
ARM GAS  /tmp/cceXXqTt.s 			page 9


 213:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 250              		.loc 1 213 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254              		@ link register save eliminated.
 255 0000 80B4     		push	{r7}
 256              	.LCFI16:
 257              		.cfi_def_cfa_offset 4
 258              		.cfi_offset 7, -4
 259 0002 00AF     		add	r7, sp, #0
 260              	.LCFI17:
 261              		.cfi_def_cfa_register 7
 214:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR4, PWR_CR4_VBE); 
 262              		.loc 1 214 0
 263 0004 044A     		ldr	r2, .L18
 264 0006 044B     		ldr	r3, .L18
 265 0008 DB68     		ldr	r3, [r3, #12]
 266 000a 23F48073 		bic	r3, r3, #256
 267 000e D360     		str	r3, [r2, #12]
 215:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }  
 268              		.loc 1 215 0
 269 0010 BD46     		mov	sp, r7
 270              	.LCFI18:
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 0012 5DF8047B 		ldr	r7, [sp], #4
 274              	.LCFI19:
 275              		.cfi_restore 7
 276              		.cfi_def_cfa_offset 0
 277 0016 7047     		bx	lr
 278              	.L19:
 279              		.align	2
 280              	.L18:
 281 0018 00700040 		.word	1073770496
 282              		.cfi_endproc
 283              	.LFE128:
 285              		.section	.text.HAL_PWREx_EnableVddUSB,"ax",%progbits
 286              		.align	2
 287              		.global	HAL_PWREx_EnableVddUSB
 288              		.thumb
 289              		.thumb_func
 291              	HAL_PWREx_EnableVddUSB:
 292              	.LFB129:
 216:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 217:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 218:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32L486xx
 219:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 220:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDUSB supply. 
 221:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDUSB electrical and logical isolation, once VDDUSB supply is present.  
 222:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 223:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 224:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddUSB(void)
 225:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 293              		.loc 1 225 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cceXXqTt.s 			page 10


 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0000 80B4     		push	{r7}
 299              	.LCFI20:
 300              		.cfi_def_cfa_offset 4
 301              		.cfi_offset 7, -4
 302 0002 00AF     		add	r7, sp, #0
 303              	.LCFI21:
 304              		.cfi_def_cfa_register 7
 226:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_USV);
 305              		.loc 1 226 0
 306 0004 044A     		ldr	r2, .L21
 307 0006 044B     		ldr	r3, .L21
 308 0008 5B68     		ldr	r3, [r3, #4]
 309 000a 43F48063 		orr	r3, r3, #1024
 310 000e 5360     		str	r3, [r2, #4]
 227:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 311              		.loc 1 227 0
 312 0010 BD46     		mov	sp, r7
 313              	.LCFI22:
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 0012 5DF8047B 		ldr	r7, [sp], #4
 317              	.LCFI23:
 318              		.cfi_restore 7
 319              		.cfi_def_cfa_offset 0
 320 0016 7047     		bx	lr
 321              	.L22:
 322              		.align	2
 323              	.L21:
 324 0018 00700040 		.word	1073770496
 325              		.cfi_endproc
 326              	.LFE129:
 328              		.section	.text.HAL_PWREx_DisableVddUSB,"ax",%progbits
 329              		.align	2
 330              		.global	HAL_PWREx_DisableVddUSB
 331              		.thumb
 332              		.thumb_func
 334              	HAL_PWREx_DisableVddUSB:
 335              	.LFB130:
 228:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 229:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 230:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 231:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDUSB supply. 
 232:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 233:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 234:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddUSB(void)
 235:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 336              		.loc 1 235 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              	.LCFI24:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
ARM GAS  /tmp/cceXXqTt.s 			page 11


 345 0002 00AF     		add	r7, sp, #0
 346              	.LCFI25:
 347              		.cfi_def_cfa_register 7
 236:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_USV);
 348              		.loc 1 236 0
 349 0004 044A     		ldr	r2, .L24
 350 0006 044B     		ldr	r3, .L24
 351 0008 5B68     		ldr	r3, [r3, #4]
 352 000a 23F48063 		bic	r3, r3, #1024
 353 000e 5360     		str	r3, [r2, #4]
 237:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 354              		.loc 1 237 0
 355 0010 BD46     		mov	sp, r7
 356              	.LCFI26:
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 0012 5DF8047B 		ldr	r7, [sp], #4
 360              	.LCFI27:
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0016 7047     		bx	lr
 364              	.L25:
 365              		.align	2
 366              	.L24:
 367 0018 00700040 		.word	1073770496
 368              		.cfi_endproc
 369              	.LFE130:
 371              		.section	.text.HAL_PWREx_EnableVddIO2,"ax",%progbits
 372              		.align	2
 373              		.global	HAL_PWREx_EnableVddIO2
 374              		.thumb
 375              		.thumb_func
 377              	HAL_PWREx_EnableVddIO2:
 378              	.LFB131:
 238:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32
 239:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 240:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 241:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable VDDIO2 supply. 
 242:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Remove VDDIO2 electrical and logical isolation, once VDDIO2 supply is present. 
 243:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 244:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 245:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableVddIO2(void)
 246:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 379              		.loc 1 246 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383              		@ link register save eliminated.
 384 0000 80B4     		push	{r7}
 385              	.LCFI28:
 386              		.cfi_def_cfa_offset 4
 387              		.cfi_offset 7, -4
 388 0002 00AF     		add	r7, sp, #0
 389              	.LCFI29:
 390              		.cfi_def_cfa_register 7
 247:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_CR2_IOSV);
 391              		.loc 1 247 0
ARM GAS  /tmp/cceXXqTt.s 			page 12


 392 0004 044A     		ldr	r2, .L27
 393 0006 044B     		ldr	r3, .L27
 394 0008 5B68     		ldr	r3, [r3, #4]
 395 000a 43F40073 		orr	r3, r3, #512
 396 000e 5360     		str	r3, [r2, #4]
 248:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 397              		.loc 1 248 0
 398 0010 BD46     		mov	sp, r7
 399              	.LCFI30:
 400              		.cfi_def_cfa_register 13
 401              		@ sp needed
 402 0012 5DF8047B 		ldr	r7, [sp], #4
 403              	.LCFI31:
 404              		.cfi_restore 7
 405              		.cfi_def_cfa_offset 0
 406 0016 7047     		bx	lr
 407              	.L28:
 408              		.align	2
 409              	.L27:
 410 0018 00700040 		.word	1073770496
 411              		.cfi_endproc
 412              	.LFE131:
 414              		.section	.text.HAL_PWREx_DisableVddIO2,"ax",%progbits
 415              		.align	2
 416              		.global	HAL_PWREx_DisableVddIO2
 417              		.thumb
 418              		.thumb_func
 420              	HAL_PWREx_DisableVddIO2:
 421              	.LFB132:
 249:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 250:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 251:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 252:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable VDDIO2 supply. 
 253:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 254:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 255:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableVddIO2(void)
 256:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 422              		.loc 1 256 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 1, uses_anonymous_args = 0
 426              		@ link register save eliminated.
 427 0000 80B4     		push	{r7}
 428              	.LCFI32:
 429              		.cfi_def_cfa_offset 4
 430              		.cfi_offset 7, -4
 431 0002 00AF     		add	r7, sp, #0
 432              	.LCFI33:
 433              		.cfi_def_cfa_register 7
 257:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_IOSV);
 434              		.loc 1 257 0
 435 0004 044A     		ldr	r2, .L30
 436 0006 044B     		ldr	r3, .L30
 437 0008 5B68     		ldr	r3, [r3, #4]
 438 000a 23F40073 		bic	r3, r3, #512
 439 000e 5360     		str	r3, [r2, #4]
 258:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
ARM GAS  /tmp/cceXXqTt.s 			page 13


 440              		.loc 1 258 0
 441 0010 BD46     		mov	sp, r7
 442              	.LCFI34:
 443              		.cfi_def_cfa_register 13
 444              		@ sp needed
 445 0012 5DF8047B 		ldr	r7, [sp], #4
 446              	.LCFI35:
 447              		.cfi_restore 7
 448              		.cfi_def_cfa_offset 0
 449 0016 7047     		bx	lr
 450              	.L31:
 451              		.align	2
 452              	.L30:
 453 0018 00700040 		.word	1073770496
 454              		.cfi_endproc
 455              	.LFE132:
 457              		.section	.text.HAL_PWREx_EnableInternalWakeUpLine,"ax",%progbits
 458              		.align	2
 459              		.global	HAL_PWREx_EnableInternalWakeUpLine
 460              		.thumb
 461              		.thumb_func
 463              	HAL_PWREx_EnableInternalWakeUpLine:
 464              	.LFB133:
 259:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 260:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 261:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 262:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable Internal Wake-up Line. 
 263:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 264:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 265:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableInternalWakeUpLine(void)
 266:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 465              		.loc 1 266 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470 0000 80B4     		push	{r7}
 471              	.LCFI36:
 472              		.cfi_def_cfa_offset 4
 473              		.cfi_offset 7, -4
 474 0002 00AF     		add	r7, sp, #0
 475              	.LCFI37:
 476              		.cfi_def_cfa_register 7
 267:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_EIWF);
 477              		.loc 1 267 0
 478 0004 044A     		ldr	r2, .L33
 479 0006 044B     		ldr	r3, .L33
 480 0008 9B68     		ldr	r3, [r3, #8]
 481 000a 43F40043 		orr	r3, r3, #32768
 482 000e 9360     		str	r3, [r2, #8]
 268:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 483              		.loc 1 268 0
 484 0010 BD46     		mov	sp, r7
 485              	.LCFI38:
 486              		.cfi_def_cfa_register 13
 487              		@ sp needed
 488 0012 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cceXXqTt.s 			page 14


 489              	.LCFI39:
 490              		.cfi_restore 7
 491              		.cfi_def_cfa_offset 0
 492 0016 7047     		bx	lr
 493              	.L34:
 494              		.align	2
 495              	.L33:
 496 0018 00700040 		.word	1073770496
 497              		.cfi_endproc
 498              	.LFE133:
 500              		.section	.text.HAL_PWREx_DisableInternalWakeUpLine,"ax",%progbits
 501              		.align	2
 502              		.global	HAL_PWREx_DisableInternalWakeUpLine
 503              		.thumb
 504              		.thumb_func
 506              	HAL_PWREx_DisableInternalWakeUpLine:
 507              	.LFB134:
 269:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 270:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 271:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 272:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable Internal Wake-up Line. 
 273:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 274:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 275:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableInternalWakeUpLine(void)
 276:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 508              		.loc 1 276 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513 0000 80B4     		push	{r7}
 514              	.LCFI40:
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 7, -4
 517 0002 00AF     		add	r7, sp, #0
 518              	.LCFI41:
 519              		.cfi_def_cfa_register 7
 277:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_EIWF);
 520              		.loc 1 277 0
 521 0004 044A     		ldr	r2, .L36
 522 0006 044B     		ldr	r3, .L36
 523 0008 9B68     		ldr	r3, [r3, #8]
 524 000a 23F40043 		bic	r3, r3, #32768
 525 000e 9360     		str	r3, [r2, #8]
 278:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 526              		.loc 1 278 0
 527 0010 BD46     		mov	sp, r7
 528              	.LCFI42:
 529              		.cfi_def_cfa_register 13
 530              		@ sp needed
 531 0012 5DF8047B 		ldr	r7, [sp], #4
 532              	.LCFI43:
 533              		.cfi_restore 7
 534              		.cfi_def_cfa_offset 0
 535 0016 7047     		bx	lr
 536              	.L37:
 537              		.align	2
ARM GAS  /tmp/cceXXqTt.s 			page 15


 538              	.L36:
 539 0018 00700040 		.word	1073770496
 540              		.cfi_endproc
 541              	.LFE134:
 543              		.section	.text.HAL_PWREx_EnableGPIOPullUp,"ax",%progbits
 544              		.align	2
 545              		.global	HAL_PWREx_EnableGPIOPullUp
 546              		.thumb
 547              		.thumb_func
 549              	HAL_PWREx_EnableGPIOPullUp:
 550              	.LFB135:
 279:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 280:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 281:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 282:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 283:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-up state in Standby and Shutdown modes.
 284:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PUy bits of PWR_PUCRx register to configure the I/O in 
 285:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-up state in Standby and Shutdown modes. 
 286:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit 
 287:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API.
 288:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the 
 289:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode. 
 290:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 291:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is cleared unless it is reserved. 
 292:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to set is reserved, the other PUy bits entered as input 
 293:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.     
 294:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H 
 295:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 296:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 297:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 298:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 299:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set 
 300:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call.    
 301:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 302:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 303:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 304:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 551              		.loc 1 304 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 8
 554              		@ frame_needed = 1, uses_anonymous_args = 0
 555              		@ link register save eliminated.
 556 0000 80B4     		push	{r7}
 557              	.LCFI44:
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 0002 83B0     		sub	sp, sp, #12
 561              	.LCFI45:
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              	.LCFI46:
 565              		.cfi_def_cfa_register 7
 566 0006 7860     		str	r0, [r7, #4]
 567 0008 3960     		str	r1, [r7]
 305:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 306:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 307:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cceXXqTt.s 			page 16


 308:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 568              		.loc 1 308 0
 569 000a 7B68     		ldr	r3, [r7, #4]
 570 000c 072B     		cmp	r3, #7
 571 000e 00F28D80 		bhi	.L39
 572 0012 01A2     		adr	r2, .L41
 573 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 574              		.p2align 2
 575              	.L41:
 576 0018 39000000 		.word	.L40+1
 577 001c 5D000000 		.word	.L42+1
 578 0020 7D000000 		.word	.L43+1
 579 0024 99000000 		.word	.L44+1
 580 0028 B5000000 		.word	.L45+1
 581 002c D1000000 		.word	.L46+1
 582 0030 ED000000 		.word	.L47+1
 583 0034 09010000 		.word	.L48+1
 584              		.p2align 1
 585              	.L40:
 309:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 310:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 311:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));
 586              		.loc 1 311 0
 587 0038 4149     		ldr	r1, .L51
 588 003a 414B     		ldr	r3, .L51
 589 003c 1A6A     		ldr	r2, [r3, #32]
 590 003e 3B68     		ldr	r3, [r7]
 591 0040 23F48043 		bic	r3, r3, #16384
 592 0044 1343     		orrs	r3, r3, r2
 593 0046 0B62     		str	r3, [r1, #32]
 312:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));                 
 594              		.loc 1 312 0
 595 0048 3D49     		ldr	r1, .L51
 596 004a 3D4B     		ldr	r3, .L51
 597 004c 5A6A     		ldr	r2, [r3, #36]
 598 004e 3B68     		ldr	r3, [r7]
 599 0050 23F42043 		bic	r3, r3, #40960
 600 0054 DB43     		mvns	r3, r3
 601 0056 1340     		ands	r3, r3, r2
 602 0058 4B62     		str	r3, [r1, #36]
 313:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 603              		.loc 1 313 0
 604 005a 69E0     		b	.L49
 605              	.L42:
 314:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 315:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRB, GPIONumber);
 606              		.loc 1 315 0
 607 005c 3849     		ldr	r1, .L51
 608 005e 384B     		ldr	r3, .L51
 609 0060 9A6A     		ldr	r2, [r3, #40]
 610 0062 3B68     		ldr	r3, [r7]
 611 0064 1343     		orrs	r3, r3, r2
 612 0066 8B62     		str	r3, [r1, #40]
 316:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));                  
 613              		.loc 1 316 0
 614 0068 3549     		ldr	r1, .L51
 615 006a 354B     		ldr	r3, .L51
ARM GAS  /tmp/cceXXqTt.s 			page 17


 616 006c DA6A     		ldr	r2, [r3, #44]
 617 006e 3B68     		ldr	r3, [r7]
 618 0070 23F01003 		bic	r3, r3, #16
 619 0074 DB43     		mvns	r3, r3
 620 0076 1340     		ands	r3, r3, r2
 621 0078 CB62     		str	r3, [r1, #44]
 317:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 622              		.loc 1 317 0
 623 007a 59E0     		b	.L49
 624              	.L43:
 318:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 319:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRC, GPIONumber);
 625              		.loc 1 319 0
 626 007c 3049     		ldr	r1, .L51
 627 007e 304B     		ldr	r3, .L51
 628 0080 1A6B     		ldr	r2, [r3, #48]
 629 0082 3B68     		ldr	r3, [r7]
 630 0084 1343     		orrs	r3, r3, r2
 631 0086 0B63     		str	r3, [r1, #48]
 320:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);         
 632              		.loc 1 320 0
 633 0088 2D49     		ldr	r1, .L51
 634 008a 2D4B     		ldr	r3, .L51
 635 008c 5A6B     		ldr	r2, [r3, #52]
 636 008e 3B68     		ldr	r3, [r7]
 637 0090 DB43     		mvns	r3, r3
 638 0092 1340     		ands	r3, r3, r2
 639 0094 4B63     		str	r3, [r1, #52]
 321:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 640              		.loc 1 321 0
 641 0096 4BE0     		b	.L49
 642              	.L44:
 322:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 323:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRD, GPIONumber);
 643              		.loc 1 323 0
 644 0098 2949     		ldr	r1, .L51
 645 009a 294B     		ldr	r3, .L51
 646 009c 9A6B     		ldr	r2, [r3, #56]
 647 009e 3B68     		ldr	r3, [r7]
 648 00a0 1343     		orrs	r3, r3, r2
 649 00a2 8B63     		str	r3, [r1, #56]
 324:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);         
 650              		.loc 1 324 0
 651 00a4 2649     		ldr	r1, .L51
 652 00a6 264B     		ldr	r3, .L51
 653 00a8 DA6B     		ldr	r2, [r3, #60]
 654 00aa 3B68     		ldr	r3, [r7]
 655 00ac DB43     		mvns	r3, r3
 656 00ae 1340     		ands	r3, r3, r2
 657 00b0 CB63     		str	r3, [r1, #60]
 325:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 658              		.loc 1 325 0
 659 00b2 3DE0     		b	.L49
 660              	.L45:
 326:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 327:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRE, GPIONumber);
 661              		.loc 1 327 0
ARM GAS  /tmp/cceXXqTt.s 			page 18


 662 00b4 2249     		ldr	r1, .L51
 663 00b6 224B     		ldr	r3, .L51
 664 00b8 1A6C     		ldr	r2, [r3, #64]
 665 00ba 3B68     		ldr	r3, [r7]
 666 00bc 1343     		orrs	r3, r3, r2
 667 00be 0B64     		str	r3, [r1, #64]
 328:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);         
 668              		.loc 1 328 0
 669 00c0 1F49     		ldr	r1, .L51
 670 00c2 1F4B     		ldr	r3, .L51
 671 00c4 5A6C     		ldr	r2, [r3, #68]
 672 00c6 3B68     		ldr	r3, [r7]
 673 00c8 DB43     		mvns	r3, r3
 674 00ca 1340     		ands	r3, r3, r2
 675 00cc 4B64     		str	r3, [r1, #68]
 329:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 676              		.loc 1 329 0
 677 00ce 2FE0     		b	.L49
 678              	.L46:
 330:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 331:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRF, GPIONumber);
 679              		.loc 1 331 0
 680 00d0 1B49     		ldr	r1, .L51
 681 00d2 1B4B     		ldr	r3, .L51
 682 00d4 9A6C     		ldr	r2, [r3, #72]
 683 00d6 3B68     		ldr	r3, [r7]
 684 00d8 1343     		orrs	r3, r3, r2
 685 00da 8B64     		str	r3, [r1, #72]
 332:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);         
 686              		.loc 1 332 0
 687 00dc 1849     		ldr	r1, .L51
 688 00de 184B     		ldr	r3, .L51
 689 00e0 DA6C     		ldr	r2, [r3, #76]
 690 00e2 3B68     		ldr	r3, [r7]
 691 00e4 DB43     		mvns	r3, r3
 692 00e6 1340     		ands	r3, r3, r2
 693 00e8 CB64     		str	r3, [r1, #76]
 333:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 694              		.loc 1 333 0
 695 00ea 21E0     		b	.L49
 696              	.L47:
 334:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 335:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRG, GPIONumber);
 697              		.loc 1 335 0
 698 00ec 1449     		ldr	r1, .L51
 699 00ee 144B     		ldr	r3, .L51
 700 00f0 1A6D     		ldr	r2, [r3, #80]
 701 00f2 3B68     		ldr	r3, [r7]
 702 00f4 1343     		orrs	r3, r3, r2
 703 00f6 0B65     		str	r3, [r1, #80]
 336:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);         
 704              		.loc 1 336 0
 705 00f8 1149     		ldr	r1, .L51
 706 00fa 114B     		ldr	r3, .L51
 707 00fc 5A6D     		ldr	r2, [r3, #84]
 708 00fe 3B68     		ldr	r3, [r7]
 709 0100 DB43     		mvns	r3, r3
ARM GAS  /tmp/cceXXqTt.s 			page 19


 710 0102 1340     		ands	r3, r3, r2
 711 0104 4B65     		str	r3, [r1, #84]
 337:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 712              		.loc 1 337 0
 713 0106 13E0     		b	.L49
 714              	.L48:
 338:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 339:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 715              		.loc 1 339 0
 716 0108 0D49     		ldr	r1, .L51
 717 010a 0D4B     		ldr	r3, .L51
 718 010c 9A6D     		ldr	r2, [r3, #88]
 719 010e 3B68     		ldr	r3, [r7]
 720 0110 03F00303 		and	r3, r3, #3
 721 0114 1343     		orrs	r3, r3, r2
 722 0116 8B65     		str	r3, [r1, #88]
 340:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));           
 723              		.loc 1 340 0
 724 0118 0949     		ldr	r1, .L51
 725 011a 094B     		ldr	r3, .L51
 726 011c DA6D     		ldr	r2, [r3, #92]
 727 011e 3B68     		ldr	r3, [r7]
 728 0120 03F00303 		and	r3, r3, #3
 729 0124 DB43     		mvns	r3, r3
 730 0126 1340     		ands	r3, r3, r2
 731 0128 CB65     		str	r3, [r1, #92]
 341:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 732              		.loc 1 341 0
 733 012a 01E0     		b	.L49
 734              	.L39:
 342:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 343:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 735              		.loc 1 343 0
 736 012c 0123     		movs	r3, #1
 737 012e 00E0     		b	.L50
 738              	.L49:
 344:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 345:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 346:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 739              		.loc 1 346 0
 740 0130 0023     		movs	r3, #0
 741              	.L50:
 347:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 742              		.loc 1 347 0
 743 0132 1846     		mov	r0, r3
 744 0134 0C37     		adds	r7, r7, #12
 745              	.LCFI47:
 746              		.cfi_def_cfa_offset 4
 747 0136 BD46     		mov	sp, r7
 748              	.LCFI48:
 749              		.cfi_def_cfa_register 13
 750              		@ sp needed
 751 0138 5DF8047B 		ldr	r7, [sp], #4
 752              	.LCFI49:
 753              		.cfi_restore 7
 754              		.cfi_def_cfa_offset 0
 755 013c 7047     		bx	lr
ARM GAS  /tmp/cceXXqTt.s 			page 20


 756              	.L52:
 757 013e 00BF     		.align	2
 758              	.L51:
 759 0140 00700040 		.word	1073770496
 760              		.cfi_endproc
 761              	.LFE135:
 763              		.section	.text.HAL_PWREx_DisableGPIOPullUp,"ax",%progbits
 764              		.align	2
 765              		.global	HAL_PWREx_DisableGPIOPullUp
 766              		.thumb
 767              		.thumb_func
 769              	HAL_PWREx_DisableGPIOPullUp:
 770              	.LFB136:
 348:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 349:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 350:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 351:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-up state in Standby mode and Shutdown modes.
 352:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PUy bits of PWR_PUCRx register used to configure the I/O
 353:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-up state in Standby and Shutdown modes.
 354:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PUy bit to reset is reserved, the other PUy bits entered as input 
 355:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.      
 356:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A, ..., PWR_GPIO_H 
 357:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 358:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 359:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 360:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 361:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset 
 362:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 363:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 364:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 365:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullUp(uint32_t GPIO, uint32_t GPIONumber)
 366:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 771              		.loc 1 366 0
 772              		.cfi_startproc
 773              		@ args = 0, pretend = 0, frame = 8
 774              		@ frame_needed = 1, uses_anonymous_args = 0
 775              		@ link register save eliminated.
 776 0000 80B4     		push	{r7}
 777              	.LCFI50:
 778              		.cfi_def_cfa_offset 4
 779              		.cfi_offset 7, -4
 780 0002 83B0     		sub	sp, sp, #12
 781              	.LCFI51:
 782              		.cfi_def_cfa_offset 16
 783 0004 00AF     		add	r7, sp, #0
 784              	.LCFI52:
 785              		.cfi_def_cfa_register 7
 786 0006 7860     		str	r0, [r7, #4]
 787 0008 3960     		str	r1, [r7]
 367:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 368:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 369:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 370:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 788              		.loc 1 370 0
 789 000a 7B68     		ldr	r3, [r7, #4]
 790 000c 072B     		cmp	r3, #7
 791 000e 57D8     		bhi	.L54
ARM GAS  /tmp/cceXXqTt.s 			page 21


 792 0010 01A2     		adr	r2, .L56
 793 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 794 0016 00BF     		.p2align 2
 795              	.L56:
 796 0018 39000000 		.word	.L55+1
 797 001c 4D000000 		.word	.L57+1
 798 0020 5D000000 		.word	.L58+1
 799 0024 6D000000 		.word	.L59+1
 800 0028 7D000000 		.word	.L60+1
 801 002c 8D000000 		.word	.L61+1
 802 0030 9D000000 		.word	.L62+1
 803 0034 AD000000 		.word	.L63+1
 804              		.p2align 1
 805              	.L55:
 371:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 372:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 373:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));         
 806              		.loc 1 373 0
 807 0038 2649     		ldr	r1, .L66
 808 003a 264B     		ldr	r3, .L66
 809 003c 1A6A     		ldr	r2, [r3, #32]
 810 003e 3B68     		ldr	r3, [r7]
 811 0040 23F48043 		bic	r3, r3, #16384
 812 0044 DB43     		mvns	r3, r3
 813 0046 1340     		ands	r3, r3, r2
 814 0048 0B62     		str	r3, [r1, #32]
 374:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 815              		.loc 1 374 0
 816 004a 3BE0     		b	.L64
 817              	.L57:
 375:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 376:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);
 818              		.loc 1 376 0
 819 004c 2149     		ldr	r1, .L66
 820 004e 214B     		ldr	r3, .L66
 821 0050 9A6A     		ldr	r2, [r3, #40]
 822 0052 3B68     		ldr	r3, [r7]
 823 0054 DB43     		mvns	r3, r3
 824 0056 1340     		ands	r3, r3, r2
 825 0058 8B62     		str	r3, [r1, #40]
 377:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 826              		.loc 1 377 0
 827 005a 33E0     		b	.L64
 828              	.L58:
 378:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 379:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);
 829              		.loc 1 379 0
 830 005c 1D49     		ldr	r1, .L66
 831 005e 1D4B     		ldr	r3, .L66
 832 0060 1A6B     		ldr	r2, [r3, #48]
 833 0062 3B68     		ldr	r3, [r7]
 834 0064 DB43     		mvns	r3, r3
 835 0066 1340     		ands	r3, r3, r2
 836 0068 0B63     		str	r3, [r1, #48]
 380:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 837              		.loc 1 380 0
 838 006a 2BE0     		b	.L64
ARM GAS  /tmp/cceXXqTt.s 			page 22


 839              	.L59:
 381:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 382:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);
 840              		.loc 1 382 0
 841 006c 1949     		ldr	r1, .L66
 842 006e 194B     		ldr	r3, .L66
 843 0070 9A6B     		ldr	r2, [r3, #56]
 844 0072 3B68     		ldr	r3, [r7]
 845 0074 DB43     		mvns	r3, r3
 846 0076 1340     		ands	r3, r3, r2
 847 0078 8B63     		str	r3, [r1, #56]
 383:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 848              		.loc 1 383 0
 849 007a 23E0     		b	.L64
 850              	.L60:
 384:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 385:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);
 851              		.loc 1 385 0
 852 007c 1549     		ldr	r1, .L66
 853 007e 154B     		ldr	r3, .L66
 854 0080 1A6C     		ldr	r2, [r3, #64]
 855 0082 3B68     		ldr	r3, [r7]
 856 0084 DB43     		mvns	r3, r3
 857 0086 1340     		ands	r3, r3, r2
 858 0088 0B64     		str	r3, [r1, #64]
 386:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 859              		.loc 1 386 0
 860 008a 1BE0     		b	.L64
 861              	.L61:
 387:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 388:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);
 862              		.loc 1 388 0
 863 008c 1149     		ldr	r1, .L66
 864 008e 114B     		ldr	r3, .L66
 865 0090 9A6C     		ldr	r2, [r3, #72]
 866 0092 3B68     		ldr	r3, [r7]
 867 0094 DB43     		mvns	r3, r3
 868 0096 1340     		ands	r3, r3, r2
 869 0098 8B64     		str	r3, [r1, #72]
 389:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 870              		.loc 1 389 0
 871 009a 13E0     		b	.L64
 872              	.L62:
 390:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 391:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);
 873              		.loc 1 391 0
 874 009c 0D49     		ldr	r1, .L66
 875 009e 0D4B     		ldr	r3, .L66
 876 00a0 1A6D     		ldr	r2, [r3, #80]
 877 00a2 3B68     		ldr	r3, [r7]
 878 00a4 DB43     		mvns	r3, r3
 879 00a6 1340     		ands	r3, r3, r2
 880 00a8 0B65     		str	r3, [r1, #80]
 392:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 881              		.loc 1 392 0
 882 00aa 0BE0     		b	.L64
 883              	.L63:
ARM GAS  /tmp/cceXXqTt.s 			page 23


 393:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 394:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 884              		.loc 1 394 0
 885 00ac 0949     		ldr	r1, .L66
 886 00ae 094B     		ldr	r3, .L66
 887 00b0 9A6D     		ldr	r2, [r3, #88]
 888 00b2 3B68     		ldr	r3, [r7]
 889 00b4 03F00303 		and	r3, r3, #3
 890 00b8 DB43     		mvns	r3, r3
 891 00ba 1340     		ands	r3, r3, r2
 892 00bc 8B65     		str	r3, [r1, #88]
 395:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 893              		.loc 1 395 0
 894 00be 01E0     		b	.L64
 895              	.L54:
 396:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 397:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 896              		.loc 1 397 0
 897 00c0 0123     		movs	r3, #1
 898 00c2 00E0     		b	.L65
 899              	.L64:
 398:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 399:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 400:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 900              		.loc 1 400 0
 901 00c4 0023     		movs	r3, #0
 902              	.L65:
 401:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 903              		.loc 1 401 0
 904 00c6 1846     		mov	r0, r3
 905 00c8 0C37     		adds	r7, r7, #12
 906              	.LCFI53:
 907              		.cfi_def_cfa_offset 4
 908 00ca BD46     		mov	sp, r7
 909              	.LCFI54:
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 00cc 5DF8047B 		ldr	r7, [sp], #4
 913              	.LCFI55:
 914              		.cfi_restore 7
 915              		.cfi_def_cfa_offset 0
 916 00d0 7047     		bx	lr
 917              	.L67:
 918 00d2 00BF     		.align	2
 919              	.L66:
 920 00d4 00700040 		.word	1073770496
 921              		.cfi_endproc
 922              	.LFE136:
 924              		.section	.text.HAL_PWREx_EnableGPIOPullDown,"ax",%progbits
 925              		.align	2
 926              		.global	HAL_PWREx_EnableGPIOPullDown
 927              		.thumb
 928              		.thumb_func
 930              	HAL_PWREx_EnableGPIOPullDown:
 931              	.LFB137:
 402:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 403:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
ARM GAS  /tmp/cceXXqTt.s 			page 24


 404:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 405:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 406:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable GPIO pull-down state in Standby and Shutdown modes.
 407:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Set the relevant PDy bits of PWR_PDCRx register to configure the I/O in 
 408:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        pull-down state in Standby and Shutdown modes. 
 409:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  This state is effective in Standby and Shutdown modes only if APC bit
 410:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is set through HAL_PWREx_EnablePullUpPullDownConfig() API. 
 411:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The configuration is lost when exiting the Shutdown mode due to the 
 412:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        power-on reset, maintained when exiting the Standby mode. 
 413:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  To avoid any conflict at Standby and Shutdown modes exits, the corresponding
 414:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PUy bit of PWR_PUCRx register is cleared unless it is reserved. 
 415:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to set is reserved, the other PDy bits entered as input 
 416:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are set.         
 417:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specify the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H 
 418:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 419:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 420:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 421:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 422:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to set 
 423:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 424:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 425:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 426:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_EnableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 427:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 932              		.loc 1 427 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 8
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI56:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 83B0     		sub	sp, sp, #12
 942              	.LCFI57:
 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              	.LCFI58:
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 948 0008 3960     		str	r1, [r7]
 428:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 429:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 430:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 431:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 949              		.loc 1 431 0
 950 000a 7B68     		ldr	r3, [r7, #4]
 951 000c 072B     		cmp	r3, #7
 952 000e 00F28D80 		bhi	.L69
 953 0012 01A2     		adr	r2, .L71
 954 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 955              		.p2align 2
 956              	.L71:
 957 0018 39000000 		.word	.L70+1
 958 001c 5D000000 		.word	.L72+1
 959 0020 7D000000 		.word	.L73+1
 960 0024 99000000 		.word	.L74+1
ARM GAS  /tmp/cceXXqTt.s 			page 25


 961 0028 B5000000 		.word	.L75+1
 962 002c D1000000 		.word	.L76+1
 963 0030 ED000000 		.word	.L77+1
 964 0034 09010000 		.word	.L78+1
 965              		.p2align 1
 966              	.L70:
 432:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   { 
 433:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 434:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));        
 967              		.loc 1 434 0
 968 0038 4149     		ldr	r1, .L81
 969 003a 414B     		ldr	r3, .L81
 970 003c 5A6A     		ldr	r2, [r3, #36]
 971 003e 3B68     		ldr	r3, [r7]
 972 0040 23F42043 		bic	r3, r3, #40960
 973 0044 1343     		orrs	r3, r3, r2
 974 0046 4B62     		str	r3, [r1, #36]
 435:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRA, (GPIONumber & (~(PWR_GPIO_BIT_14))));           
 975              		.loc 1 435 0
 976 0048 3D49     		ldr	r1, .L81
 977 004a 3D4B     		ldr	r3, .L81
 978 004c 1A6A     		ldr	r2, [r3, #32]
 979 004e 3B68     		ldr	r3, [r7]
 980 0050 23F48043 		bic	r3, r3, #16384
 981 0054 DB43     		mvns	r3, r3
 982 0056 1340     		ands	r3, r3, r2
 983 0058 0B62     		str	r3, [r1, #32]
 436:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 984              		.loc 1 436 0
 985 005a 69E0     		b	.L79
 986              	.L72:
 437:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 438:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));
 987              		.loc 1 438 0
 988 005c 3849     		ldr	r1, .L81
 989 005e 384B     		ldr	r3, .L81
 990 0060 DA6A     		ldr	r2, [r3, #44]
 991 0062 3B68     		ldr	r3, [r7]
 992 0064 23F01003 		bic	r3, r3, #16
 993 0068 1343     		orrs	r3, r3, r2
 994 006a CB62     		str	r3, [r1, #44]
 439:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRB, GPIONumber);                    
 995              		.loc 1 439 0
 996 006c 3449     		ldr	r1, .L81
 997 006e 344B     		ldr	r3, .L81
 998 0070 9A6A     		ldr	r2, [r3, #40]
 999 0072 3B68     		ldr	r3, [r7]
 1000 0074 DB43     		mvns	r3, r3
 1001 0076 1340     		ands	r3, r3, r2
 1002 0078 8B62     		str	r3, [r1, #40]
 440:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1003              		.loc 1 440 0
 1004 007a 59E0     		b	.L79
 1005              	.L73:
 441:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 442:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRC, GPIONumber);
 1006              		.loc 1 442 0
ARM GAS  /tmp/cceXXqTt.s 			page 26


 1007 007c 3049     		ldr	r1, .L81
 1008 007e 304B     		ldr	r3, .L81
 1009 0080 5A6B     		ldr	r2, [r3, #52]
 1010 0082 3B68     		ldr	r3, [r7]
 1011 0084 1343     		orrs	r3, r3, r2
 1012 0086 4B63     		str	r3, [r1, #52]
 443:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRC, GPIONumber);        
 1013              		.loc 1 443 0
 1014 0088 2D49     		ldr	r1, .L81
 1015 008a 2D4B     		ldr	r3, .L81
 1016 008c 1A6B     		ldr	r2, [r3, #48]
 1017 008e 3B68     		ldr	r3, [r7]
 1018 0090 DB43     		mvns	r3, r3
 1019 0092 1340     		ands	r3, r3, r2
 1020 0094 0B63     		str	r3, [r1, #48]
 444:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1021              		.loc 1 444 0
 1022 0096 4BE0     		b	.L79
 1023              	.L74:
 445:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 446:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRD, GPIONumber);
 1024              		.loc 1 446 0
 1025 0098 2949     		ldr	r1, .L81
 1026 009a 294B     		ldr	r3, .L81
 1027 009c DA6B     		ldr	r2, [r3, #60]
 1028 009e 3B68     		ldr	r3, [r7]
 1029 00a0 1343     		orrs	r3, r3, r2
 1030 00a2 CB63     		str	r3, [r1, #60]
 447:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRD, GPIONumber);        
 1031              		.loc 1 447 0
 1032 00a4 2649     		ldr	r1, .L81
 1033 00a6 264B     		ldr	r3, .L81
 1034 00a8 9A6B     		ldr	r2, [r3, #56]
 1035 00aa 3B68     		ldr	r3, [r7]
 1036 00ac DB43     		mvns	r3, r3
 1037 00ae 1340     		ands	r3, r3, r2
 1038 00b0 8B63     		str	r3, [r1, #56]
 448:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1039              		.loc 1 448 0
 1040 00b2 3DE0     		b	.L79
 1041              	.L75:
 449:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 450:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRE, GPIONumber);
 1042              		.loc 1 450 0
 1043 00b4 2249     		ldr	r1, .L81
 1044 00b6 224B     		ldr	r3, .L81
 1045 00b8 5A6C     		ldr	r2, [r3, #68]
 1046 00ba 3B68     		ldr	r3, [r7]
 1047 00bc 1343     		orrs	r3, r3, r2
 1048 00be 4B64     		str	r3, [r1, #68]
 451:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRE, GPIONumber);        
 1049              		.loc 1 451 0
 1050 00c0 1F49     		ldr	r1, .L81
 1051 00c2 1F4B     		ldr	r3, .L81
 1052 00c4 1A6C     		ldr	r2, [r3, #64]
 1053 00c6 3B68     		ldr	r3, [r7]
 1054 00c8 DB43     		mvns	r3, r3
ARM GAS  /tmp/cceXXqTt.s 			page 27


 1055 00ca 1340     		ands	r3, r3, r2
 1056 00cc 0B64     		str	r3, [r1, #64]
 452:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1057              		.loc 1 452 0
 1058 00ce 2FE0     		b	.L79
 1059              	.L76:
 453:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 454:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRF, GPIONumber);
 1060              		.loc 1 454 0
 1061 00d0 1B49     		ldr	r1, .L81
 1062 00d2 1B4B     		ldr	r3, .L81
 1063 00d4 DA6C     		ldr	r2, [r3, #76]
 1064 00d6 3B68     		ldr	r3, [r7]
 1065 00d8 1343     		orrs	r3, r3, r2
 1066 00da CB64     		str	r3, [r1, #76]
 455:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRF, GPIONumber);        
 1067              		.loc 1 455 0
 1068 00dc 1849     		ldr	r1, .L81
 1069 00de 184B     		ldr	r3, .L81
 1070 00e0 9A6C     		ldr	r2, [r3, #72]
 1071 00e2 3B68     		ldr	r3, [r7]
 1072 00e4 DB43     		mvns	r3, r3
 1073 00e6 1340     		ands	r3, r3, r2
 1074 00e8 8B64     		str	r3, [r1, #72]
 456:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1075              		.loc 1 456 0
 1076 00ea 21E0     		b	.L79
 1077              	.L77:
 457:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 458:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRG, GPIONumber);
 1078              		.loc 1 458 0
 1079 00ec 1449     		ldr	r1, .L81
 1080 00ee 144B     		ldr	r3, .L81
 1081 00f0 5A6D     		ldr	r2, [r3, #84]
 1082 00f2 3B68     		ldr	r3, [r7]
 1083 00f4 1343     		orrs	r3, r3, r2
 1084 00f6 4B65     		str	r3, [r1, #84]
 459:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRG, GPIONumber);        
 1085              		.loc 1 459 0
 1086 00f8 1149     		ldr	r1, .L81
 1087 00fa 114B     		ldr	r3, .L81
 1088 00fc 1A6D     		ldr	r2, [r3, #80]
 1089 00fe 3B68     		ldr	r3, [r7]
 1090 0100 DB43     		mvns	r3, r3
 1091 0102 1340     		ands	r3, r3, r2
 1092 0104 0B65     		str	r3, [r1, #80]
 460:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1093              		.loc 1 460 0
 1094 0106 13E0     		b	.L79
 1095              	.L78:
 461:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 462:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        SET_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1096              		.loc 1 462 0
 1097 0108 0D49     		ldr	r1, .L81
 1098 010a 0D4B     		ldr	r3, .L81
 1099 010c DA6D     		ldr	r2, [r3, #92]
 1100 010e 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/cceXXqTt.s 			page 28


 1101 0110 03F00303 		and	r3, r3, #3
 1102 0114 1343     		orrs	r3, r3, r2
 1103 0116 CB65     		str	r3, [r1, #92]
 463:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PUCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));          
 1104              		.loc 1 463 0
 1105 0118 0949     		ldr	r1, .L81
 1106 011a 094B     		ldr	r3, .L81
 1107 011c 9A6D     		ldr	r2, [r3, #88]
 1108 011e 3B68     		ldr	r3, [r7]
 1109 0120 03F00303 		and	r3, r3, #3
 1110 0124 DB43     		mvns	r3, r3
 1111 0126 1340     		ands	r3, r3, r2
 1112 0128 8B65     		str	r3, [r1, #88]
 464:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
 1113              		.loc 1 464 0
 1114 012a 01E0     		b	.L79
 1115              	.L69:
 465:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 466:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 1116              		.loc 1 466 0
 1117 012c 0123     		movs	r3, #1
 1118 012e 00E0     		b	.L80
 1119              	.L79:
 467:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 468:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 469:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1120              		.loc 1 469 0
 1121 0130 0023     		movs	r3, #0
 1122              	.L80:
 470:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1123              		.loc 1 470 0
 1124 0132 1846     		mov	r0, r3
 1125 0134 0C37     		adds	r7, r7, #12
 1126              	.LCFI59:
 1127              		.cfi_def_cfa_offset 4
 1128 0136 BD46     		mov	sp, r7
 1129              	.LCFI60:
 1130              		.cfi_def_cfa_register 13
 1131              		@ sp needed
 1132 0138 5DF8047B 		ldr	r7, [sp], #4
 1133              	.LCFI61:
 1134              		.cfi_restore 7
 1135              		.cfi_def_cfa_offset 0
 1136 013c 7047     		bx	lr
 1137              	.L82:
 1138 013e 00BF     		.align	2
 1139              	.L81:
 1140 0140 00700040 		.word	1073770496
 1141              		.cfi_endproc
 1142              	.LFE137:
 1144              		.section	.text.HAL_PWREx_DisableGPIOPullDown,"ax",%progbits
 1145              		.align	2
 1146              		.global	HAL_PWREx_DisableGPIOPullDown
 1147              		.thumb
 1148              		.thumb_func
 1150              	HAL_PWREx_DisableGPIOPullDown:
 1151              	.LFB138:
ARM GAS  /tmp/cceXXqTt.s 			page 29


 471:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 472:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 473:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 474:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable GPIO pull-down state in Standby and Shutdown modes.
 475:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Reset the relevant PDy bits of PWR_PDCRx register used to configure the I/O
 476:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        in pull-down state in Standby and Shutdown modes. 
 477:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Even if a PDy bit to reset is reserved, the other PDy bits entered as input 
 478:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        parameter at the same time are reset.   
 479:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIO: Specifies the IO port. This parameter can be PWR_GPIO_A..PWR_GPIO_H 
 480:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         to select the GPIO peripheral.
 481:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param  GPIONumber: Specify the I/O pins numbers.
 482:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         This parameter can be one of the following values:
 483:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         PWR_GPIO_BIT_0, ..., PWR_GPIO_BIT_15 (except for PORTH where less  
 484:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         I/O pins are available) or the logical OR of several of them to reset 
 485:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         several bits for a given port in a single API call. 
 486:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 487:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */   
 488:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableGPIOPullDown(uint32_t GPIO, uint32_t GPIONumber)
 489:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1152              		.loc 1 489 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 8
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157 0000 80B4     		push	{r7}
 1158              	.LCFI62:
 1159              		.cfi_def_cfa_offset 4
 1160              		.cfi_offset 7, -4
 1161 0002 83B0     		sub	sp, sp, #12
 1162              	.LCFI63:
 1163              		.cfi_def_cfa_offset 16
 1164 0004 00AF     		add	r7, sp, #0
 1165              	.LCFI64:
 1166              		.cfi_def_cfa_register 7
 1167 0006 7860     		str	r0, [r7, #4]
 1168 0008 3960     		str	r1, [r7]
 490:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO(GPIO));
 491:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_GPIO_BIT_NUMBER(GPIONumber));
 492:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
 493:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (GPIO)
 1169              		.loc 1 493 0
 1170 000a 7B68     		ldr	r3, [r7, #4]
 1171 000c 072B     		cmp	r3, #7
 1172 000e 59D8     		bhi	.L84
 1173 0010 01A2     		adr	r2, .L86
 1174 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1175 0016 00BF     		.p2align 2
 1176              	.L86:
 1177 0018 39000000 		.word	.L85+1
 1178 001c 4D000000 		.word	.L87+1
 1179 0020 61000000 		.word	.L88+1
 1180 0024 71000000 		.word	.L89+1
 1181 0028 81000000 		.word	.L90+1
 1182 002c 91000000 		.word	.L91+1
 1183 0030 A1000000 		.word	.L92+1
 1184 0034 B1000000 		.word	.L93+1
 1185              		.p2align 1
ARM GAS  /tmp/cceXXqTt.s 			page 30


 1186              	.L85:
 494:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 495:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_A:
 496:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRA, (GPIONumber & (~(PWR_GPIO_BIT_13|PWR_GPIO_BIT_15))));                 
 1187              		.loc 1 496 0
 1188 0038 2749     		ldr	r1, .L96
 1189 003a 274B     		ldr	r3, .L96
 1190 003c 5A6A     		ldr	r2, [r3, #36]
 1191 003e 3B68     		ldr	r3, [r7]
 1192 0040 23F42043 		bic	r3, r3, #40960
 1193 0044 DB43     		mvns	r3, r3
 1194 0046 1340     		ands	r3, r3, r2
 1195 0048 4B62     		str	r3, [r1, #36]
 497:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1196              		.loc 1 497 0
 1197 004a 3DE0     		b	.L94
 1198              	.L87:
 498:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_B:
 499:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRB, (GPIONumber & (~(PWR_GPIO_BIT_4))));           
 1199              		.loc 1 499 0
 1200 004c 2249     		ldr	r1, .L96
 1201 004e 224B     		ldr	r3, .L96
 1202 0050 DA6A     		ldr	r2, [r3, #44]
 1203 0052 3B68     		ldr	r3, [r7]
 1204 0054 23F01003 		bic	r3, r3, #16
 1205 0058 DB43     		mvns	r3, r3
 1206 005a 1340     		ands	r3, r3, r2
 1207 005c CB62     		str	r3, [r1, #44]
 500:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1208              		.loc 1 500 0
 1209 005e 33E0     		b	.L94
 1210              	.L88:
 501:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_C:
 502:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRC, GPIONumber);
 1211              		.loc 1 502 0
 1212 0060 1D49     		ldr	r1, .L96
 1213 0062 1D4B     		ldr	r3, .L96
 1214 0064 5A6B     		ldr	r2, [r3, #52]
 1215 0066 3B68     		ldr	r3, [r7]
 1216 0068 DB43     		mvns	r3, r3
 1217 006a 1340     		ands	r3, r3, r2
 1218 006c 4B63     		str	r3, [r1, #52]
 503:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break; 
 1219              		.loc 1 503 0
 1220 006e 2BE0     		b	.L94
 1221              	.L89:
 504:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_D:
 505:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRD, GPIONumber);
 1222              		.loc 1 505 0
 1223 0070 1949     		ldr	r1, .L96
 1224 0072 194B     		ldr	r3, .L96
 1225 0074 DA6B     		ldr	r2, [r3, #60]
 1226 0076 3B68     		ldr	r3, [r7]
 1227 0078 DB43     		mvns	r3, r3
 1228 007a 1340     		ands	r3, r3, r2
 1229 007c CB63     		str	r3, [r1, #60]
 506:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
ARM GAS  /tmp/cceXXqTt.s 			page 31


 1230              		.loc 1 506 0
 1231 007e 23E0     		b	.L94
 1232              	.L90:
 507:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_E:
 508:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRE, GPIONumber);
 1233              		.loc 1 508 0
 1234 0080 1549     		ldr	r1, .L96
 1235 0082 154B     		ldr	r3, .L96
 1236 0084 5A6C     		ldr	r2, [r3, #68]
 1237 0086 3B68     		ldr	r3, [r7]
 1238 0088 DB43     		mvns	r3, r3
 1239 008a 1340     		ands	r3, r3, r2
 1240 008c 4B64     		str	r3, [r1, #68]
 509:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1241              		.loc 1 509 0
 1242 008e 1BE0     		b	.L94
 1243              	.L91:
 510:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_F:
 511:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRF, GPIONumber);
 1244              		.loc 1 511 0
 1245 0090 1149     		ldr	r1, .L96
 1246 0092 114B     		ldr	r3, .L96
 1247 0094 DA6C     		ldr	r2, [r3, #76]
 1248 0096 3B68     		ldr	r3, [r7]
 1249 0098 DB43     		mvns	r3, r3
 1250 009a 1340     		ands	r3, r3, r2
 1251 009c CB64     		str	r3, [r1, #76]
 512:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1252              		.loc 1 512 0
 1253 009e 13E0     		b	.L94
 1254              	.L92:
 513:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_G:
 514:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        CLEAR_BIT(PWR->PDCRG, GPIONumber);
 1255              		.loc 1 514 0
 1256 00a0 0D49     		ldr	r1, .L96
 1257 00a2 0D4B     		ldr	r3, .L96
 1258 00a4 5A6D     		ldr	r2, [r3, #84]
 1259 00a6 3B68     		ldr	r3, [r7]
 1260 00a8 DB43     		mvns	r3, r3
 1261 00aa 1340     		ands	r3, r3, r2
 1262 00ac 4B65     		str	r3, [r1, #84]
 515:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;
 1263              		.loc 1 515 0
 1264 00ae 0BE0     		b	.L94
 1265              	.L93:
 516:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_GPIO_H:
 517:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       CLEAR_BIT(PWR->PDCRH, (GPIONumber & PWR_PORTH_AVAILABLE_PINS));
 1266              		.loc 1 517 0
 1267 00b0 0949     		ldr	r1, .L96
 1268 00b2 094B     		ldr	r3, .L96
 1269 00b4 DA6D     		ldr	r2, [r3, #92]
 1270 00b6 3B68     		ldr	r3, [r7]
 1271 00b8 03F00303 		and	r3, r3, #3
 1272 00bc DB43     		mvns	r3, r3
 1273 00be 1340     		ands	r3, r3, r2
 1274 00c0 CB65     		str	r3, [r1, #92]
 518:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        break;                                                   
ARM GAS  /tmp/cceXXqTt.s 			page 32


 1275              		.loc 1 518 0
 1276 00c2 01E0     		b	.L94
 1277              	.L84:
 519:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 520:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         return HAL_ERROR;
 1278              		.loc 1 520 0
 1279 00c4 0123     		movs	r3, #1
 1280 00c6 00E0     		b	.L95
 1281              	.L94:
 521:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 522:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****        
 523:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 1282              		.loc 1 523 0
 1283 00c8 0023     		movs	r3, #0
 1284              	.L95:
 524:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1285              		.loc 1 524 0
 1286 00ca 1846     		mov	r0, r3
 1287 00cc 0C37     		adds	r7, r7, #12
 1288              	.LCFI65:
 1289              		.cfi_def_cfa_offset 4
 1290 00ce BD46     		mov	sp, r7
 1291              	.LCFI66:
 1292              		.cfi_def_cfa_register 13
 1293              		@ sp needed
 1294 00d0 5DF8047B 		ldr	r7, [sp], #4
 1295              	.LCFI67:
 1296              		.cfi_restore 7
 1297              		.cfi_def_cfa_offset 0
 1298 00d4 7047     		bx	lr
 1299              	.L97:
 1300 00d6 00BF     		.align	2
 1301              	.L96:
 1302 00d8 00700040 		.word	1073770496
 1303              		.cfi_endproc
 1304              	.LFE138:
 1306              		.section	.text.HAL_PWREx_EnablePullUpPullDownConfig,"ax",%progbits
 1307              		.align	2
 1308              		.global	HAL_PWREx_EnablePullUpPullDownConfig
 1309              		.thumb
 1310              		.thumb_func
 1312              	HAL_PWREx_EnablePullUpPullDownConfig:
 1313              	.LFB139:
 525:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 526:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 527:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 528:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 529:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable pull-up and pull-down configuration.
 530:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is set, the I/O pull-up and pull-down configurations defined in 
 531:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are applied in Standby and Shutdown modes.    
 532:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Pull-up set by PUy bit of PWR_PUCRx register is not activated if the corresponding
 533:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PDy bit of PWR_PDCRx register is also set (pull-down configuration priority is higher). 
 534:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() API's ensure there 
 535:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        is no conflict when setting PUy or PDy bit.         
 536:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 537:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 538:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePullUpPullDownConfig(void)
ARM GAS  /tmp/cceXXqTt.s 			page 33


 539:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1314              		.loc 1 539 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 0
 1317              		@ frame_needed = 1, uses_anonymous_args = 0
 1318              		@ link register save eliminated.
 1319 0000 80B4     		push	{r7}
 1320              	.LCFI68:
 1321              		.cfi_def_cfa_offset 4
 1322              		.cfi_offset 7, -4
 1323 0002 00AF     		add	r7, sp, #0
 1324              	.LCFI69:
 1325              		.cfi_def_cfa_register 7
 540:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_APC);
 1326              		.loc 1 540 0
 1327 0004 044A     		ldr	r2, .L99
 1328 0006 044B     		ldr	r3, .L99
 1329 0008 9B68     		ldr	r3, [r3, #8]
 1330 000a 43F48063 		orr	r3, r3, #1024
 1331 000e 9360     		str	r3, [r2, #8]
 541:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1332              		.loc 1 541 0
 1333 0010 BD46     		mov	sp, r7
 1334              	.LCFI70:
 1335              		.cfi_def_cfa_register 13
 1336              		@ sp needed
 1337 0012 5DF8047B 		ldr	r7, [sp], #4
 1338              	.LCFI71:
 1339              		.cfi_restore 7
 1340              		.cfi_def_cfa_offset 0
 1341 0016 7047     		bx	lr
 1342              	.L100:
 1343              		.align	2
 1344              	.L99:
 1345 0018 00700040 		.word	1073770496
 1346              		.cfi_endproc
 1347              	.LFE139:
 1349              		.section	.text.HAL_PWREx_DisablePullUpPullDownConfig,"ax",%progbits
 1350              		.align	2
 1351              		.global	HAL_PWREx_DisablePullUpPullDownConfig
 1352              		.thumb
 1353              		.thumb_func
 1355              	HAL_PWREx_DisablePullUpPullDownConfig:
 1356              	.LFB140:
 542:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 543:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 544:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 545:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable pull-up and pull-down configuration.
 546:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When APC bit is cleared, the I/O pull-up and pull-down configurations defined in 
 547:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PWR_PUCRx and PWR_PDCRx registers are not applied in Standby and Shutdown modes.     
 548:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 549:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 550:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePullUpPullDownConfig(void)
 551:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1357              		.loc 1 551 0
 1358              		.cfi_startproc
 1359              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cceXXqTt.s 			page 34


 1360              		@ frame_needed = 1, uses_anonymous_args = 0
 1361              		@ link register save eliminated.
 1362 0000 80B4     		push	{r7}
 1363              	.LCFI72:
 1364              		.cfi_def_cfa_offset 4
 1365              		.cfi_offset 7, -4
 1366 0002 00AF     		add	r7, sp, #0
 1367              	.LCFI73:
 1368              		.cfi_def_cfa_register 7
 552:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_APC);
 1369              		.loc 1 552 0
 1370 0004 044A     		ldr	r2, .L102
 1371 0006 044B     		ldr	r3, .L102
 1372 0008 9B68     		ldr	r3, [r3, #8]
 1373 000a 23F48063 		bic	r3, r3, #1024
 1374 000e 9360     		str	r3, [r2, #8]
 553:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1375              		.loc 1 553 0
 1376 0010 BD46     		mov	sp, r7
 1377              	.LCFI74:
 1378              		.cfi_def_cfa_register 13
 1379              		@ sp needed
 1380 0012 5DF8047B 		ldr	r7, [sp], #4
 1381              	.LCFI75:
 1382              		.cfi_restore 7
 1383              		.cfi_def_cfa_offset 0
 1384 0016 7047     		bx	lr
 1385              	.L103:
 1386              		.align	2
 1387              	.L102:
 1388 0018 00700040 		.word	1073770496
 1389              		.cfi_endproc
 1390              	.LFE140:
 1392              		.section	.text.HAL_PWREx_EnableSRAM2ContentRetention,"ax",%progbits
 1393              		.align	2
 1394              		.global	HAL_PWREx_EnableSRAM2ContentRetention
 1395              		.thumb
 1396              		.thumb_func
 1398              	HAL_PWREx_EnableSRAM2ContentRetention:
 1399              	.LFB141:
 554:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 555:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 556:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 557:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 558:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable SRAM2 content retention in Standby mode.
 559:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is set, SRAM2 is powered by the low-power regulator in 
 560:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         Standby mode and its content is kept.    
 561:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 562:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 563:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableSRAM2ContentRetention(void)
 564:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1400              		.loc 1 564 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405 0000 80B4     		push	{r7}
ARM GAS  /tmp/cceXXqTt.s 			page 35


 1406              	.LCFI76:
 1407              		.cfi_def_cfa_offset 4
 1408              		.cfi_offset 7, -4
 1409 0002 00AF     		add	r7, sp, #0
 1410              	.LCFI77:
 1411              		.cfi_def_cfa_register 7
 565:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR3, PWR_CR3_RRS);
 1412              		.loc 1 565 0
 1413 0004 044A     		ldr	r2, .L105
 1414 0006 044B     		ldr	r3, .L105
 1415 0008 9B68     		ldr	r3, [r3, #8]
 1416 000a 43F48073 		orr	r3, r3, #256
 1417 000e 9360     		str	r3, [r2, #8]
 566:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1418              		.loc 1 566 0
 1419 0010 BD46     		mov	sp, r7
 1420              	.LCFI78:
 1421              		.cfi_def_cfa_register 13
 1422              		@ sp needed
 1423 0012 5DF8047B 		ldr	r7, [sp], #4
 1424              	.LCFI79:
 1425              		.cfi_restore 7
 1426              		.cfi_def_cfa_offset 0
 1427 0016 7047     		bx	lr
 1428              	.L106:
 1429              		.align	2
 1430              	.L105:
 1431 0018 00700040 		.word	1073770496
 1432              		.cfi_endproc
 1433              	.LFE141:
 1435              		.section	.text.HAL_PWREx_DisableSRAM2ContentRetention,"ax",%progbits
 1436              		.align	2
 1437              		.global	HAL_PWREx_DisableSRAM2ContentRetention
 1438              		.thumb
 1439              		.thumb_func
 1441              	HAL_PWREx_DisableSRAM2ContentRetention:
 1442              	.LFB142:
 567:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 568:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 569:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 570:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable SRAM2 content retention in Standby mode.
 571:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When RRS bit is reset, SRAM2 is powered off in Standby mode 
 572:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        and its content is lost.      
 573:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 574:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 575:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisableSRAM2ContentRetention(void)
 576:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1443              		.loc 1 576 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 1448 0000 80B4     		push	{r7}
 1449              	.LCFI80:
 1450              		.cfi_def_cfa_offset 4
 1451              		.cfi_offset 7, -4
 1452 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/cceXXqTt.s 			page 36


 1453              	.LCFI81:
 1454              		.cfi_def_cfa_register 7
 577:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR3, PWR_CR3_RRS);
 1455              		.loc 1 577 0
 1456 0004 044A     		ldr	r2, .L108
 1457 0006 044B     		ldr	r3, .L108
 1458 0008 9B68     		ldr	r3, [r3, #8]
 1459 000a 23F48073 		bic	r3, r3, #256
 1460 000e 9360     		str	r3, [r2, #8]
 578:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1461              		.loc 1 578 0
 1462 0010 BD46     		mov	sp, r7
 1463              	.LCFI82:
 1464              		.cfi_def_cfa_register 13
 1465              		@ sp needed
 1466 0012 5DF8047B 		ldr	r7, [sp], #4
 1467              	.LCFI83:
 1468              		.cfi_restore 7
 1469              		.cfi_def_cfa_offset 0
 1470 0016 7047     		bx	lr
 1471              	.L109:
 1472              		.align	2
 1473              	.L108:
 1474 0018 00700040 		.word	1073770496
 1475              		.cfi_endproc
 1476              	.LFE142:
 1478              		.section	.text.HAL_PWREx_EnablePVM1,"ax",%progbits
 1479              		.align	2
 1480              		.global	HAL_PWREx_EnablePVM1
 1481              		.thumb
 1482              		.thumb_func
 1484              	HAL_PWREx_EnablePVM1:
 1485              	.LFB143:
 579:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 580:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 581:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 582:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 583:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32L486xx
 584:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 585:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 586:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 587:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 588:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM1(void)
 589:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1486              		.loc 1 589 0
 1487              		.cfi_startproc
 1488              		@ args = 0, pretend = 0, frame = 0
 1489              		@ frame_needed = 1, uses_anonymous_args = 0
 1490              		@ link register save eliminated.
 1491 0000 80B4     		push	{r7}
 1492              	.LCFI84:
 1493              		.cfi_def_cfa_offset 4
 1494              		.cfi_offset 7, -4
 1495 0002 00AF     		add	r7, sp, #0
 1496              	.LCFI85:
 1497              		.cfi_def_cfa_register 7
 590:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_1);    
ARM GAS  /tmp/cceXXqTt.s 			page 37


 1498              		.loc 1 590 0
 1499 0004 044A     		ldr	r2, .L111
 1500 0006 044B     		ldr	r3, .L111
 1501 0008 5B68     		ldr	r3, [r3, #4]
 1502 000a 43F01003 		orr	r3, r3, #16
 1503 000e 5360     		str	r3, [r2, #4]
 591:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1504              		.loc 1 591 0
 1505 0010 BD46     		mov	sp, r7
 1506              	.LCFI86:
 1507              		.cfi_def_cfa_register 13
 1508              		@ sp needed
 1509 0012 5DF8047B 		ldr	r7, [sp], #4
 1510              	.LCFI87:
 1511              		.cfi_restore 7
 1512              		.cfi_def_cfa_offset 0
 1513 0016 7047     		bx	lr
 1514              	.L112:
 1515              		.align	2
 1516              	.L111:
 1517 0018 00700040 		.word	1073770496
 1518              		.cfi_endproc
 1519              	.LFE143:
 1521              		.section	.text.HAL_PWREx_DisablePVM1,"ax",%progbits
 1522              		.align	2
 1523              		.global	HAL_PWREx_DisablePVM1
 1524              		.thumb
 1525              		.thumb_func
 1527              	HAL_PWREx_DisablePVM1:
 1528              	.LFB144:
 592:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 593:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 594:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 1: VDDUSB versus 1.2V.
 595:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 596:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 597:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM1(void)
 598:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1529              		.loc 1 598 0
 1530              		.cfi_startproc
 1531              		@ args = 0, pretend = 0, frame = 0
 1532              		@ frame_needed = 1, uses_anonymous_args = 0
 1533              		@ link register save eliminated.
 1534 0000 80B4     		push	{r7}
 1535              	.LCFI88:
 1536              		.cfi_def_cfa_offset 4
 1537              		.cfi_offset 7, -4
 1538 0002 00AF     		add	r7, sp, #0
 1539              	.LCFI89:
 1540              		.cfi_def_cfa_register 7
 599:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_1);    
 1541              		.loc 1 599 0
 1542 0004 044A     		ldr	r2, .L114
 1543 0006 044B     		ldr	r3, .L114
 1544 0008 5B68     		ldr	r3, [r3, #4]
 1545 000a 23F01003 		bic	r3, r3, #16
 1546 000e 5360     		str	r3, [r2, #4]
 600:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
ARM GAS  /tmp/cceXXqTt.s 			page 38


 1547              		.loc 1 600 0
 1548 0010 BD46     		mov	sp, r7
 1549              	.LCFI90:
 1550              		.cfi_def_cfa_register 13
 1551              		@ sp needed
 1552 0012 5DF8047B 		ldr	r7, [sp], #4
 1553              	.LCFI91:
 1554              		.cfi_restore 7
 1555              		.cfi_def_cfa_offset 0
 1556 0016 7047     		bx	lr
 1557              	.L115:
 1558              		.align	2
 1559              	.L114:
 1560 0018 00700040 		.word	1073770496
 1561              		.cfi_endproc
 1562              	.LFE144:
 1564              		.section	.text.HAL_PWREx_EnablePVM2,"ax",%progbits
 1565              		.align	2
 1566              		.global	HAL_PWREx_EnablePVM2
 1567              		.thumb
 1568              		.thumb_func
 1570              	HAL_PWREx_EnablePVM2:
 1571              	.LFB145:
 601:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32
 602:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 603:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 604:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 605:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 606:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 607:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM2(void)
 608:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1572              		.loc 1 608 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 1, uses_anonymous_args = 0
 1576              		@ link register save eliminated.
 1577 0000 80B4     		push	{r7}
 1578              	.LCFI92:
 1579              		.cfi_def_cfa_offset 4
 1580              		.cfi_offset 7, -4
 1581 0002 00AF     		add	r7, sp, #0
 1582              	.LCFI93:
 1583              		.cfi_def_cfa_register 7
 609:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_2);    
 1584              		.loc 1 609 0
 1585 0004 044A     		ldr	r2, .L117
 1586 0006 044B     		ldr	r3, .L117
 1587 0008 5B68     		ldr	r3, [r3, #4]
 1588 000a 43F02003 		orr	r3, r3, #32
 1589 000e 5360     		str	r3, [r2, #4]
 610:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1590              		.loc 1 610 0
 1591 0010 BD46     		mov	sp, r7
 1592              	.LCFI94:
 1593              		.cfi_def_cfa_register 13
 1594              		@ sp needed
 1595 0012 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cceXXqTt.s 			page 39


 1596              	.LCFI95:
 1597              		.cfi_restore 7
 1598              		.cfi_def_cfa_offset 0
 1599 0016 7047     		bx	lr
 1600              	.L118:
 1601              		.align	2
 1602              	.L117:
 1603 0018 00700040 		.word	1073770496
 1604              		.cfi_endproc
 1605              	.LFE145:
 1607              		.section	.text.HAL_PWREx_DisablePVM2,"ax",%progbits
 1608              		.align	2
 1609              		.global	HAL_PWREx_DisablePVM2
 1610              		.thumb
 1611              		.thumb_func
 1613              	HAL_PWREx_DisablePVM2:
 1614              	.LFB146:
 611:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 612:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 613:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 2: VDDIO2 versus 0.9V.
 614:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 615:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 616:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM2(void)
 617:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1615              		.loc 1 617 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 0
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620 0000 80B4     		push	{r7}
 1621              	.LCFI96:
 1622              		.cfi_def_cfa_offset 4
 1623              		.cfi_offset 7, -4
 1624 0002 00AF     		add	r7, sp, #0
 1625              	.LCFI97:
 1626              		.cfi_def_cfa_register 7
 618:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_2);    
 1627              		.loc 1 618 0
 1628 0004 044A     		ldr	r2, .L120
 1629 0006 044B     		ldr	r3, .L120
 1630 0008 5B68     		ldr	r3, [r3, #4]
 1631 000a 23F02003 		bic	r3, r3, #32
 1632 000e 5360     		str	r3, [r2, #4]
 619:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1633              		.loc 1 619 0
 1634 0010 BD46     		mov	sp, r7
 1635              	.LCFI98:
 1636              		.cfi_def_cfa_register 13
 1637              		@ sp needed
 1638 0012 5DF8047B 		ldr	r7, [sp], #4
 1639              	.LCFI99:
 1640              		.cfi_restore 7
 1641              		.cfi_def_cfa_offset 0
 1642 0016 7047     		bx	lr
 1643              	.L121:
 1644              		.align	2
 1645              	.L120:
ARM GAS  /tmp/cceXXqTt.s 			page 40


 1646 0018 00700040 		.word	1073770496
 1647              		.cfi_endproc
 1648              	.LFE146:
 1650              		.section	.text.HAL_PWREx_EnablePVM3,"ax",%progbits
 1651              		.align	2
 1652              		.global	HAL_PWREx_EnablePVM3
 1653              		.thumb
 1654              		.thumb_func
 1656              	HAL_PWREx_EnablePVM3:
 1657              	.LFB147:
 620:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 621:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 622:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 623:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 624:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 625:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 626:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM3(void)
 627:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1658              		.loc 1 627 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 1, uses_anonymous_args = 0
 1662              		@ link register save eliminated.
 1663 0000 80B4     		push	{r7}
 1664              	.LCFI100:
 1665              		.cfi_def_cfa_offset 4
 1666              		.cfi_offset 7, -4
 1667 0002 00AF     		add	r7, sp, #0
 1668              	.LCFI101:
 1669              		.cfi_def_cfa_register 7
 628:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_3);    
 1670              		.loc 1 628 0
 1671 0004 044A     		ldr	r2, .L123
 1672 0006 044B     		ldr	r3, .L123
 1673 0008 5B68     		ldr	r3, [r3, #4]
 1674 000a 43F04003 		orr	r3, r3, #64
 1675 000e 5360     		str	r3, [r2, #4]
 629:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1676              		.loc 1 629 0
 1677 0010 BD46     		mov	sp, r7
 1678              	.LCFI102:
 1679              		.cfi_def_cfa_register 13
 1680              		@ sp needed
 1681 0012 5DF8047B 		ldr	r7, [sp], #4
 1682              	.LCFI103:
 1683              		.cfi_restore 7
 1684              		.cfi_def_cfa_offset 0
 1685 0016 7047     		bx	lr
 1686              	.L124:
 1687              		.align	2
 1688              	.L123:
 1689 0018 00700040 		.word	1073770496
 1690              		.cfi_endproc
 1691              	.LFE147:
 1693              		.section	.text.HAL_PWREx_DisablePVM3,"ax",%progbits
 1694              		.align	2
 1695              		.global	HAL_PWREx_DisablePVM3
ARM GAS  /tmp/cceXXqTt.s 			page 41


 1696              		.thumb
 1697              		.thumb_func
 1699              	HAL_PWREx_DisablePVM3:
 1700              	.LFB148:
 630:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 631:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 632:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 3: VDDA versus 1.62V.
 633:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 634:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 635:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM3(void)
 636:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1701              		.loc 1 636 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 1, uses_anonymous_args = 0
 1705              		@ link register save eliminated.
 1706 0000 80B4     		push	{r7}
 1707              	.LCFI104:
 1708              		.cfi_def_cfa_offset 4
 1709              		.cfi_offset 7, -4
 1710 0002 00AF     		add	r7, sp, #0
 1711              	.LCFI105:
 1712              		.cfi_def_cfa_register 7
 637:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_3);    
 1713              		.loc 1 637 0
 1714 0004 044A     		ldr	r2, .L126
 1715 0006 044B     		ldr	r3, .L126
 1716 0008 5B68     		ldr	r3, [r3, #4]
 1717 000a 23F04003 		bic	r3, r3, #64
 1718 000e 5360     		str	r3, [r2, #4]
 638:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1719              		.loc 1 638 0
 1720 0010 BD46     		mov	sp, r7
 1721              	.LCFI106:
 1722              		.cfi_def_cfa_register 13
 1723              		@ sp needed
 1724 0012 5DF8047B 		ldr	r7, [sp], #4
 1725              	.LCFI107:
 1726              		.cfi_restore 7
 1727              		.cfi_def_cfa_offset 0
 1728 0016 7047     		bx	lr
 1729              	.L127:
 1730              		.align	2
 1731              	.L126:
 1732 0018 00700040 		.word	1073770496
 1733              		.cfi_endproc
 1734              	.LFE148:
 1736              		.section	.text.HAL_PWREx_EnablePVM4,"ax",%progbits
 1737              		.align	2
 1738              		.global	HAL_PWREx_EnablePVM4
 1739              		.thumb
 1740              		.thumb_func
 1742              	HAL_PWREx_EnablePVM4:
 1743              	.LFB149:
 639:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 640:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 641:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
ARM GAS  /tmp/cceXXqTt.s 			page 42


 642:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 643:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 644:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 645:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnablePVM4(void)
 646:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1744              		.loc 1 646 0
 1745              		.cfi_startproc
 1746              		@ args = 0, pretend = 0, frame = 0
 1747              		@ frame_needed = 1, uses_anonymous_args = 0
 1748              		@ link register save eliminated.
 1749 0000 80B4     		push	{r7}
 1750              	.LCFI108:
 1751              		.cfi_def_cfa_offset 4
 1752              		.cfi_offset 7, -4
 1753 0002 00AF     		add	r7, sp, #0
 1754              	.LCFI109:
 1755              		.cfi_def_cfa_register 7
 647:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR2, PWR_PVM_4);    
 1756              		.loc 1 647 0
 1757 0004 044A     		ldr	r2, .L129
 1758 0006 044B     		ldr	r3, .L129
 1759 0008 5B68     		ldr	r3, [r3, #4]
 1760 000a 43F08003 		orr	r3, r3, #128
 1761 000e 5360     		str	r3, [r2, #4]
 648:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1762              		.loc 1 648 0
 1763 0010 BD46     		mov	sp, r7
 1764              	.LCFI110:
 1765              		.cfi_def_cfa_register 13
 1766              		@ sp needed
 1767 0012 5DF8047B 		ldr	r7, [sp], #4
 1768              	.LCFI111:
 1769              		.cfi_restore 7
 1770              		.cfi_def_cfa_offset 0
 1771 0016 7047     		bx	lr
 1772              	.L130:
 1773              		.align	2
 1774              	.L129:
 1775 0018 00700040 		.word	1073770496
 1776              		.cfi_endproc
 1777              	.LFE149:
 1779              		.section	.text.HAL_PWREx_DisablePVM4,"ax",%progbits
 1780              		.align	2
 1781              		.global	HAL_PWREx_DisablePVM4
 1782              		.thumb
 1783              		.thumb_func
 1785              	HAL_PWREx_DisablePVM4:
 1786              	.LFB150:
 649:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 650:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 651:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Disable the Power Voltage Monitoring 4:  VDDA versus 2.2V.
 652:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 653:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 654:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_DisablePVM4(void)
 655:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 1787              		.loc 1 655 0
 1788              		.cfi_startproc
ARM GAS  /tmp/cceXXqTt.s 			page 43


 1789              		@ args = 0, pretend = 0, frame = 0
 1790              		@ frame_needed = 1, uses_anonymous_args = 0
 1791              		@ link register save eliminated.
 1792 0000 80B4     		push	{r7}
 1793              	.LCFI112:
 1794              		.cfi_def_cfa_offset 4
 1795              		.cfi_offset 7, -4
 1796 0002 00AF     		add	r7, sp, #0
 1797              	.LCFI113:
 1798              		.cfi_def_cfa_register 7
 656:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR2, PWR_PVM_4);    
 1799              		.loc 1 656 0
 1800 0004 044A     		ldr	r2, .L132
 1801 0006 044B     		ldr	r3, .L132
 1802 0008 5B68     		ldr	r3, [r3, #4]
 1803 000a 23F08003 		bic	r3, r3, #128
 1804 000e 5360     		str	r3, [r2, #4]
 657:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 1805              		.loc 1 657 0
 1806 0010 BD46     		mov	sp, r7
 1807              	.LCFI114:
 1808              		.cfi_def_cfa_register 13
 1809              		@ sp needed
 1810 0012 5DF8047B 		ldr	r7, [sp], #4
 1811              	.LCFI115:
 1812              		.cfi_restore 7
 1813              		.cfi_def_cfa_offset 0
 1814 0016 7047     		bx	lr
 1815              	.L133:
 1816              		.align	2
 1817              	.L132:
 1818 0018 00700040 		.word	1073770496
 1819              		.cfi_endproc
 1820              	.LFE150:
 1822              		.section	.text.HAL_PWREx_ConfigPVM,"ax",%progbits
 1823              		.align	2
 1824              		.global	HAL_PWREx_ConfigPVM
 1825              		.thumb
 1826              		.thumb_func
 1828              	HAL_PWREx_ConfigPVM:
 1829              	.LFB151:
 658:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 659:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 660:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 661:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 662:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 663:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Configure the Peripheral Voltage Monitoring (PVM).
 664:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param sConfigPVM: pointer to a PWR_PVMTypeDef structure that contains the
 665:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        PVM configuration information.
 666:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note The API configures a single PVM according to the information contained 
 667:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       in the input structure. To configure several PVMs, the API must be singly 
 668:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *       called for each PVM used.
 669:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 670:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         more details about the voltage thresholds corresponding to each
 671:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         detection level and to each monitored supply.
 672:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL status
 673:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
ARM GAS  /tmp/cceXXqTt.s 			page 44


 674:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_ConfigPVM(PWR_PVMTypeDef *sConfigPVM)
 675:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {  
 1830              		.loc 1 675 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 8
 1833              		@ frame_needed = 1, uses_anonymous_args = 0
 1834              		@ link register save eliminated.
 1835 0000 80B4     		push	{r7}
 1836              	.LCFI116:
 1837              		.cfi_def_cfa_offset 4
 1838              		.cfi_offset 7, -4
 1839 0002 83B0     		sub	sp, sp, #12
 1840              	.LCFI117:
 1841              		.cfi_def_cfa_offset 16
 1842 0004 00AF     		add	r7, sp, #0
 1843              	.LCFI118:
 1844              		.cfi_def_cfa_register 7
 1845 0006 7860     		str	r0, [r7, #4]
 676:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 677:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_TYPE(sConfigPVM->PVMType));
 678:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_PVM_MODE(sConfigPVM->Mode));
 679:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 680:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 681:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Configure EXTI 35 to 38 interrupts if so required:
 682:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      scan thru PVMType to detect which PVMx is set and
 683:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****      configure the corresponding EXTI line accordingly. */
 684:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   switch (sConfigPVM->PVMType)
 1846              		.loc 1 684 0
 1847 0008 7B68     		ldr	r3, [r7, #4]
 1848 000a 1B68     		ldr	r3, [r3]
 1849 000c 202B     		cmp	r3, #32
 1850 000e 55D0     		beq	.L136
 1851 0010 202B     		cmp	r3, #32
 1852 0012 02D8     		bhi	.L137
 1853 0014 102B     		cmp	r3, #16
 1854 0016 07D0     		beq	.L138
 1855 0018 2EE1     		b	.L135
 1856              	.L137:
 1857 001a 402B     		cmp	r3, #64
 1858 001c 00F09880 		beq	.L139
 1859 0020 802B     		cmp	r3, #128
 1860 0022 00F0DF80 		beq	.L140
 1861 0026 27E1     		b	.L135
 1862              	.L138:
 685:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 686:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32L486xx
 687:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_1:
 688:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 689:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_EVENT();
 1863              		.loc 1 689 0
 1864 0028 984A     		ldr	r2, .L159
 1865 002a 984B     		ldr	r3, .L159
 1866 002c 5B6A     		ldr	r3, [r3, #36]
 1867 002e 23F00803 		bic	r3, r3, #8
 1868 0032 5362     		str	r3, [r2, #36]
 690:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_IT();
 1869              		.loc 1 690 0
ARM GAS  /tmp/cceXXqTt.s 			page 45


 1870 0034 954A     		ldr	r2, .L159
 1871 0036 954B     		ldr	r3, .L159
 1872 0038 1B6A     		ldr	r3, [r3, #32]
 1873 003a 23F00803 		bic	r3, r3, #8
 1874 003e 1362     		str	r3, [r2, #32]
 691:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_FALLING_EDGE(); 
 1875              		.loc 1 691 0
 1876 0040 924A     		ldr	r2, .L159
 1877 0042 924B     		ldr	r3, .L159
 1878 0044 DB6A     		ldr	r3, [r3, #44]
 1879 0046 23F00803 		bic	r3, r3, #8
 1880 004a D362     		str	r3, [r2, #44]
 692:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM1_EXTI_DISABLE_RISING_EDGE();
 1881              		.loc 1 692 0
 1882 004c 8F4A     		ldr	r2, .L159
 1883 004e 8F4B     		ldr	r3, .L159
 1884 0050 9B6A     		ldr	r3, [r3, #40]
 1885 0052 23F00803 		bic	r3, r3, #8
 1886 0056 9362     		str	r3, [r2, #40]
 693:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 694:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 695:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1887              		.loc 1 695 0
 1888 0058 7B68     		ldr	r3, [r7, #4]
 1889 005a 5B68     		ldr	r3, [r3, #4]
 1890 005c 03F48033 		and	r3, r3, #65536
 1891 0060 002B     		cmp	r3, #0
 1892 0062 05D0     		beq	.L141
 696:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 697:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_IT();
 1893              		.loc 1 697 0
 1894 0064 894A     		ldr	r2, .L159
 1895 0066 894B     		ldr	r3, .L159
 1896 0068 1B6A     		ldr	r3, [r3, #32]
 1897 006a 43F00803 		orr	r3, r3, #8
 1898 006e 1362     		str	r3, [r2, #32]
 1899              	.L141:
 698:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 699:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 700:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 701:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1900              		.loc 1 701 0
 1901 0070 7B68     		ldr	r3, [r7, #4]
 1902 0072 5B68     		ldr	r3, [r3, #4]
 1903 0074 03F40033 		and	r3, r3, #131072
 1904 0078 002B     		cmp	r3, #0
 1905 007a 05D0     		beq	.L142
 702:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 703:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_EVENT();
 1906              		.loc 1 703 0
 1907 007c 834A     		ldr	r2, .L159
 1908 007e 834B     		ldr	r3, .L159
 1909 0080 5B6A     		ldr	r3, [r3, #36]
 1910 0082 43F00803 		orr	r3, r3, #8
 1911 0086 5362     		str	r3, [r2, #36]
 1912              	.L142:
 704:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
ARM GAS  /tmp/cceXXqTt.s 			page 46


 705:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 706:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 707:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1913              		.loc 1 707 0
 1914 0088 7B68     		ldr	r3, [r7, #4]
 1915 008a 5B68     		ldr	r3, [r3, #4]
 1916 008c 03F00103 		and	r3, r3, #1
 1917 0090 002B     		cmp	r3, #0
 1918 0092 05D0     		beq	.L143
 708:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 709:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_RISING_EDGE();
 1919              		.loc 1 709 0
 1920 0094 7D4A     		ldr	r2, .L159
 1921 0096 7D4B     		ldr	r3, .L159
 1922 0098 9B6A     		ldr	r3, [r3, #40]
 1923 009a 43F00803 		orr	r3, r3, #8
 1924 009e 9362     		str	r3, [r2, #40]
 1925              	.L143:
 710:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 711:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 712:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 1926              		.loc 1 712 0
 1927 00a0 7B68     		ldr	r3, [r7, #4]
 1928 00a2 5B68     		ldr	r3, [r3, #4]
 1929 00a4 03F00203 		and	r3, r3, #2
 1930 00a8 002B     		cmp	r3, #0
 1931 00aa 06D0     		beq	.L144
 713:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 714:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM1_EXTI_ENABLE_FALLING_EDGE();
 1932              		.loc 1 714 0
 1933 00ac 774A     		ldr	r2, .L159
 1934 00ae 774B     		ldr	r3, .L159
 1935 00b0 DB6A     		ldr	r3, [r3, #44]
 1936 00b2 43F00803 		orr	r3, r3, #8
 1937 00b6 D362     		str	r3, [r2, #44]
 715:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 716:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break; 
 1938              		.loc 1 716 0
 1939 00b8 E0E0     		b	.L145
 1940              	.L144:
 1941 00ba DFE0     		b	.L145
 1942              	.L136:
 717:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32
 718:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 719:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_2:
 720:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 721:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_EVENT();
 1943              		.loc 1 721 0
 1944 00bc 734A     		ldr	r2, .L159
 1945 00be 734B     		ldr	r3, .L159
 1946 00c0 5B6A     		ldr	r3, [r3, #36]
 1947 00c2 23F01003 		bic	r3, r3, #16
 1948 00c6 5362     		str	r3, [r2, #36]
 722:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_IT();
 1949              		.loc 1 722 0
 1950 00c8 704A     		ldr	r2, .L159
 1951 00ca 704B     		ldr	r3, .L159
ARM GAS  /tmp/cceXXqTt.s 			page 47


 1952 00cc 1B6A     		ldr	r3, [r3, #32]
 1953 00ce 23F01003 		bic	r3, r3, #16
 1954 00d2 1362     		str	r3, [r2, #32]
 723:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_FALLING_EDGE(); 
 1955              		.loc 1 723 0
 1956 00d4 6D4A     		ldr	r2, .L159
 1957 00d6 6D4B     		ldr	r3, .L159
 1958 00d8 DB6A     		ldr	r3, [r3, #44]
 1959 00da 23F01003 		bic	r3, r3, #16
 1960 00de D362     		str	r3, [r2, #44]
 724:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM2_EXTI_DISABLE_RISING_EDGE();
 1961              		.loc 1 724 0
 1962 00e0 6A4A     		ldr	r2, .L159
 1963 00e2 6A4B     		ldr	r3, .L159
 1964 00e4 9B6A     		ldr	r3, [r3, #40]
 1965 00e6 23F01003 		bic	r3, r3, #16
 1966 00ea 9362     		str	r3, [r2, #40]
 725:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 726:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 727:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 1967              		.loc 1 727 0
 1968 00ec 7B68     		ldr	r3, [r7, #4]
 1969 00ee 5B68     		ldr	r3, [r3, #4]
 1970 00f0 03F48033 		and	r3, r3, #65536
 1971 00f4 002B     		cmp	r3, #0
 1972 00f6 05D0     		beq	.L146
 728:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 729:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_IT();
 1973              		.loc 1 729 0
 1974 00f8 644A     		ldr	r2, .L159
 1975 00fa 644B     		ldr	r3, .L159
 1976 00fc 1B6A     		ldr	r3, [r3, #32]
 1977 00fe 43F01003 		orr	r3, r3, #16
 1978 0102 1362     		str	r3, [r2, #32]
 1979              	.L146:
 730:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 731:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 732:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 733:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 1980              		.loc 1 733 0
 1981 0104 7B68     		ldr	r3, [r7, #4]
 1982 0106 5B68     		ldr	r3, [r3, #4]
 1983 0108 03F40033 		and	r3, r3, #131072
 1984 010c 002B     		cmp	r3, #0
 1985 010e 05D0     		beq	.L147
 734:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 735:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_EVENT();
 1986              		.loc 1 735 0
 1987 0110 5E4A     		ldr	r2, .L159
 1988 0112 5E4B     		ldr	r3, .L159
 1989 0114 5B6A     		ldr	r3, [r3, #36]
 1990 0116 43F01003 		orr	r3, r3, #16
 1991 011a 5362     		str	r3, [r2, #36]
 1992              	.L147:
 736:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 737:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 738:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
ARM GAS  /tmp/cceXXqTt.s 			page 48


 739:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 1993              		.loc 1 739 0
 1994 011c 7B68     		ldr	r3, [r7, #4]
 1995 011e 5B68     		ldr	r3, [r3, #4]
 1996 0120 03F00103 		and	r3, r3, #1
 1997 0124 002B     		cmp	r3, #0
 1998 0126 05D0     		beq	.L148
 740:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 741:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_RISING_EDGE();
 1999              		.loc 1 741 0
 2000 0128 584A     		ldr	r2, .L159
 2001 012a 584B     		ldr	r3, .L159
 2002 012c 9B6A     		ldr	r3, [r3, #40]
 2003 012e 43F01003 		orr	r3, r3, #16
 2004 0132 9362     		str	r3, [r2, #40]
 2005              	.L148:
 742:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 743:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 744:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2006              		.loc 1 744 0
 2007 0134 7B68     		ldr	r3, [r7, #4]
 2008 0136 5B68     		ldr	r3, [r3, #4]
 2009 0138 03F00203 		and	r3, r3, #2
 2010 013c 002B     		cmp	r3, #0
 2011 013e 06D0     		beq	.L149
 745:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 746:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM2_EXTI_ENABLE_FALLING_EDGE();
 2012              		.loc 1 746 0
 2013 0140 524A     		ldr	r2, .L159
 2014 0142 524B     		ldr	r3, .L159
 2015 0144 DB6A     		ldr	r3, [r3, #44]
 2016 0146 43F01003 		orr	r3, r3, #16
 2017 014a D362     		str	r3, [r2, #44]
 747:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 748:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 2018              		.loc 1 748 0
 2019 014c 96E0     		b	.L145
 2020              	.L149:
 2021 014e 95E0     		b	.L145
 2022              	.L139:
 749:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 750:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_3:
 751:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 752:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_EVENT();
 2023              		.loc 1 752 0
 2024 0150 4E4A     		ldr	r2, .L159
 2025 0152 4E4B     		ldr	r3, .L159
 2026 0154 5B6A     		ldr	r3, [r3, #36]
 2027 0156 23F02003 		bic	r3, r3, #32
 2028 015a 5362     		str	r3, [r2, #36]
 753:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_IT();
 2029              		.loc 1 753 0
 2030 015c 4B4A     		ldr	r2, .L159
 2031 015e 4B4B     		ldr	r3, .L159
 2032 0160 1B6A     		ldr	r3, [r3, #32]
 2033 0162 23F02003 		bic	r3, r3, #32
 2034 0166 1362     		str	r3, [r2, #32]
ARM GAS  /tmp/cceXXqTt.s 			page 49


 754:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_FALLING_EDGE(); 
 2035              		.loc 1 754 0
 2036 0168 484A     		ldr	r2, .L159
 2037 016a 484B     		ldr	r3, .L159
 2038 016c DB6A     		ldr	r3, [r3, #44]
 2039 016e 23F02003 		bic	r3, r3, #32
 2040 0172 D362     		str	r3, [r2, #44]
 755:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM3_EXTI_DISABLE_RISING_EDGE();
 2041              		.loc 1 755 0
 2042 0174 454A     		ldr	r2, .L159
 2043 0176 454B     		ldr	r3, .L159
 2044 0178 9B6A     		ldr	r3, [r3, #40]
 2045 017a 23F02003 		bic	r3, r3, #32
 2046 017e 9362     		str	r3, [r2, #40]
 756:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 757:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 758:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2047              		.loc 1 758 0
 2048 0180 7B68     		ldr	r3, [r7, #4]
 2049 0182 5B68     		ldr	r3, [r3, #4]
 2050 0184 03F48033 		and	r3, r3, #65536
 2051 0188 002B     		cmp	r3, #0
 2052 018a 05D0     		beq	.L150
 759:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 760:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_IT();
 2053              		.loc 1 760 0
 2054 018c 3F4A     		ldr	r2, .L159
 2055 018e 3F4B     		ldr	r3, .L159
 2056 0190 1B6A     		ldr	r3, [r3, #32]
 2057 0192 43F02003 		orr	r3, r3, #32
 2058 0196 1362     		str	r3, [r2, #32]
 2059              	.L150:
 761:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 762:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 763:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 764:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2060              		.loc 1 764 0
 2061 0198 7B68     		ldr	r3, [r7, #4]
 2062 019a 5B68     		ldr	r3, [r3, #4]
 2063 019c 03F40033 		and	r3, r3, #131072
 2064 01a0 002B     		cmp	r3, #0
 2065 01a2 05D0     		beq	.L151
 765:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 766:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_EVENT();
 2066              		.loc 1 766 0
 2067 01a4 394A     		ldr	r2, .L159
 2068 01a6 394B     		ldr	r3, .L159
 2069 01a8 5B6A     		ldr	r3, [r3, #36]
 2070 01aa 43F02003 		orr	r3, r3, #32
 2071 01ae 5362     		str	r3, [r2, #36]
 2072              	.L151:
 767:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 768:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 769:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 770:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2073              		.loc 1 770 0
 2074 01b0 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cceXXqTt.s 			page 50


 2075 01b2 5B68     		ldr	r3, [r3, #4]
 2076 01b4 03F00103 		and	r3, r3, #1
 2077 01b8 002B     		cmp	r3, #0
 2078 01ba 05D0     		beq	.L152
 771:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 772:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_RISING_EDGE();
 2079              		.loc 1 772 0
 2080 01bc 334A     		ldr	r2, .L159
 2081 01be 334B     		ldr	r3, .L159
 2082 01c0 9B6A     		ldr	r3, [r3, #40]
 2083 01c2 43F02003 		orr	r3, r3, #32
 2084 01c6 9362     		str	r3, [r2, #40]
 2085              	.L152:
 773:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 774:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 775:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2086              		.loc 1 775 0
 2087 01c8 7B68     		ldr	r3, [r7, #4]
 2088 01ca 5B68     		ldr	r3, [r3, #4]
 2089 01cc 03F00203 		and	r3, r3, #2
 2090 01d0 002B     		cmp	r3, #0
 2091 01d2 06D0     		beq	.L153
 776:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 777:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM3_EXTI_ENABLE_FALLING_EDGE();
 2092              		.loc 1 777 0
 2093 01d4 2D4A     		ldr	r2, .L159
 2094 01d6 2D4B     		ldr	r3, .L159
 2095 01d8 DB6A     		ldr	r3, [r3, #44]
 2096 01da 43F02003 		orr	r3, r3, #32
 2097 01de D362     		str	r3, [r2, #44]
 778:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 779:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;
 2098              		.loc 1 779 0
 2099 01e0 4CE0     		b	.L145
 2100              	.L153:
 2101 01e2 4BE0     		b	.L145
 2102              	.L140:
 780:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 781:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     case PWR_PVM_4:
 782:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 783:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_EVENT();
 2103              		.loc 1 783 0
 2104 01e4 294A     		ldr	r2, .L159
 2105 01e6 294B     		ldr	r3, .L159
 2106 01e8 5B6A     		ldr	r3, [r3, #36]
 2107 01ea 23F04003 		bic	r3, r3, #64
 2108 01ee 5362     		str	r3, [r2, #36]
 784:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_IT();
 2109              		.loc 1 784 0
 2110 01f0 264A     		ldr	r2, .L159
 2111 01f2 264B     		ldr	r3, .L159
 2112 01f4 1B6A     		ldr	r3, [r3, #32]
 2113 01f6 23F04003 		bic	r3, r3, #64
 2114 01fa 1362     		str	r3, [r2, #32]
 785:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_FALLING_EDGE(); 
 2115              		.loc 1 785 0
 2116 01fc 234A     		ldr	r2, .L159
ARM GAS  /tmp/cceXXqTt.s 			page 51


 2117 01fe 234B     		ldr	r3, .L159
 2118 0200 DB6A     		ldr	r3, [r3, #44]
 2119 0202 23F04003 		bic	r3, r3, #64
 2120 0206 D362     		str	r3, [r2, #44]
 786:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       __HAL_PWR_PVM4_EXTI_DISABLE_RISING_EDGE();
 2121              		.loc 1 786 0
 2122 0208 204A     		ldr	r2, .L159
 2123 020a 204B     		ldr	r3, .L159
 2124 020c 9B6A     		ldr	r3, [r3, #40]
 2125 020e 23F04003 		bic	r3, r3, #64
 2126 0212 9362     		str	r3, [r2, #40]
 787:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 788:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure interrupt mode */
 789:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_IT) == PVM_MODE_IT)
 2127              		.loc 1 789 0
 2128 0214 7B68     		ldr	r3, [r7, #4]
 2129 0216 5B68     		ldr	r3, [r3, #4]
 2130 0218 03F48033 		and	r3, r3, #65536
 2131 021c 002B     		cmp	r3, #0
 2132 021e 05D0     		beq	.L154
 790:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 791:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_IT();
 2133              		.loc 1 791 0
 2134 0220 1A4A     		ldr	r2, .L159
 2135 0222 1A4B     		ldr	r3, .L159
 2136 0224 1B6A     		ldr	r3, [r3, #32]
 2137 0226 43F04003 		orr	r3, r3, #64
 2138 022a 1362     		str	r3, [r2, #32]
 2139              	.L154:
 792:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 793:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 794:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure event mode */
 795:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_MODE_EVT) == PVM_MODE_EVT)
 2140              		.loc 1 795 0
 2141 022c 7B68     		ldr	r3, [r7, #4]
 2142 022e 5B68     		ldr	r3, [r3, #4]
 2143 0230 03F40033 		and	r3, r3, #131072
 2144 0234 002B     		cmp	r3, #0
 2145 0236 05D0     		beq	.L155
 796:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 797:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_EVENT();
 2146              		.loc 1 797 0
 2147 0238 144A     		ldr	r2, .L159
 2148 023a 144B     		ldr	r3, .L159
 2149 023c 5B6A     		ldr	r3, [r3, #36]
 2150 023e 43F04003 		orr	r3, r3, #64
 2151 0242 5362     		str	r3, [r2, #36]
 2152              	.L155:
 798:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 799:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 800:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       /* Configure the edge */
 801:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_RISING_EDGE) == PVM_RISING_EDGE)
 2153              		.loc 1 801 0
 2154 0244 7B68     		ldr	r3, [r7, #4]
 2155 0246 5B68     		ldr	r3, [r3, #4]
 2156 0248 03F00103 		and	r3, r3, #1
 2157 024c 002B     		cmp	r3, #0
ARM GAS  /tmp/cceXXqTt.s 			page 52


 2158 024e 05D0     		beq	.L156
 802:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 803:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_RISING_EDGE();
 2159              		.loc 1 803 0
 2160 0250 0E4A     		ldr	r2, .L159
 2161 0252 0E4B     		ldr	r3, .L159
 2162 0254 9B6A     		ldr	r3, [r3, #40]
 2163 0256 43F04003 		orr	r3, r3, #64
 2164 025a 9362     		str	r3, [r2, #40]
 2165              	.L156:
 804:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 805:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 806:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       if((sConfigPVM->Mode & PVM_FALLING_EDGE) == PVM_FALLING_EDGE)
 2166              		.loc 1 806 0
 2167 025c 7B68     		ldr	r3, [r7, #4]
 2168 025e 5B68     		ldr	r3, [r3, #4]
 2169 0260 03F00203 		and	r3, r3, #2
 2170 0264 002B     		cmp	r3, #0
 2171 0266 06D0     		beq	.L157
 807:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       {
 808:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****         __HAL_PWR_PVM4_EXTI_ENABLE_FALLING_EDGE();
 2172              		.loc 1 808 0
 2173 0268 084A     		ldr	r2, .L159
 2174 026a 084B     		ldr	r3, .L159
 2175 026c DB6A     		ldr	r3, [r3, #44]
 2176 026e 43F04003 		orr	r3, r3, #64
 2177 0272 D362     		str	r3, [r2, #44]
 809:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       }
 810:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       break;  
 2178              		.loc 1 810 0
 2179 0274 02E0     		b	.L145
 2180              	.L157:
 2181 0276 01E0     		b	.L145
 2182              	.L135:
 811:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       
 812:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     default:
 813:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****       return HAL_ERROR;                      
 2183              		.loc 1 813 0
 2184 0278 0123     		movs	r3, #1
 2185 027a 00E0     		b	.L158
 2186              	.L145:
 814:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 815:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }   
 816:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 817:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 818:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 2187              		.loc 1 818 0
 2188 027c 0023     		movs	r3, #0
 2189              	.L158:
 819:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2190              		.loc 1 819 0
 2191 027e 1846     		mov	r0, r3
 2192 0280 0C37     		adds	r7, r7, #12
 2193              	.LCFI119:
 2194              		.cfi_def_cfa_offset 4
 2195 0282 BD46     		mov	sp, r7
 2196              	.LCFI120:
ARM GAS  /tmp/cceXXqTt.s 			page 53


 2197              		.cfi_def_cfa_register 13
 2198              		@ sp needed
 2199 0284 5DF8047B 		ldr	r7, [sp], #4
 2200              	.LCFI121:
 2201              		.cfi_restore 7
 2202              		.cfi_def_cfa_offset 0
 2203 0288 7047     		bx	lr
 2204              	.L160:
 2205 028a 00BF     		.align	2
 2206              	.L159:
 2207 028c 00040140 		.word	1073808384
 2208              		.cfi_endproc
 2209              	.LFE151:
 2211              		.section	.text.HAL_PWREx_EnableLowPowerRunMode,"ax",%progbits
 2212              		.align	2
 2213              		.global	HAL_PWREx_EnableLowPowerRunMode
 2214              		.thumb
 2215              		.thumb_func
 2217              	HAL_PWREx_EnableLowPowerRunMode:
 2218              	.LFB152:
 820:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 821:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 822:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 823:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 824:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Low-power Run mode
 825:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Low-power Run mode, all I/O pins keep the same state as in Run mode.  
 826:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When Regulator is set to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 827:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Flash in power-down monde in setting the RUN_PD bit in FLASH_ACR register.
 828:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 829:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Setting RUN_PD in FLASH_ACR then appropriately reducing the clock frequency must 
 830:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        be done before calling HAL_PWREx_EnableLowPowerRunMode() API.     
 831:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 832:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 833:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnableLowPowerRunMode(void)
 834:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2219              		.loc 1 834 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 1, uses_anonymous_args = 0
 2223              		@ link register save eliminated.
 2224 0000 80B4     		push	{r7}
 2225              	.LCFI122:
 2226              		.cfi_def_cfa_offset 4
 2227              		.cfi_offset 7, -4
 2228 0002 00AF     		add	r7, sp, #0
 2229              	.LCFI123:
 2230              		.cfi_def_cfa_register 7
 835:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Regulator parameter */
 836:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(PWR->CR1, PWR_CR1_LPR); 
 2231              		.loc 1 836 0
 2232 0004 044A     		ldr	r2, .L162
 2233 0006 044B     		ldr	r3, .L162
 2234 0008 1B68     		ldr	r3, [r3]
 2235 000a 43F48043 		orr	r3, r3, #16384
 2236 000e 1360     		str	r3, [r2]
 837:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2237              		.loc 1 837 0
ARM GAS  /tmp/cceXXqTt.s 			page 54


 2238 0010 BD46     		mov	sp, r7
 2239              	.LCFI124:
 2240              		.cfi_def_cfa_register 13
 2241              		@ sp needed
 2242 0012 5DF8047B 		ldr	r7, [sp], #4
 2243              	.LCFI125:
 2244              		.cfi_restore 7
 2245              		.cfi_def_cfa_offset 0
 2246 0016 7047     		bx	lr
 2247              	.L163:
 2248              		.align	2
 2249              	.L162:
 2250 0018 00700040 		.word	1073770496
 2251              		.cfi_endproc
 2252              	.LFE152:
 2254              		.section	.text.HAL_PWREx_DisableLowPowerRunMode,"ax",%progbits
 2255              		.align	2
 2256              		.global	HAL_PWREx_DisableLowPowerRunMode
 2257              		.thumb
 2258              		.thumb_func
 2260              	HAL_PWREx_DisableLowPowerRunMode:
 2261              	.LFB153:
 838:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 839:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 840:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 841:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Exit Low-power Run mode.
 842:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  Before HAL_PWREx_DisableLowPowerRunMode() completion, the function checks that 
 843:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        REGLPF has been properly reset (otherwise, HAL_PWREx_DisableLowPowerRunMode 
 844:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        returns HAL_TIMEOUT status). The system clock frequency can then be
 845:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        increased above 2 MHz.   
 846:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval HAL Status
 847:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 848:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** HAL_StatusTypeDef HAL_PWREx_DisableLowPowerRunMode(void)
 849:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2262              		.loc 1 849 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266              		@ link register save eliminated.
 2267 0000 80B4     		push	{r7}
 2268              	.LCFI126:
 2269              		.cfi_def_cfa_offset 4
 2270              		.cfi_offset 7, -4
 2271 0002 83B0     		sub	sp, sp, #12
 2272              	.LCFI127:
 2273              		.cfi_def_cfa_offset 16
 2274 0004 00AF     		add	r7, sp, #0
 2275              	.LCFI128:
 2276              		.cfi_def_cfa_register 7
 850:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   uint32_t wait_loop_index = 0;
 2277              		.loc 1 850 0
 2278 0006 0023     		movs	r3, #0
 2279 0008 7B60     		str	r3, [r7, #4]
 851:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
 852:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Clear LPR bit */
 853:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_LPR); 
 2280              		.loc 1 853 0
ARM GAS  /tmp/cceXXqTt.s 			page 55


 2281 000a 164A     		ldr	r2, .L170
 2282 000c 154B     		ldr	r3, .L170
 2283 000e 1B68     		ldr	r3, [r3]
 2284 0010 23F48043 		bic	r3, r3, #16384
 2285 0014 1360     		str	r3, [r2]
 854:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 855:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Wait until REGLPF is reset */
 856:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   wait_loop_index = (PWR_FLAG_SETTING_DELAY_US * (SystemCoreClock / 1000000));
 2286              		.loc 1 856 0
 2287 0016 144B     		ldr	r3, .L170+4
 2288 0018 1B68     		ldr	r3, [r3]
 2289 001a 144A     		ldr	r2, .L170+8
 2290 001c A2FB0323 		umull	r2, r3, r2, r3
 2291 0020 9B0C     		lsrs	r3, r3, #18
 2292 0022 3222     		movs	r2, #50
 2293 0024 02FB03F3 		mul	r3, r2, r3
 2294 0028 7B60     		str	r3, [r7, #4]
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 2295              		.loc 1 857 0
 2296 002a 02E0     		b	.L165
 2297              	.L167:
 858:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 859:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     wait_loop_index--;
 2298              		.loc 1 859 0
 2299 002c 7B68     		ldr	r3, [r7, #4]
 2300 002e 013B     		subs	r3, r3, #1
 2301 0030 7B60     		str	r3, [r7, #4]
 2302              	.L165:
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 2303              		.loc 1 857 0
 2304 0032 7B68     		ldr	r3, [r7, #4]
 2305 0034 002B     		cmp	r3, #0
 2306 0036 05D0     		beq	.L166
 857:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   while ((wait_loop_index != 0) && (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF)))
 2307              		.loc 1 857 0 is_stmt 0 discriminator 1
 2308 0038 0A4B     		ldr	r3, .L170
 2309 003a 5B69     		ldr	r3, [r3, #20]
 2310 003c 03F40073 		and	r3, r3, #512
 2311 0040 002B     		cmp	r3, #0
 2312 0042 F3D1     		bne	.L167
 2313              	.L166:
 860:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 861:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 2314              		.loc 1 861 0 is_stmt 1
 2315 0044 074B     		ldr	r3, .L170
 2316 0046 5B69     		ldr	r3, [r3, #20]
 2317 0048 03F40073 		and	r3, r3, #512
 2318 004c 002B     		cmp	r3, #0
 2319 004e 01D0     		beq	.L168
 862:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 863:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     return HAL_TIMEOUT;
 2320              		.loc 1 863 0
 2321 0050 0323     		movs	r3, #3
 2322 0052 00E0     		b	.L169
 2323              	.L168:
 864:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 865:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
ARM GAS  /tmp/cceXXqTt.s 			page 56


 866:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   return HAL_OK;
 2324              		.loc 1 866 0
 2325 0054 0023     		movs	r3, #0
 2326              	.L169:
 867:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2327              		.loc 1 867 0
 2328 0056 1846     		mov	r0, r3
 2329 0058 0C37     		adds	r7, r7, #12
 2330              	.LCFI129:
 2331              		.cfi_def_cfa_offset 4
 2332 005a BD46     		mov	sp, r7
 2333              	.LCFI130:
 2334              		.cfi_def_cfa_register 13
 2335              		@ sp needed
 2336 005c 5DF8047B 		ldr	r7, [sp], #4
 2337              	.LCFI131:
 2338              		.cfi_restore 7
 2339              		.cfi_def_cfa_offset 0
 2340 0060 7047     		bx	lr
 2341              	.L171:
 2342 0062 00BF     		.align	2
 2343              	.L170:
 2344 0064 00700040 		.word	1073770496
 2345 0068 00000000 		.word	SystemCoreClock
 2346 006c 83DE1B43 		.word	1125899907
 2347              		.cfi_endproc
 2348              	.LFE153:
 2350              		.section	.text.HAL_PWREx_EnterSTOP1Mode,"ax",%progbits
 2351              		.align	2
 2352              		.global	HAL_PWREx_EnterSTOP1Mode
 2353              		.thumb
 2354              		.thumb_func
 2356              	HAL_PWREx_EnterSTOP1Mode:
 2357              	.LFB154:
 868:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 869:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 870:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 871:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 1 mode.
 872:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 1 mode, all I/O pins keep the same state as in Run mode.
 873:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI, 
 874:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 875:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 876:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 877:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        only to the peripheral requesting it.
 878:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 879:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.
 880:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The voltage regulator can be configured either in normal or low-power mode.  
 881:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 1 mode by issuing an interrupt or a wakeup event,
 882:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 883:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.  
 884:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When the voltage regulator operates in low power mode, an additional
 885:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         startup delay is incurred when waking up from Stop 1 mode.
 886:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         By keeping the internal regulator ON during Stop 1 mode, the consumption
 887:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is higher although the startup time is reduced.
 888:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param Regulator: Specifies the regulator state in Stop 1 mode.
 889:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 890:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_MAINREGULATOR_ON: Stop 1 mode with regulator ON
ARM GAS  /tmp/cceXXqTt.s 			page 57


 891:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: Stop 1 mode with low power regulator ON
 892:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter has no effect when entering stop mode 2.    
 893:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry: specifies if Stop mode in entered with WFI or WFE instruction.
 894:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 895:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 896:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction           
 897:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 898:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 899:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP1Mode(uint32_t Regulator, uint8_t STOPEntry)
 900:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2358              		.loc 1 900 0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 8
 2361              		@ frame_needed = 1, uses_anonymous_args = 0
 2362              		@ link register save eliminated.
 2363 0000 80B4     		push	{r7}
 2364              	.LCFI132:
 2365              		.cfi_def_cfa_offset 4
 2366              		.cfi_offset 7, -4
 2367 0002 83B0     		sub	sp, sp, #12
 2368              	.LCFI133:
 2369              		.cfi_def_cfa_offset 16
 2370 0004 00AF     		add	r7, sp, #0
 2371              	.LCFI134:
 2372              		.cfi_def_cfa_register 7
 2373 0006 7860     		str	r0, [r7, #4]
 2374 0008 0B46     		mov	r3, r1
 2375 000a FB70     		strb	r3, [r7, #3]
 901:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameters */
 902:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 903:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 904:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     
 905:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if (Regulator == PWR_MAINREGULATOR_ON)
 2376              		.loc 1 905 0
 2377 000c 7B68     		ldr	r3, [r7, #4]
 2378 000e 002B     		cmp	r3, #0
 2379 0010 06D1     		bne	.L173
 906:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 907:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Stop 1 mode with Main Regulator */
 908:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1MR);
 2380              		.loc 1 908 0
 2381 0012 144A     		ldr	r2, .L177
 2382 0014 134B     		ldr	r3, .L177
 2383 0016 1B68     		ldr	r3, [r3]
 2384 0018 23F00703 		bic	r3, r3, #7
 2385 001c 1360     		str	r3, [r2]
 2386 001e 07E0     		b	.L174
 2387              	.L173:
 909:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 910:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 911:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 912:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Stop 1 mode with Low-Power Regulator */
 913:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP1LPR);
 2388              		.loc 1 913 0
 2389 0020 104A     		ldr	r2, .L177
 2390 0022 104B     		ldr	r3, .L177
 2391 0024 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cceXXqTt.s 			page 58


 2392 0026 23F00703 		bic	r3, r3, #7
 2393 002a 43F00103 		orr	r3, r3, #1
 2394 002e 1360     		str	r3, [r2]
 2395              	.L174:
 914:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 915:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 916:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 917:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 2396              		.loc 1 917 0
 2397 0030 0D4A     		ldr	r2, .L177+4
 2398 0032 0D4B     		ldr	r3, .L177+4
 2399 0034 1B69     		ldr	r3, [r3, #16]
 2400 0036 43F00403 		orr	r3, r3, #4
 2401 003a 1361     		str	r3, [r2, #16]
 918:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 919:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 920:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2402              		.loc 1 920 0
 2403 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2404 003e 012B     		cmp	r3, #1
 2405 0040 01D1     		bne	.L175
 2406              	.LBB20:
 2407              	.LBB21:
 2408              		.file 2 "Drivers/CMSIS/Include/core_cmInstr.h"
   1:Drivers/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:Drivers/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:Drivers/CMSIS/Include/core_cmInstr.h ****  * @version  V4.10
   5:Drivers/CMSIS/Include/core_cmInstr.h ****  * @date     18. March 2015
   6:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   7:Drivers/CMSIS/Include/core_cmInstr.h ****  * @note
   8:Drivers/CMSIS/Include/core_cmInstr.h ****  *
   9:Drivers/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  10:Drivers/CMSIS/Include/core_cmInstr.h **** /* Copyright (c) 2009 - 2014 ARM LIMITED
  11:Drivers/CMSIS/Include/core_cmInstr.h **** 
  12:Drivers/CMSIS/Include/core_cmInstr.h ****    All rights reserved.
  13:Drivers/CMSIS/Include/core_cmInstr.h ****    Redistribution and use in source and binary forms, with or without
  14:Drivers/CMSIS/Include/core_cmInstr.h ****    modification, are permitted provided that the following conditions are met:
  15:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions of source code must retain the above copyright
  16:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer.
  17:Drivers/CMSIS/Include/core_cmInstr.h ****    - Redistributions in binary form must reproduce the above copyright
  18:Drivers/CMSIS/Include/core_cmInstr.h ****      notice, this list of conditions and the following disclaimer in the
  19:Drivers/CMSIS/Include/core_cmInstr.h ****      documentation and/or other materials provided with the distribution.
  20:Drivers/CMSIS/Include/core_cmInstr.h ****    - Neither the name of ARM nor the names of its contributors may be used
  21:Drivers/CMSIS/Include/core_cmInstr.h ****      to endorse or promote products derived from this software without
  22:Drivers/CMSIS/Include/core_cmInstr.h ****      specific prior written permission.
  23:Drivers/CMSIS/Include/core_cmInstr.h ****    *
  24:Drivers/CMSIS/Include/core_cmInstr.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  25:Drivers/CMSIS/Include/core_cmInstr.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  26:Drivers/CMSIS/Include/core_cmInstr.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  27:Drivers/CMSIS/Include/core_cmInstr.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  28:Drivers/CMSIS/Include/core_cmInstr.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  29:Drivers/CMSIS/Include/core_cmInstr.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  30:Drivers/CMSIS/Include/core_cmInstr.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  31:Drivers/CMSIS/Include/core_cmInstr.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  32:Drivers/CMSIS/Include/core_cmInstr.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  33:Drivers/CMSIS/Include/core_cmInstr.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
ARM GAS  /tmp/cceXXqTt.s 			page 59


  34:Drivers/CMSIS/Include/core_cmInstr.h ****    POSSIBILITY OF SUCH DAMAGE.
  35:Drivers/CMSIS/Include/core_cmInstr.h ****    ---------------------------------------------------------------------------*/
  36:Drivers/CMSIS/Include/core_cmInstr.h **** 
  37:Drivers/CMSIS/Include/core_cmInstr.h **** 
  38:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  39:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  40:Drivers/CMSIS/Include/core_cmInstr.h **** 
  41:Drivers/CMSIS/Include/core_cmInstr.h **** 
  42:Drivers/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  43:Drivers/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  44:Drivers/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  45:Drivers/CMSIS/Include/core_cmInstr.h ****   @{
  46:Drivers/CMSIS/Include/core_cmInstr.h **** */
  47:Drivers/CMSIS/Include/core_cmInstr.h **** 
  48:Drivers/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  49:Drivers/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  50:Drivers/CMSIS/Include/core_cmInstr.h **** 
  51:Drivers/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  52:Drivers/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  53:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
  54:Drivers/CMSIS/Include/core_cmInstr.h **** 
  55:Drivers/CMSIS/Include/core_cmInstr.h **** 
  56:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  57:Drivers/CMSIS/Include/core_cmInstr.h **** 
  58:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  59:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  60:Drivers/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  61:Drivers/CMSIS/Include/core_cmInstr.h **** 
  62:Drivers/CMSIS/Include/core_cmInstr.h **** 
  63:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  64:Drivers/CMSIS/Include/core_cmInstr.h **** 
  65:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  66:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  67:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  68:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  69:Drivers/CMSIS/Include/core_cmInstr.h **** 
  70:Drivers/CMSIS/Include/core_cmInstr.h **** 
  71:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  72:Drivers/CMSIS/Include/core_cmInstr.h **** 
  73:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  74:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  75:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  76:Drivers/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  77:Drivers/CMSIS/Include/core_cmInstr.h **** 
  78:Drivers/CMSIS/Include/core_cmInstr.h **** 
  79:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  80:Drivers/CMSIS/Include/core_cmInstr.h **** 
  81:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  82:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  83:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  84:Drivers/CMSIS/Include/core_cmInstr.h **** 
  85:Drivers/CMSIS/Include/core_cmInstr.h **** 
  86:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  87:Drivers/CMSIS/Include/core_cmInstr.h **** 
  88:Drivers/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor,
  89:Drivers/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or
  90:Drivers/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
ARM GAS  /tmp/cceXXqTt.s 			page 60


  91:Drivers/CMSIS/Include/core_cmInstr.h ****  */
  92:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ISB() do {\
  93:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  94:Drivers/CMSIS/Include/core_cmInstr.h ****                    __isb(0xF);\
  95:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
  96:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
  97:Drivers/CMSIS/Include/core_cmInstr.h **** 
  98:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  99:Drivers/CMSIS/Include/core_cmInstr.h **** 
 100:Drivers/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier.
 101:Drivers/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 102:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 103:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DSB() do {\
 104:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 105:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dsb(0xF);\
 106:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 107:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 108:Drivers/CMSIS/Include/core_cmInstr.h **** 
 109:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 110:Drivers/CMSIS/Include/core_cmInstr.h **** 
 111:Drivers/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before
 112:Drivers/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 113:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 114:Drivers/CMSIS/Include/core_cmInstr.h **** #define __DMB() do {\
 115:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 116:Drivers/CMSIS/Include/core_cmInstr.h ****                    __dmb(0xF);\
 117:Drivers/CMSIS/Include/core_cmInstr.h ****                    __schedule_barrier();\
 118:Drivers/CMSIS/Include/core_cmInstr.h ****                 } while (0)
 119:Drivers/CMSIS/Include/core_cmInstr.h **** 
 120:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 121:Drivers/CMSIS/Include/core_cmInstr.h **** 
 122:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 123:Drivers/CMSIS/Include/core_cmInstr.h **** 
 124:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 125:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 126:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 127:Drivers/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 128:Drivers/CMSIS/Include/core_cmInstr.h **** 
 129:Drivers/CMSIS/Include/core_cmInstr.h **** 
 130:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 131:Drivers/CMSIS/Include/core_cmInstr.h **** 
 132:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 133:Drivers/CMSIS/Include/core_cmInstr.h **** 
 134:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 135:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 136:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 137:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 138:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rev16_text"))) __STATIC_INLINE __ASM uint32_t __REV16(uint32_t value)
 139:Drivers/CMSIS/Include/core_cmInstr.h **** {
 140:Drivers/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 141:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 142:Drivers/CMSIS/Include/core_cmInstr.h **** }
 143:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 144:Drivers/CMSIS/Include/core_cmInstr.h **** 
 145:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 146:Drivers/CMSIS/Include/core_cmInstr.h **** 
 147:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
ARM GAS  /tmp/cceXXqTt.s 			page 61


 148:Drivers/CMSIS/Include/core_cmInstr.h **** 
 149:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 150:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 151:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 152:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 153:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".revsh_text"))) __STATIC_INLINE __ASM int32_t __REVSH(int32_t value)
 154:Drivers/CMSIS/Include/core_cmInstr.h **** {
 155:Drivers/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 156:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 157:Drivers/CMSIS/Include/core_cmInstr.h **** }
 158:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 159:Drivers/CMSIS/Include/core_cmInstr.h **** 
 160:Drivers/CMSIS/Include/core_cmInstr.h **** 
 161:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right in unsigned value (32 bit)
 162:Drivers/CMSIS/Include/core_cmInstr.h **** 
 163:Drivers/CMSIS/Include/core_cmInstr.h ****     This function Rotate Right (immediate) provides the value of the contents of a register rotated
 164:Drivers/CMSIS/Include/core_cmInstr.h **** 
 165:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 166:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Number of Bits to rotate
 167:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 168:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 169:Drivers/CMSIS/Include/core_cmInstr.h **** #define __ROR                             __ror
 170:Drivers/CMSIS/Include/core_cmInstr.h **** 
 171:Drivers/CMSIS/Include/core_cmInstr.h **** 
 172:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Breakpoint
 173:Drivers/CMSIS/Include/core_cmInstr.h **** 
 174:Drivers/CMSIS/Include/core_cmInstr.h ****     This function causes the processor to enter Debug state.
 175:Drivers/CMSIS/Include/core_cmInstr.h ****     Debug tools can use this to investigate system state when the instruction at a particular addre
 176:Drivers/CMSIS/Include/core_cmInstr.h **** 
 177:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  is ignored by the processor.
 178:Drivers/CMSIS/Include/core_cmInstr.h ****                    If required, a debugger can use it to store additional information about the bre
 179:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 180:Drivers/CMSIS/Include/core_cmInstr.h **** #define __BKPT(value)                       __breakpoint(value)
 181:Drivers/CMSIS/Include/core_cmInstr.h **** 
 182:Drivers/CMSIS/Include/core_cmInstr.h **** 
 183:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 184:Drivers/CMSIS/Include/core_cmInstr.h **** 
 185:Drivers/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 186:Drivers/CMSIS/Include/core_cmInstr.h **** 
 187:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 188:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 189:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 190:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 191:Drivers/CMSIS/Include/core_cmInstr.h ****   #define __RBIT                          __rbit
 192:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 193:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 194:Drivers/CMSIS/Include/core_cmInstr.h **** {
 195:Drivers/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 196:Drivers/CMSIS/Include/core_cmInstr.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; // extra shift needed at end
 197:Drivers/CMSIS/Include/core_cmInstr.h **** 
 198:Drivers/CMSIS/Include/core_cmInstr.h ****   result = value;                      // r will be reversed bits of v; first get LSB of v
 199:Drivers/CMSIS/Include/core_cmInstr.h ****   for (value >>= 1; value; value >>= 1)
 200:Drivers/CMSIS/Include/core_cmInstr.h ****   {
 201:Drivers/CMSIS/Include/core_cmInstr.h ****     result <<= 1;
 202:Drivers/CMSIS/Include/core_cmInstr.h ****     result |= value & 1;
 203:Drivers/CMSIS/Include/core_cmInstr.h ****     s--;
 204:Drivers/CMSIS/Include/core_cmInstr.h ****   }
ARM GAS  /tmp/cceXXqTt.s 			page 62


 205:Drivers/CMSIS/Include/core_cmInstr.h ****   result <<= s;                       // shift when v's highest bits are zero
 206:Drivers/CMSIS/Include/core_cmInstr.h ****   return(result);
 207:Drivers/CMSIS/Include/core_cmInstr.h **** }
 208:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 209:Drivers/CMSIS/Include/core_cmInstr.h **** 
 210:Drivers/CMSIS/Include/core_cmInstr.h **** 
 211:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 212:Drivers/CMSIS/Include/core_cmInstr.h **** 
 213:Drivers/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 214:Drivers/CMSIS/Include/core_cmInstr.h **** 
 215:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 216:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 217:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 218:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz
 219:Drivers/CMSIS/Include/core_cmInstr.h **** 
 220:Drivers/CMSIS/Include/core_cmInstr.h **** 
 221:Drivers/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300)
 222:Drivers/CMSIS/Include/core_cmInstr.h **** 
 223:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 224:Drivers/CMSIS/Include/core_cmInstr.h **** 
 225:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 8 bit value.
 226:Drivers/CMSIS/Include/core_cmInstr.h **** 
 227:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 228:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 229:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 230:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 231:Drivers/CMSIS/Include/core_cmInstr.h **** 
 232:Drivers/CMSIS/Include/core_cmInstr.h **** 
 233:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 234:Drivers/CMSIS/Include/core_cmInstr.h **** 
 235:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 16 bit values.
 236:Drivers/CMSIS/Include/core_cmInstr.h **** 
 237:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 238:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 239:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 240:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 241:Drivers/CMSIS/Include/core_cmInstr.h **** 
 242:Drivers/CMSIS/Include/core_cmInstr.h **** 
 243:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 244:Drivers/CMSIS/Include/core_cmInstr.h **** 
 245:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive LDR instruction for 32 bit values.
 246:Drivers/CMSIS/Include/core_cmInstr.h **** 
 247:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 248:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 249:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 250:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 251:Drivers/CMSIS/Include/core_cmInstr.h **** 
 252:Drivers/CMSIS/Include/core_cmInstr.h **** 
 253:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 254:Drivers/CMSIS/Include/core_cmInstr.h **** 
 255:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 8 bit values.
 256:Drivers/CMSIS/Include/core_cmInstr.h **** 
 257:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 258:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 259:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 260:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 261:Drivers/CMSIS/Include/core_cmInstr.h ****  */
ARM GAS  /tmp/cceXXqTt.s 			page 63


 262:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 263:Drivers/CMSIS/Include/core_cmInstr.h **** 
 264:Drivers/CMSIS/Include/core_cmInstr.h **** 
 265:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 266:Drivers/CMSIS/Include/core_cmInstr.h **** 
 267:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 16 bit values.
 268:Drivers/CMSIS/Include/core_cmInstr.h **** 
 269:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 270:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 271:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 272:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 273:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 274:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 275:Drivers/CMSIS/Include/core_cmInstr.h **** 
 276:Drivers/CMSIS/Include/core_cmInstr.h **** 
 277:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 278:Drivers/CMSIS/Include/core_cmInstr.h **** 
 279:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a exclusive STR instruction for 32 bit values.
 280:Drivers/CMSIS/Include/core_cmInstr.h **** 
 281:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 282:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 283:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 284:Drivers/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 285:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 286:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 287:Drivers/CMSIS/Include/core_cmInstr.h **** 
 288:Drivers/CMSIS/Include/core_cmInstr.h **** 
 289:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 290:Drivers/CMSIS/Include/core_cmInstr.h **** 
 291:Drivers/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 292:Drivers/CMSIS/Include/core_cmInstr.h **** 
 293:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 294:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 295:Drivers/CMSIS/Include/core_cmInstr.h **** 
 296:Drivers/CMSIS/Include/core_cmInstr.h **** 
 297:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 298:Drivers/CMSIS/Include/core_cmInstr.h **** 
 299:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 300:Drivers/CMSIS/Include/core_cmInstr.h **** 
 301:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 302:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 303:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 304:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 305:Drivers/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 306:Drivers/CMSIS/Include/core_cmInstr.h **** 
 307:Drivers/CMSIS/Include/core_cmInstr.h **** 
 308:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 309:Drivers/CMSIS/Include/core_cmInstr.h **** 
 310:Drivers/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 311:Drivers/CMSIS/Include/core_cmInstr.h **** 
 312:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 313:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 314:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 315:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 316:Drivers/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 317:Drivers/CMSIS/Include/core_cmInstr.h **** 
 318:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cceXXqTt.s 			page 64


 319:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Rotate Right with Extend (32 bit)
 320:Drivers/CMSIS/Include/core_cmInstr.h **** 
 321:Drivers/CMSIS/Include/core_cmInstr.h ****     This function moves each bit of a bitstring right by one bit.
 322:Drivers/CMSIS/Include/core_cmInstr.h ****     The carry input is shifted in at the left end of the bitstring.
 323:Drivers/CMSIS/Include/core_cmInstr.h **** 
 324:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to rotate
 325:Drivers/CMSIS/Include/core_cmInstr.h ****     \return               Rotated value
 326:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 327:Drivers/CMSIS/Include/core_cmInstr.h **** #ifndef __NO_EMBEDDED_ASM
 328:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((section(".rrx_text"))) __STATIC_INLINE __ASM uint32_t __RRX(uint32_t value)
 329:Drivers/CMSIS/Include/core_cmInstr.h **** {
 330:Drivers/CMSIS/Include/core_cmInstr.h ****   rrx r0, r0
 331:Drivers/CMSIS/Include/core_cmInstr.h ****   bx lr
 332:Drivers/CMSIS/Include/core_cmInstr.h **** }
 333:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 334:Drivers/CMSIS/Include/core_cmInstr.h **** 
 335:Drivers/CMSIS/Include/core_cmInstr.h **** 
 336:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (8 bit)
 337:Drivers/CMSIS/Include/core_cmInstr.h **** 
 338:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 8 bit value.
 339:Drivers/CMSIS/Include/core_cmInstr.h **** 
 340:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 341:Drivers/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 342:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 343:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRBT(ptr)                      ((uint8_t )  __ldrt(ptr))
 344:Drivers/CMSIS/Include/core_cmInstr.h **** 
 345:Drivers/CMSIS/Include/core_cmInstr.h **** 
 346:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (16 bit)
 347:Drivers/CMSIS/Include/core_cmInstr.h **** 
 348:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 16 bit values.
 349:Drivers/CMSIS/Include/core_cmInstr.h **** 
 350:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 351:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 352:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 353:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRHT(ptr)                      ((uint16_t)  __ldrt(ptr))
 354:Drivers/CMSIS/Include/core_cmInstr.h **** 
 355:Drivers/CMSIS/Include/core_cmInstr.h **** 
 356:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  LDRT Unprivileged (32 bit)
 357:Drivers/CMSIS/Include/core_cmInstr.h **** 
 358:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged LDRT instruction for 32 bit values.
 359:Drivers/CMSIS/Include/core_cmInstr.h **** 
 360:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 361:Drivers/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 362:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 363:Drivers/CMSIS/Include/core_cmInstr.h **** #define __LDRT(ptr)                       ((uint32_t ) __ldrt(ptr))
 364:Drivers/CMSIS/Include/core_cmInstr.h **** 
 365:Drivers/CMSIS/Include/core_cmInstr.h **** 
 366:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (8 bit)
 367:Drivers/CMSIS/Include/core_cmInstr.h **** 
 368:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 8 bit values.
 369:Drivers/CMSIS/Include/core_cmInstr.h **** 
 370:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 371:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 372:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 373:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRBT(value, ptr)               __strt(value, ptr)
 374:Drivers/CMSIS/Include/core_cmInstr.h **** 
 375:Drivers/CMSIS/Include/core_cmInstr.h **** 
ARM GAS  /tmp/cceXXqTt.s 			page 65


 376:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (16 bit)
 377:Drivers/CMSIS/Include/core_cmInstr.h **** 
 378:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 16 bit values.
 379:Drivers/CMSIS/Include/core_cmInstr.h **** 
 380:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 381:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 382:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 383:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRHT(value, ptr)               __strt(value, ptr)
 384:Drivers/CMSIS/Include/core_cmInstr.h **** 
 385:Drivers/CMSIS/Include/core_cmInstr.h **** 
 386:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  STRT Unprivileged (32 bit)
 387:Drivers/CMSIS/Include/core_cmInstr.h **** 
 388:Drivers/CMSIS/Include/core_cmInstr.h ****     This function executes a Unprivileged STRT instruction for 32 bit values.
 389:Drivers/CMSIS/Include/core_cmInstr.h **** 
 390:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 391:Drivers/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 392:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 393:Drivers/CMSIS/Include/core_cmInstr.h **** #define __STRT(value, ptr)                __strt(value, ptr)
 394:Drivers/CMSIS/Include/core_cmInstr.h **** 
 395:Drivers/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) || (__CORTEX_SC >= 300) */
 396:Drivers/CMSIS/Include/core_cmInstr.h **** 
 397:Drivers/CMSIS/Include/core_cmInstr.h **** 
 398:Drivers/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 399:Drivers/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 400:Drivers/CMSIS/Include/core_cmInstr.h **** 
 401:Drivers/CMSIS/Include/core_cmInstr.h **** /* Define macros for porting to both thumb1 and thumb2.
 402:Drivers/CMSIS/Include/core_cmInstr.h ****  * For thumb1, use low register (r0-r7), specified by constrant "l"
 403:Drivers/CMSIS/Include/core_cmInstr.h ****  * Otherwise, use general registers, specified by constrant "r" */
 404:Drivers/CMSIS/Include/core_cmInstr.h **** #if defined (__thumb__) && !defined (__thumb2__)
 405:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 406:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 407:Drivers/CMSIS/Include/core_cmInstr.h **** #else
 408:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 409:Drivers/CMSIS/Include/core_cmInstr.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 410:Drivers/CMSIS/Include/core_cmInstr.h **** #endif
 411:Drivers/CMSIS/Include/core_cmInstr.h **** 
 412:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 413:Drivers/CMSIS/Include/core_cmInstr.h **** 
 414:Drivers/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 415:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 416:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 417:Drivers/CMSIS/Include/core_cmInstr.h **** {
 418:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 419:Drivers/CMSIS/Include/core_cmInstr.h **** }
 420:Drivers/CMSIS/Include/core_cmInstr.h **** 
 421:Drivers/CMSIS/Include/core_cmInstr.h **** 
 422:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 423:Drivers/CMSIS/Include/core_cmInstr.h **** 
 424:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 425:Drivers/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 426:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 427:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 428:Drivers/CMSIS/Include/core_cmInstr.h **** {
 429:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 2409              		.loc 2 429 0
 2410              	@ 429 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2411 0042 30BF     		wfi
ARM GAS  /tmp/cceXXqTt.s 			page 66


 2412              	@ 0 "" 2
 2413              		.thumb
 2414              	.LBE21:
 2415              	.LBE20:
 2416 0044 02E0     		b	.L176
 2417              	.L175:
 2418              	.LBB22:
 2419              	.LBB23:
 430:Drivers/CMSIS/Include/core_cmInstr.h **** }
 431:Drivers/CMSIS/Include/core_cmInstr.h **** 
 432:Drivers/CMSIS/Include/core_cmInstr.h **** 
 433:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 434:Drivers/CMSIS/Include/core_cmInstr.h **** 
 435:Drivers/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 436:Drivers/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 437:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 438:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 439:Drivers/CMSIS/Include/core_cmInstr.h **** {
 440:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 441:Drivers/CMSIS/Include/core_cmInstr.h **** }
 442:Drivers/CMSIS/Include/core_cmInstr.h **** 
 443:Drivers/CMSIS/Include/core_cmInstr.h **** 
 444:Drivers/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 445:Drivers/CMSIS/Include/core_cmInstr.h **** 
 446:Drivers/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 447:Drivers/CMSIS/Include/core_cmInstr.h ****  */
 448:Drivers/CMSIS/Include/core_cmInstr.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 449:Drivers/CMSIS/Include/core_cmInstr.h **** {
 450:Drivers/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 2420              		.loc 2 450 0
 2421              	@ 450 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2422 0046 40BF     		sev
 2423              	@ 0 "" 2
 2424              		.thumb
 2425              	.LBE23:
 2426              	.LBE22:
 2427              	.LBB24:
 2428              	.LBB25:
 440:Drivers/CMSIS/Include/core_cmInstr.h **** }
 2429              		.loc 2 440 0
 2430              	@ 440 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2431 0048 20BF     		wfe
 2432              	@ 0 "" 2
 2433              		.thumb
 2434              	.LBE25:
 2435              	.LBE24:
 2436              	.LBB26:
 2437              	.LBB27:
 2438              	@ 440 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2439 004a 20BF     		wfe
 2440              	@ 0 "" 2
 2441              		.thumb
 2442              	.L176:
 2443              	.LBE27:
 2444              	.LBE26:
 921:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 922:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
ARM GAS  /tmp/cceXXqTt.s 			page 67


 923:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
 924:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 925:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 926:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 927:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 928:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 929:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 930:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 931:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 932:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 933:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 934:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 2445              		.loc 1 934 0
 2446 004c 064A     		ldr	r2, .L177+4
 2447 004e 064B     		ldr	r3, .L177+4
 2448 0050 1B69     		ldr	r3, [r3, #16]
 2449 0052 23F00403 		bic	r3, r3, #4
 2450 0056 1361     		str	r3, [r2, #16]
 935:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2451              		.loc 1 935 0
 2452 0058 0C37     		adds	r7, r7, #12
 2453              	.LCFI135:
 2454              		.cfi_def_cfa_offset 4
 2455 005a BD46     		mov	sp, r7
 2456              	.LCFI136:
 2457              		.cfi_def_cfa_register 13
 2458              		@ sp needed
 2459 005c 5DF8047B 		ldr	r7, [sp], #4
 2460              	.LCFI137:
 2461              		.cfi_restore 7
 2462              		.cfi_def_cfa_offset 0
 2463 0060 7047     		bx	lr
 2464              	.L178:
 2465 0062 00BF     		.align	2
 2466              	.L177:
 2467 0064 00700040 		.word	1073770496
 2468 0068 00ED00E0 		.word	-536810240
 2469              		.cfi_endproc
 2470              	.LFE154:
 2472              		.section	.text.HAL_PWREx_EnterSTOP2Mode,"ax",%progbits
 2473              		.align	2
 2474              		.global	HAL_PWREx_EnterSTOP2Mode
 2475              		.thumb
 2476              		.thumb_func
 2478              	HAL_PWREx_EnterSTOP2Mode:
 2479              	.LFB155:
 936:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 937:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 938:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 939:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Stop 2 mode.
 940:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Stop 2 mode, all I/O pins keep the same state as in Run mode.
 941:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  All clocks in the VCORE domain are stopped, the PLL, the MSI, 
 942:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with wakeup capability 
 943:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        (LCD, LPTIM1, I2C3 and LPUART) can switch on the HSI to receive a frame, and switch off 
 944:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        receiving the frame if it is not a wakeup frame. In this case the HSI clock is propagate
 945:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        to the peripheral requesting it.
 946:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and register contents are preserved.
ARM GAS  /tmp/cceXXqTt.s 			page 68


 947:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is available.   
 948:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The voltage regulator is set in low-power mode but LPR bit must be cleared to enter stop
 949:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        Otherwise, Stop 1 mode is entered.  
 950:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  When exiting Stop 2 mode by issuing an interrupt or a wakeup event,
 951:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 952:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.     
 953:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @param STOPEntry: specifies if Stop mode in entered with WFI or WFE instruction.
 954:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *          This parameter can be one of the following values:
 955:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_STOPENTRY_WFI: Enter Stop mode with WFI instruction
 956:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *            @arg PWR_STOPENTRY_WFE: Enter Stop mode with WFE instruction         
 957:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
 958:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
 959:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSTOP2Mode(uint8_t STOPEntry)
 960:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2480              		.loc 1 960 0
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 8
 2483              		@ frame_needed = 1, uses_anonymous_args = 0
 2484              		@ link register save eliminated.
 2485 0000 80B4     		push	{r7}
 2486              	.LCFI138:
 2487              		.cfi_def_cfa_offset 4
 2488              		.cfi_offset 7, -4
 2489 0002 83B0     		sub	sp, sp, #12
 2490              	.LCFI139:
 2491              		.cfi_def_cfa_offset 16
 2492 0004 00AF     		add	r7, sp, #0
 2493              	.LCFI140:
 2494              		.cfi_def_cfa_register 7
 2495 0006 0346     		mov	r3, r0
 2496 0008 FB71     		strb	r3, [r7, #7]
 961:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check the parameter */
 962:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 963:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 964:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Stop mode 2 */
 965:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STOP2);
 2497              		.loc 1 965 0
 2498 000a 104A     		ldr	r2, .L182
 2499 000c 0F4B     		ldr	r3, .L182
 2500 000e 1B68     		ldr	r3, [r3]
 2501 0010 23F00703 		bic	r3, r3, #7
 2502 0014 43F00203 		orr	r3, r3, #2
 2503 0018 1360     		str	r3, [r2]
 966:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 967:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 968:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 969:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
 2504              		.loc 1 969 0
 2505 001a 0D4A     		ldr	r2, .L182+4
 2506 001c 0C4B     		ldr	r3, .L182+4
 2507 001e 1B69     		ldr	r3, [r3, #16]
 2508 0020 43F00403 		orr	r3, r3, #4
 2509 0024 1361     		str	r3, [r2, #16]
 970:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 971:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Select Stop mode entry --------------------------------------------------*/
 972:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 2510              		.loc 1 972 0
ARM GAS  /tmp/cceXXqTt.s 			page 69


 2511 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2512 0028 012B     		cmp	r3, #1
 2513 002a 01D1     		bne	.L180
 2514              	.LBB28:
 2515              	.LBB29:
 429:Drivers/CMSIS/Include/core_cmInstr.h **** }
 2516              		.loc 2 429 0
 2517              	@ 429 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2518 002c 30BF     		wfi
 2519              	@ 0 "" 2
 2520              		.thumb
 2521              	.LBE29:
 2522              	.LBE28:
 2523 002e 02E0     		b	.L181
 2524              	.L180:
 2525              	.LBB30:
 2526              	.LBB31:
 2527              		.loc 2 450 0
 2528              	@ 450 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2529 0030 40BF     		sev
 2530              	@ 0 "" 2
 2531              		.thumb
 2532              	.LBE31:
 2533              	.LBE30:
 2534              	.LBB32:
 2535              	.LBB33:
 440:Drivers/CMSIS/Include/core_cmInstr.h **** }
 2536              		.loc 2 440 0
 2537              	@ 440 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2538 0032 20BF     		wfe
 2539              	@ 0 "" 2
 2540              		.thumb
 2541              	.LBE33:
 2542              	.LBE32:
 2543              	.LBB34:
 2544              	.LBB35:
 2545              	@ 440 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2546 0034 20BF     		wfe
 2547              	@ 0 "" 2
 2548              		.thumb
 2549              	.L181:
 2550              	.LBE35:
 2551              	.LBE34:
 973:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 974:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Interrupt */
 975:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFI();
 976:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 977:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   else
 978:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
 979:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Request Wait For Event */
 980:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __SEV();
 981:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 982:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __WFE();
 983:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
 984:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 985:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 986:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));  
ARM GAS  /tmp/cceXXqTt.s 			page 70


 2552              		.loc 1 986 0
 2553 0036 064A     		ldr	r2, .L182+4
 2554 0038 054B     		ldr	r3, .L182+4
 2555 003a 1B69     		ldr	r3, [r3, #16]
 2556 003c 23F00403 		bic	r3, r3, #4
 2557 0040 1361     		str	r3, [r2, #16]
 987:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2558              		.loc 1 987 0
 2559 0042 0C37     		adds	r7, r7, #12
 2560              	.LCFI141:
 2561              		.cfi_def_cfa_offset 4
 2562 0044 BD46     		mov	sp, r7
 2563              	.LCFI142:
 2564              		.cfi_def_cfa_register 13
 2565              		@ sp needed
 2566 0046 5DF8047B 		ldr	r7, [sp], #4
 2567              	.LCFI143:
 2568              		.cfi_restore 7
 2569              		.cfi_def_cfa_offset 0
 2570 004a 7047     		bx	lr
 2571              	.L183:
 2572              		.align	2
 2573              	.L182:
 2574 004c 00700040 		.word	1073770496
 2575 0050 00ED00E0 		.word	-536810240
 2576              		.cfi_endproc
 2577              	.LFE155:
 2579              		.section	.text.HAL_PWREx_EnterSHUTDOWNMode,"ax",%progbits
 2580              		.align	2
 2581              		.global	HAL_PWREx_EnterSHUTDOWNMode
 2582              		.thumb
 2583              		.thumb_func
 2585              	HAL_PWREx_EnterSHUTDOWNMode:
 2586              	.LFB156:
 988:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 989:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 990:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 991:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 992:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
 993:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
 994:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief Enter Shutdown mode. 
 995:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  In Shutdown mode, the PLL, the HSI, the MSI, the LSI and the HSE oscillators are switche
 996:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        off. The voltage regulator is disabled and Vcore domain is powered off. 
 997:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        SRAM1, SRAM2 and registers contents are lost except for registers in the Backup domain.
 998:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   *        The BOR is not available.  
 999:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
1000:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1001:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1002:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_EnterSHUTDOWNMode(void)
1003:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2587              		.loc 1 1003 0
 2588              		.cfi_startproc
 2589              		@ args = 0, pretend = 0, frame = 0
 2590              		@ frame_needed = 1, uses_anonymous_args = 0
 2591              		@ link register save eliminated.
 2592 0000 80B4     		push	{r7}
 2593              	.LCFI144:
ARM GAS  /tmp/cceXXqTt.s 			page 71


 2594              		.cfi_def_cfa_offset 4
 2595              		.cfi_offset 7, -4
 2596 0002 00AF     		add	r7, sp, #0
 2597              	.LCFI145:
 2598              		.cfi_def_cfa_register 7
1004:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1005:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set Shutdown mode */
1006:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_SHUTDOWN);
 2599              		.loc 1 1006 0
 2600 0004 094A     		ldr	r2, .L185
 2601 0006 094B     		ldr	r3, .L185
 2602 0008 1B68     		ldr	r3, [r3]
 2603 000a 23F00703 		bic	r3, r3, #7
 2604 000e 43F00403 		orr	r3, r3, #4
 2605 0012 1360     		str	r3, [r2]
1007:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   
1008:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
1009:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 2606              		.loc 1 1009 0
 2607 0014 064A     		ldr	r2, .L185+4
 2608 0016 064B     		ldr	r3, .L185+4
 2609 0018 1B69     		ldr	r3, [r3, #16]
 2610 001a 43F00403 		orr	r3, r3, #4
 2611 001e 1361     		str	r3, [r2, #16]
 2612              	.LBB36:
 2613              	.LBB37:
 429:Drivers/CMSIS/Include/core_cmInstr.h **** }
 2614              		.loc 2 429 0
 2615              	@ 429 "Drivers/CMSIS/Include/core_cmInstr.h" 1
 2616 0020 30BF     		wfi
 2617              	@ 0 "" 2
 2618              		.thumb
 2619              	.LBE37:
 2620              	.LBE36:
1010:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1011:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /* This option is used to ensure that store operations are completed */
1012:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined ( __CC_ARM)
1013:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __force_stores();
1014:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif
1015:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Request Wait For Interrupt */
1016:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   __WFI();
1017:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2621              		.loc 1 1017 0
 2622 0022 BD46     		mov	sp, r7
 2623              	.LCFI146:
 2624              		.cfi_def_cfa_register 13
 2625              		@ sp needed
 2626 0024 5DF8047B 		ldr	r7, [sp], #4
 2627              	.LCFI147:
 2628              		.cfi_restore 7
 2629              		.cfi_def_cfa_offset 0
 2630 0028 7047     		bx	lr
 2631              	.L186:
 2632 002a 00BF     		.align	2
 2633              	.L185:
 2634 002c 00700040 		.word	1073770496
 2635 0030 00ED00E0 		.word	-536810240
ARM GAS  /tmp/cceXXqTt.s 			page 72


 2636              		.cfi_endproc
 2637              	.LFE156:
 2639              		.section	.text.HAL_PWREx_PVD_PVM_IRQHandler,"ax",%progbits
 2640              		.align	2
 2641              		.global	HAL_PWREx_PVD_PVM_IRQHandler
 2642              		.thumb
 2643              		.thumb_func
 2645              	HAL_PWREx_PVD_PVM_IRQHandler:
 2646              	.LFB157:
1018:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1019:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1020:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1021:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1022:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1023:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief This function handles the PWR PVD/PVMx interrupt request.
1024:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @note This API should be called under the PVD_PVM_IRQHandler().  
1025:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1026:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1027:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** void HAL_PWREx_PVD_PVM_IRQHandler(void)
1028:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2647              		.loc 1 1028 0
 2648              		.cfi_startproc
 2649              		@ args = 0, pretend = 0, frame = 0
 2650              		@ frame_needed = 1, uses_anonymous_args = 0
 2651 0000 80B5     		push	{r7, lr}
 2652              	.LCFI148:
 2653              		.cfi_def_cfa_offset 8
 2654              		.cfi_offset 7, -8
 2655              		.cfi_offset 14, -4
 2656 0002 00AF     		add	r7, sp, #0
 2657              	.LCFI149:
 2658              		.cfi_def_cfa_register 7
1029:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Check PWR exti flag */
1030:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVD_EXTI_GET_FLAG() != RESET)
 2659              		.loc 1 1030 0
 2660 0004 1C4B     		ldr	r3, .L193
 2661 0006 5B69     		ldr	r3, [r3, #20]
 2662 0008 03F48033 		and	r3, r3, #65536
 2663 000c 002B     		cmp	r3, #0
 2664 000e 05D0     		beq	.L188
1031:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1032:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVD interrupt user callback */
1033:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWR_PVDCallback();
 2665              		.loc 1 1033 0
 2666 0010 FFF7FEFF 		bl	HAL_PWR_PVDCallback
1034:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1035:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVD exti pending bit */
1036:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVD_EXTI_CLEAR_FLAG();
 2667              		.loc 1 1036 0
 2668 0014 184B     		ldr	r3, .L193
 2669 0016 4FF48032 		mov	r2, #65536
 2670 001a 5A61     		str	r2, [r3, #20]
 2671              	.L188:
1037:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1038:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* Next, successively check PVMx exti flags */
1039:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32L486xx
1040:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM1_EXTI_GET_FLAG() != RESET) 
ARM GAS  /tmp/cceXXqTt.s 			page 73


 2672              		.loc 1 1040 0
 2673 001c 164B     		ldr	r3, .L193
 2674 001e 5B6B     		ldr	r3, [r3, #52]
 2675 0020 03F00803 		and	r3, r3, #8
 2676 0024 002B     		cmp	r3, #0
 2677 0026 04D0     		beq	.L189
1041:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1042:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM1 interrupt user callback */
1043:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM1Callback();
 2678              		.loc 1 1043 0
 2679 0028 FFF7FEFF 		bl	HAL_PWREx_PVM1Callback
1044:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1045:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM1 exti pending bit */
1046:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM1_EXTI_CLEAR_FLAG();
 2680              		.loc 1 1046 0
 2681 002c 124B     		ldr	r3, .L193
 2682 002e 0822     		movs	r2, #8
 2683 0030 5A63     		str	r2, [r3, #52]
 2684              	.L189:
1047:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1048:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32
1049:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM2_EXTI_GET_FLAG() != RESET) 
 2685              		.loc 1 1049 0
 2686 0032 114B     		ldr	r3, .L193
 2687 0034 5B6B     		ldr	r3, [r3, #52]
 2688 0036 03F01003 		and	r3, r3, #16
 2689 003a 002B     		cmp	r3, #0
 2690 003c 04D0     		beq	.L190
1050:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1051:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM2 interrupt user callback */
1052:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM2Callback();
 2691              		.loc 1 1052 0
 2692 003e FFF7FEFF 		bl	HAL_PWREx_PVM2Callback
1053:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1054:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM2 exti pending bit */
1055:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM2_EXTI_CLEAR_FLAG();
 2693              		.loc 1 1055 0
 2694 0042 0D4B     		ldr	r3, .L193
 2695 0044 1022     		movs	r2, #16
 2696 0046 5A63     		str	r2, [r3, #52]
 2697              	.L190:
1056:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1057:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM3_EXTI_GET_FLAG() != RESET) 
 2698              		.loc 1 1057 0
 2699 0048 0B4B     		ldr	r3, .L193
 2700 004a 5B6B     		ldr	r3, [r3, #52]
 2701 004c 03F02003 		and	r3, r3, #32
 2702 0050 002B     		cmp	r3, #0
 2703 0052 04D0     		beq	.L191
1058:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1059:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM3 interrupt user callback */
1060:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM3Callback();
 2704              		.loc 1 1060 0
 2705 0054 FFF7FEFF 		bl	HAL_PWREx_PVM3Callback
1061:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1062:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM3 exti pending bit */
1063:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM3_EXTI_CLEAR_FLAG();
ARM GAS  /tmp/cceXXqTt.s 			page 74


 2706              		.loc 1 1063 0
 2707 0058 074B     		ldr	r3, .L193
 2708 005a 2022     		movs	r2, #32
 2709 005c 5A63     		str	r2, [r3, #52]
 2710              	.L191:
1064:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }
1065:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   if(__HAL_PWR_PVM4_EXTI_GET_FLAG() != RESET) 
 2711              		.loc 1 1065 0
 2712 005e 064B     		ldr	r3, .L193
 2713 0060 5B6B     		ldr	r3, [r3, #52]
 2714 0062 03F04003 		and	r3, r3, #64
 2715 0066 002B     		cmp	r3, #0
 2716 0068 04D0     		beq	.L187
1066:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   {
1067:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* PWR PVM4 interrupt user callback */
1068:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     HAL_PWREx_PVM4Callback();
 2717              		.loc 1 1068 0
 2718 006a FFF7FEFF 		bl	HAL_PWREx_PVM4Callback
1069:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    
1070:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     /* Clear PVM4 exti pending bit */
1071:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****     __HAL_PWR_PVM4_EXTI_CLEAR_FLAG();
 2719              		.loc 1 1071 0
 2720 006e 024B     		ldr	r3, .L193
 2721 0070 4022     		movs	r2, #64
 2722 0072 5A63     		str	r2, [r3, #52]
 2723              	.L187:
1072:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   }      
1073:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2724              		.loc 1 1073 0
 2725 0074 80BD     		pop	{r7, pc}
 2726              	.L194:
 2727 0076 00BF     		.align	2
 2728              	.L193:
 2729 0078 00040140 		.word	1073808384
 2730              		.cfi_endproc
 2731              	.LFE157:
 2733              		.section	.text.HAL_PWREx_PVM1Callback,"ax",%progbits
 2734              		.align	2
 2735              		.weak	HAL_PWREx_PVM1Callback
 2736              		.thumb
 2737              		.thumb_func
 2739              	HAL_PWREx_PVM1Callback:
 2740              	.LFB158:
1074:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1075:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1076:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #if defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32L486xx
1077:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1078:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM1 interrupt callback
1079:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1080:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1081:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM1Callback(void)
1082:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2741              		.loc 1 1082 0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 0
 2744              		@ frame_needed = 1, uses_anonymous_args = 0
 2745              		@ link register save eliminated.
ARM GAS  /tmp/cceXXqTt.s 			page 75


 2746 0000 80B4     		push	{r7}
 2747              	.LCFI150:
 2748              		.cfi_def_cfa_offset 4
 2749              		.cfi_offset 7, -4
 2750 0002 00AF     		add	r7, sp, #0
 2751              	.LCFI151:
 2752              		.cfi_def_cfa_register 7
1083:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1084:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM1Callback() API can be implemented in the user file
1085:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1086:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2753              		.loc 1 1086 0
 2754 0004 BD46     		mov	sp, r7
 2755              	.LCFI152:
 2756              		.cfi_def_cfa_register 13
 2757              		@ sp needed
 2758 0006 5DF8047B 		ldr	r7, [sp], #4
 2759              	.LCFI153:
 2760              		.cfi_restore 7
 2761              		.cfi_def_cfa_offset 0
 2762 000a 7047     		bx	lr
 2763              		.cfi_endproc
 2764              	.LFE158:
 2766              		.section	.text.HAL_PWREx_PVM2Callback,"ax",%progbits
 2767              		.align	2
 2768              		.weak	HAL_PWREx_PVM2Callback
 2769              		.thumb
 2770              		.thumb_func
 2772              	HAL_PWREx_PVM2Callback:
 2773              	.LFB159:
1087:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** #endif /* defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx) || defined (STM32
1088:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1089:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1090:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM2 interrupt callback
1091:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1092:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1093:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM2Callback(void)
1094:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2774              		.loc 1 1094 0
 2775              		.cfi_startproc
 2776              		@ args = 0, pretend = 0, frame = 0
 2777              		@ frame_needed = 1, uses_anonymous_args = 0
 2778              		@ link register save eliminated.
 2779 0000 80B4     		push	{r7}
 2780              	.LCFI154:
 2781              		.cfi_def_cfa_offset 4
 2782              		.cfi_offset 7, -4
 2783 0002 00AF     		add	r7, sp, #0
 2784              	.LCFI155:
 2785              		.cfi_def_cfa_register 7
1095:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1096:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM2Callback() API can be implemented in the user file
1097:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1098:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2786              		.loc 1 1098 0
 2787 0004 BD46     		mov	sp, r7
 2788              	.LCFI156:
ARM GAS  /tmp/cceXXqTt.s 			page 76


 2789              		.cfi_def_cfa_register 13
 2790              		@ sp needed
 2791 0006 5DF8047B 		ldr	r7, [sp], #4
 2792              	.LCFI157:
 2793              		.cfi_restore 7
 2794              		.cfi_def_cfa_offset 0
 2795 000a 7047     		bx	lr
 2796              		.cfi_endproc
 2797              	.LFE159:
 2799              		.section	.text.HAL_PWREx_PVM3Callback,"ax",%progbits
 2800              		.align	2
 2801              		.weak	HAL_PWREx_PVM3Callback
 2802              		.thumb
 2803              		.thumb_func
 2805              	HAL_PWREx_PVM3Callback:
 2806              	.LFB160:
1099:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1100:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1101:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM3 interrupt callback
1102:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1103:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1104:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM3Callback(void)
1105:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2807              		.loc 1 1105 0
 2808              		.cfi_startproc
 2809              		@ args = 0, pretend = 0, frame = 0
 2810              		@ frame_needed = 1, uses_anonymous_args = 0
 2811              		@ link register save eliminated.
 2812 0000 80B4     		push	{r7}
 2813              	.LCFI158:
 2814              		.cfi_def_cfa_offset 4
 2815              		.cfi_offset 7, -4
 2816 0002 00AF     		add	r7, sp, #0
 2817              	.LCFI159:
 2818              		.cfi_def_cfa_register 7
1106:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1107:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM3Callback() API can be implemented in the user file
1108:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1109:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2819              		.loc 1 1109 0
 2820 0004 BD46     		mov	sp, r7
 2821              	.LCFI160:
 2822              		.cfi_def_cfa_register 13
 2823              		@ sp needed
 2824 0006 5DF8047B 		ldr	r7, [sp], #4
 2825              	.LCFI161:
 2826              		.cfi_restore 7
 2827              		.cfi_def_cfa_offset 0
 2828 000a 7047     		bx	lr
 2829              		.cfi_endproc
 2830              	.LFE160:
 2832              		.section	.text.HAL_PWREx_PVM4Callback,"ax",%progbits
 2833              		.align	2
 2834              		.weak	HAL_PWREx_PVM4Callback
 2835              		.thumb
 2836              		.thumb_func
 2838              	HAL_PWREx_PVM4Callback:
ARM GAS  /tmp/cceXXqTt.s 			page 77


 2839              	.LFB161:
1110:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** 
1111:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** /**
1112:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @brief PWR PVM4 interrupt callback
1113:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   * @retval None
1114:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   */
1115:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** __weak void HAL_PWREx_PVM4Callback(void)
1116:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** {
 2840              		.loc 1 1116 0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 0
 2843              		@ frame_needed = 1, uses_anonymous_args = 0
 2844              		@ link register save eliminated.
 2845 0000 80B4     		push	{r7}
 2846              	.LCFI162:
 2847              		.cfi_def_cfa_offset 4
 2848              		.cfi_offset 7, -4
 2849 0002 00AF     		add	r7, sp, #0
 2850              	.LCFI163:
 2851              		.cfi_def_cfa_register 7
1117:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1118:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****             HAL_PWREx_PVM4Callback() API can be implemented in the user file
1119:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c ****    */
1120:Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr_ex.c **** }
 2852              		.loc 1 1120 0
 2853 0004 BD46     		mov	sp, r7
 2854              	.LCFI164:
 2855              		.cfi_def_cfa_register 13
 2856              		@ sp needed
 2857 0006 5DF8047B 		ldr	r7, [sp], #4
 2858              	.LCFI165:
 2859              		.cfi_restore 7
 2860              		.cfi_def_cfa_offset 0
 2861 000a 7047     		bx	lr
 2862              		.cfi_endproc
 2863              	.LFE161:
 2865              		.text
 2866              	.Letext0:
 2867              		.file 3 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/machine/_default_types.h"
 2868              		.file 4 "/opt/gcc-arm-none-eabi-4_9-2015q3/arm-none-eabi/include/sys/_stdint.h"
 2869              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 2870              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2871              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2872              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2873              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2874              		.file 10 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
ARM GAS  /tmp/cceXXqTt.s 			page 78


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_pwr_ex.c
     /tmp/cceXXqTt.s:20     .text.HAL_PWREx_GetVoltageRange:00000000 $t
     /tmp/cceXXqTt.s:25     .text.HAL_PWREx_GetVoltageRange:00000000 HAL_PWREx_GetVoltageRange
     /tmp/cceXXqTt.s:58     .text.HAL_PWREx_GetVoltageRange:00000018 $d
     /tmp/cceXXqTt.s:63     .text.HAL_PWREx_ControlVoltageScaling:00000000 $t
     /tmp/cceXXqTt.s:68     .text.HAL_PWREx_ControlVoltageScaling:00000000 HAL_PWREx_ControlVoltageScaling
     /tmp/cceXXqTt.s:178    .text.HAL_PWREx_ControlVoltageScaling:0000009c $d
     /tmp/cceXXqTt.s:185    .text.HAL_PWREx_EnableBatteryCharging:00000000 $t
     /tmp/cceXXqTt.s:190    .text.HAL_PWREx_EnableBatteryCharging:00000000 HAL_PWREx_EnableBatteryCharging
     /tmp/cceXXqTt.s:238    .text.HAL_PWREx_EnableBatteryCharging:00000030 $d
     /tmp/cceXXqTt.s:243    .text.HAL_PWREx_DisableBatteryCharging:00000000 $t
     /tmp/cceXXqTt.s:248    .text.HAL_PWREx_DisableBatteryCharging:00000000 HAL_PWREx_DisableBatteryCharging
     /tmp/cceXXqTt.s:281    .text.HAL_PWREx_DisableBatteryCharging:00000018 $d
     /tmp/cceXXqTt.s:286    .text.HAL_PWREx_EnableVddUSB:00000000 $t
     /tmp/cceXXqTt.s:291    .text.HAL_PWREx_EnableVddUSB:00000000 HAL_PWREx_EnableVddUSB
     /tmp/cceXXqTt.s:324    .text.HAL_PWREx_EnableVddUSB:00000018 $d
     /tmp/cceXXqTt.s:329    .text.HAL_PWREx_DisableVddUSB:00000000 $t
     /tmp/cceXXqTt.s:334    .text.HAL_PWREx_DisableVddUSB:00000000 HAL_PWREx_DisableVddUSB
     /tmp/cceXXqTt.s:367    .text.HAL_PWREx_DisableVddUSB:00000018 $d
     /tmp/cceXXqTt.s:372    .text.HAL_PWREx_EnableVddIO2:00000000 $t
     /tmp/cceXXqTt.s:377    .text.HAL_PWREx_EnableVddIO2:00000000 HAL_PWREx_EnableVddIO2
     /tmp/cceXXqTt.s:410    .text.HAL_PWREx_EnableVddIO2:00000018 $d
     /tmp/cceXXqTt.s:415    .text.HAL_PWREx_DisableVddIO2:00000000 $t
     /tmp/cceXXqTt.s:420    .text.HAL_PWREx_DisableVddIO2:00000000 HAL_PWREx_DisableVddIO2
     /tmp/cceXXqTt.s:453    .text.HAL_PWREx_DisableVddIO2:00000018 $d
     /tmp/cceXXqTt.s:458    .text.HAL_PWREx_EnableInternalWakeUpLine:00000000 $t
     /tmp/cceXXqTt.s:463    .text.HAL_PWREx_EnableInternalWakeUpLine:00000000 HAL_PWREx_EnableInternalWakeUpLine
     /tmp/cceXXqTt.s:496    .text.HAL_PWREx_EnableInternalWakeUpLine:00000018 $d
     /tmp/cceXXqTt.s:501    .text.HAL_PWREx_DisableInternalWakeUpLine:00000000 $t
     /tmp/cceXXqTt.s:506    .text.HAL_PWREx_DisableInternalWakeUpLine:00000000 HAL_PWREx_DisableInternalWakeUpLine
     /tmp/cceXXqTt.s:539    .text.HAL_PWREx_DisableInternalWakeUpLine:00000018 $d
     /tmp/cceXXqTt.s:544    .text.HAL_PWREx_EnableGPIOPullUp:00000000 $t
     /tmp/cceXXqTt.s:549    .text.HAL_PWREx_EnableGPIOPullUp:00000000 HAL_PWREx_EnableGPIOPullUp
     /tmp/cceXXqTt.s:576    .text.HAL_PWREx_EnableGPIOPullUp:00000018 $d
     /tmp/cceXXqTt.s:584    .text.HAL_PWREx_EnableGPIOPullUp:00000038 $t
     /tmp/cceXXqTt.s:759    .text.HAL_PWREx_EnableGPIOPullUp:00000140 $d
     /tmp/cceXXqTt.s:764    .text.HAL_PWREx_DisableGPIOPullUp:00000000 $t
     /tmp/cceXXqTt.s:769    .text.HAL_PWREx_DisableGPIOPullUp:00000000 HAL_PWREx_DisableGPIOPullUp
     /tmp/cceXXqTt.s:796    .text.HAL_PWREx_DisableGPIOPullUp:00000018 $d
     /tmp/cceXXqTt.s:804    .text.HAL_PWREx_DisableGPIOPullUp:00000038 $t
     /tmp/cceXXqTt.s:920    .text.HAL_PWREx_DisableGPIOPullUp:000000d4 $d
     /tmp/cceXXqTt.s:925    .text.HAL_PWREx_EnableGPIOPullDown:00000000 $t
     /tmp/cceXXqTt.s:930    .text.HAL_PWREx_EnableGPIOPullDown:00000000 HAL_PWREx_EnableGPIOPullDown
     /tmp/cceXXqTt.s:957    .text.HAL_PWREx_EnableGPIOPullDown:00000018 $d
     /tmp/cceXXqTt.s:965    .text.HAL_PWREx_EnableGPIOPullDown:00000038 $t
     /tmp/cceXXqTt.s:1140   .text.HAL_PWREx_EnableGPIOPullDown:00000140 $d
     /tmp/cceXXqTt.s:1145   .text.HAL_PWREx_DisableGPIOPullDown:00000000 $t
     /tmp/cceXXqTt.s:1150   .text.HAL_PWREx_DisableGPIOPullDown:00000000 HAL_PWREx_DisableGPIOPullDown
     /tmp/cceXXqTt.s:1177   .text.HAL_PWREx_DisableGPIOPullDown:00000018 $d
     /tmp/cceXXqTt.s:1185   .text.HAL_PWREx_DisableGPIOPullDown:00000038 $t
     /tmp/cceXXqTt.s:1302   .text.HAL_PWREx_DisableGPIOPullDown:000000d8 $d
     /tmp/cceXXqTt.s:1307   .text.HAL_PWREx_EnablePullUpPullDownConfig:00000000 $t
     /tmp/cceXXqTt.s:1312   .text.HAL_PWREx_EnablePullUpPullDownConfig:00000000 HAL_PWREx_EnablePullUpPullDownConfig
     /tmp/cceXXqTt.s:1345   .text.HAL_PWREx_EnablePullUpPullDownConfig:00000018 $d
     /tmp/cceXXqTt.s:1350   .text.HAL_PWREx_DisablePullUpPullDownConfig:00000000 $t
     /tmp/cceXXqTt.s:1355   .text.HAL_PWREx_DisablePullUpPullDownConfig:00000000 HAL_PWREx_DisablePullUpPullDownConfig
ARM GAS  /tmp/cceXXqTt.s 			page 79


     /tmp/cceXXqTt.s:1388   .text.HAL_PWREx_DisablePullUpPullDownConfig:00000018 $d
     /tmp/cceXXqTt.s:1393   .text.HAL_PWREx_EnableSRAM2ContentRetention:00000000 $t
     /tmp/cceXXqTt.s:1398   .text.HAL_PWREx_EnableSRAM2ContentRetention:00000000 HAL_PWREx_EnableSRAM2ContentRetention
     /tmp/cceXXqTt.s:1431   .text.HAL_PWREx_EnableSRAM2ContentRetention:00000018 $d
     /tmp/cceXXqTt.s:1436   .text.HAL_PWREx_DisableSRAM2ContentRetention:00000000 $t
     /tmp/cceXXqTt.s:1441   .text.HAL_PWREx_DisableSRAM2ContentRetention:00000000 HAL_PWREx_DisableSRAM2ContentRetention
     /tmp/cceXXqTt.s:1474   .text.HAL_PWREx_DisableSRAM2ContentRetention:00000018 $d
     /tmp/cceXXqTt.s:1479   .text.HAL_PWREx_EnablePVM1:00000000 $t
     /tmp/cceXXqTt.s:1484   .text.HAL_PWREx_EnablePVM1:00000000 HAL_PWREx_EnablePVM1
     /tmp/cceXXqTt.s:1517   .text.HAL_PWREx_EnablePVM1:00000018 $d
     /tmp/cceXXqTt.s:1522   .text.HAL_PWREx_DisablePVM1:00000000 $t
     /tmp/cceXXqTt.s:1527   .text.HAL_PWREx_DisablePVM1:00000000 HAL_PWREx_DisablePVM1
     /tmp/cceXXqTt.s:1560   .text.HAL_PWREx_DisablePVM1:00000018 $d
     /tmp/cceXXqTt.s:1565   .text.HAL_PWREx_EnablePVM2:00000000 $t
     /tmp/cceXXqTt.s:1570   .text.HAL_PWREx_EnablePVM2:00000000 HAL_PWREx_EnablePVM2
     /tmp/cceXXqTt.s:1603   .text.HAL_PWREx_EnablePVM2:00000018 $d
     /tmp/cceXXqTt.s:1608   .text.HAL_PWREx_DisablePVM2:00000000 $t
     /tmp/cceXXqTt.s:1613   .text.HAL_PWREx_DisablePVM2:00000000 HAL_PWREx_DisablePVM2
     /tmp/cceXXqTt.s:1646   .text.HAL_PWREx_DisablePVM2:00000018 $d
     /tmp/cceXXqTt.s:1651   .text.HAL_PWREx_EnablePVM3:00000000 $t
     /tmp/cceXXqTt.s:1656   .text.HAL_PWREx_EnablePVM3:00000000 HAL_PWREx_EnablePVM3
     /tmp/cceXXqTt.s:1689   .text.HAL_PWREx_EnablePVM3:00000018 $d
     /tmp/cceXXqTt.s:1694   .text.HAL_PWREx_DisablePVM3:00000000 $t
     /tmp/cceXXqTt.s:1699   .text.HAL_PWREx_DisablePVM3:00000000 HAL_PWREx_DisablePVM3
     /tmp/cceXXqTt.s:1732   .text.HAL_PWREx_DisablePVM3:00000018 $d
     /tmp/cceXXqTt.s:1737   .text.HAL_PWREx_EnablePVM4:00000000 $t
     /tmp/cceXXqTt.s:1742   .text.HAL_PWREx_EnablePVM4:00000000 HAL_PWREx_EnablePVM4
     /tmp/cceXXqTt.s:1775   .text.HAL_PWREx_EnablePVM4:00000018 $d
     /tmp/cceXXqTt.s:1780   .text.HAL_PWREx_DisablePVM4:00000000 $t
     /tmp/cceXXqTt.s:1785   .text.HAL_PWREx_DisablePVM4:00000000 HAL_PWREx_DisablePVM4
     /tmp/cceXXqTt.s:1818   .text.HAL_PWREx_DisablePVM4:00000018 $d
     /tmp/cceXXqTt.s:1823   .text.HAL_PWREx_ConfigPVM:00000000 $t
     /tmp/cceXXqTt.s:1828   .text.HAL_PWREx_ConfigPVM:00000000 HAL_PWREx_ConfigPVM
     /tmp/cceXXqTt.s:2207   .text.HAL_PWREx_ConfigPVM:0000028c $d
     /tmp/cceXXqTt.s:2212   .text.HAL_PWREx_EnableLowPowerRunMode:00000000 $t
     /tmp/cceXXqTt.s:2217   .text.HAL_PWREx_EnableLowPowerRunMode:00000000 HAL_PWREx_EnableLowPowerRunMode
     /tmp/cceXXqTt.s:2250   .text.HAL_PWREx_EnableLowPowerRunMode:00000018 $d
     /tmp/cceXXqTt.s:2255   .text.HAL_PWREx_DisableLowPowerRunMode:00000000 $t
     /tmp/cceXXqTt.s:2260   .text.HAL_PWREx_DisableLowPowerRunMode:00000000 HAL_PWREx_DisableLowPowerRunMode
     /tmp/cceXXqTt.s:2344   .text.HAL_PWREx_DisableLowPowerRunMode:00000064 $d
     /tmp/cceXXqTt.s:2351   .text.HAL_PWREx_EnterSTOP1Mode:00000000 $t
     /tmp/cceXXqTt.s:2356   .text.HAL_PWREx_EnterSTOP1Mode:00000000 HAL_PWREx_EnterSTOP1Mode
     /tmp/cceXXqTt.s:2467   .text.HAL_PWREx_EnterSTOP1Mode:00000064 $d
     /tmp/cceXXqTt.s:2473   .text.HAL_PWREx_EnterSTOP2Mode:00000000 $t
     /tmp/cceXXqTt.s:2478   .text.HAL_PWREx_EnterSTOP2Mode:00000000 HAL_PWREx_EnterSTOP2Mode
     /tmp/cceXXqTt.s:2574   .text.HAL_PWREx_EnterSTOP2Mode:0000004c $d
     /tmp/cceXXqTt.s:2580   .text.HAL_PWREx_EnterSHUTDOWNMode:00000000 $t
     /tmp/cceXXqTt.s:2585   .text.HAL_PWREx_EnterSHUTDOWNMode:00000000 HAL_PWREx_EnterSHUTDOWNMode
     /tmp/cceXXqTt.s:2634   .text.HAL_PWREx_EnterSHUTDOWNMode:0000002c $d
     /tmp/cceXXqTt.s:2640   .text.HAL_PWREx_PVD_PVM_IRQHandler:00000000 $t
     /tmp/cceXXqTt.s:2645   .text.HAL_PWREx_PVD_PVM_IRQHandler:00000000 HAL_PWREx_PVD_PVM_IRQHandler
     /tmp/cceXXqTt.s:2739   .text.HAL_PWREx_PVM1Callback:00000000 HAL_PWREx_PVM1Callback
     /tmp/cceXXqTt.s:2772   .text.HAL_PWREx_PVM2Callback:00000000 HAL_PWREx_PVM2Callback
     /tmp/cceXXqTt.s:2805   .text.HAL_PWREx_PVM3Callback:00000000 HAL_PWREx_PVM3Callback
     /tmp/cceXXqTt.s:2838   .text.HAL_PWREx_PVM4Callback:00000000 HAL_PWREx_PVM4Callback
     /tmp/cceXXqTt.s:2729   .text.HAL_PWREx_PVD_PVM_IRQHandler:00000078 $d
     /tmp/cceXXqTt.s:2734   .text.HAL_PWREx_PVM1Callback:00000000 $t
ARM GAS  /tmp/cceXXqTt.s 			page 80


     /tmp/cceXXqTt.s:2767   .text.HAL_PWREx_PVM2Callback:00000000 $t
     /tmp/cceXXqTt.s:2800   .text.HAL_PWREx_PVM3Callback:00000000 $t
     /tmp/cceXXqTt.s:2833   .text.HAL_PWREx_PVM4Callback:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_PWR_PVDCallback
